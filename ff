if Library and Library.Unload then
	Library:Unload()
end
--
local Workspace = cloneref(game:GetService("Workspace"))
local HttpService = cloneref(game:GetService("HttpService"))
local Players = cloneref(game:GetService("Players"))
local TweenService = cloneref(game:GetService("TweenService"))
local RunService = cloneref(game:GetService("RunService"))
local CoreGui = cloneref(game:GetService("CoreGui"))
local UserInputService = cloneref(game:GetService("UserInputService"))
local Stats = cloneref(game:GetService("Stats"))
local TeleportService = cloneref(game:GetService("TeleportService"))
--
if not game:IsLoaded() then
	game.Loaded:Wait()
end
--
if not isfolder("Elevated") then
    makefolder("Elevated") 
end
--
if not isfolder("Elevated/Configs") then
    makefolder("Elevated/Configs")
end
--
if not isfolder("Elevated/Fonts") then
    makefolder("Elevated/Fonts")
end
--
local Network = settings():GetService("NetworkSettings")
--
local Client = Players.LocalPlayer
local Camera = Workspace:FindFirstChildWhichIsA("Camera")
local NewFonts = {
	{ID = "Proggy.ttf", Font = "Proggy.font", URL = "https://github.com/LuckyHub1/LuckyHub/raw/main/ProggyClean.ttf", Name = "Proggy"},
	{ID = "ProggyTiny.ttf", Font = "ProggyTiny.font", URL = "https://github.com/LuckyHub1/LuckyHub/raw/main/ProggyTiny.ttf", Name = "ProggyTiny"},
	{ID = "Plex.ttf", Font = "Plex.font", URL = "https://github.com/LuckyHub1/LuckyHub/raw/main/Plex.ttf", Name = "Plex"},
	{ID = "Pixel.ttf", Font = "Pixel.font", URL = "https://github.com/LuckyHub1/LuckyHub/raw/main/Pixel.ttf", Name = "Pixel"},
	{ID = "Verdana.ttf", Font = "Verdana.font", URL = "https://github.com/LuckyHub1/LuckyHub/raw/main/Verdana.ttf", Name = "Verdana"},
}
--
do -- Fonts
    for _, Font in NewFonts do
        if not isfile("Elevated/Fonts/" .. Font.ID) then
            writefile("Elevated/Fonts/" .. Font.ID, game:HttpGet(Font.URL))
        end
        --
        if not isfile(Font.Font) then
            local Config = {
                name = Font.Name,
                faces = {{
                    name = "Regular",
                    weight = 200,
                    style = "normal",
                }}
            }
            --
            writefile("Elevated/Fonts/" .. Font.Font, HttpService:JSONEncode(Config))
        end
    end
end
--
local CustomFonts = {
    [1] = Font.new(getcustomasset("LuckyHub/Fonts/Plex.font"), Enum.FontWeight.Regular),
    [2] = Font.new(getcustomasset("LuckyHub/Fonts/Pixel.font"), Enum.FontWeight.Regular),
    [3] = Font.new(getcustomasset("LuckyHub/Fonts/Proggy.font"), Enum.FontWeight.Regular),
    [4] = Font.new(getcustomasset("LuckyHub/Fonts/Verdana.font"), Enum.FontWeight.Regular),
    [5] = Font.new(getcustomasset("LuckyHub/Fonts/ProggyTiny.font"), Enum.FontWeight.Regular),
}
--
local Fonts = {
    ["Plex"] = {Font = 1, TextSize = 14},
    ["Pixel"] = {Font = 2, TextSize = 12},
    ["Proggy Clean"] = {Font = 3, TextSize = 12},
    ["Verdana"] = {Font = 4, TextSize = 14},
    ["Proggy Tiny"] = {Font = 5, TextSize = 11},
}
--
do -- Menu
	local Viewport = Camera.ViewportSize
	--
	getgenv().Library = {
		Connections = {},
        Errors = {},
		Tweens = {},
		Objects = {},
		Sections = {},
		Flags = {},
		UnnamedFlags = 0,
		InitTime = os.clock(),
		Folder = "Elevated",
		ConfigFolder = "Elevated/Configs",
		UI = {
			Name = "Elevated",
			CloseBind = Enum.KeyCode.LeftAlt,
			PreviewTick = tick(),
			Initialized = false,
			Faded = false,
			PerformanceDrag = false,
			LastZIndex = 3,
			WatermarkRefreshRate = 0.15,
			WatermarkPosition = "Top Left",
			DraggingTick = tick(),
			DraggingRefreshRate = 0.01,
			ResizingTick = tick(),
			ResizingRefreshRate = 0.01,
			SectionZIndex = 100,
			DropdownZIndex = 1,
			ColorPickerZIndex = 100,
			OpenColorFrames = 0,
			OpenColorMethods = 0,
			ColorPickerRainbowSpeed = 0.35,
			ColorPickerFadeSpeed = 0.35,
			ScreenGUI = nil,
			Font = CustomFonts[Fonts["Proggy Clean"].Font],
            FontSize = Fonts["Proggy Clean"].TextSize,
			Dragging = {GUI = nil, True = false},
			Keys = {
                                [Enum.KeyCode.Insert] = "INS",
				[Enum.KeyCode.LeftShift] = "L-SHIFT",
				[Enum.KeyCode.RightShift] = "R-SHIFT",
				[Enum.KeyCode.LeftControl] = "L-CTRL",
				[Enum.KeyCode.RightControl] = "R-CTRL",
				[Enum.KeyCode.LeftAlt] = "L-ALT",
				[Enum.KeyCode.RightAlt] = "R-ALT",
				[Enum.KeyCode.CapsLock] = "CAPS",
				[Enum.KeyCode.One] = "1",
				[Enum.KeyCode.Two] = "2",
				[Enum.KeyCode.Three] = "3",
				[Enum.KeyCode.Four] = "4",
				[Enum.KeyCode.Five] = "5",
				[Enum.KeyCode.Six] = "6",
				[Enum.KeyCode.Seven] = "7",
				[Enum.KeyCode.Eight] = "8",
				[Enum.KeyCode.Nine] = "9",
				[Enum.KeyCode.Zero] = "0",
				[Enum.KeyCode.KeypadOne] = "NUM1",
				[Enum.KeyCode.KeypadTwo] = "NUM2",
				[Enum.KeyCode.KeypadThree] = "NUM3",
				[Enum.KeyCode.KeypadFour] = "NUM4",
				[Enum.KeyCode.KeypadFive] = "NUM5",
				[Enum.KeyCode.KeypadSix] = "NUM6",
				[Enum.KeyCode.KeypadSeven] = "NUM7",
				[Enum.KeyCode.KeypadEight] = "NUM8",
				[Enum.KeyCode.KeypadNine] = "NUM9",
				[Enum.KeyCode.KeypadZero] = "NUM0",
				[Enum.KeyCode.Minus] = "-",
				[Enum.KeyCode.Equals] = "=",
				[Enum.KeyCode.Tilde] = "~",
				[Enum.KeyCode.LeftBracket] = "[",
				[Enum.KeyCode.RightBracket] = "]",
				[Enum.KeyCode.RightParenthesis] = ")",
				[Enum.KeyCode.LeftParenthesis] = "(",
				[Enum.KeyCode.Semicolon] = ";",
				[Enum.KeyCode.Quote] = "'",
				[Enum.KeyCode.BackSlash] = "\\",
				[Enum.KeyCode.Comma] = ",",
				[Enum.KeyCode.Period] = ".",
				[Enum.KeyCode.Slash] = "/",
				[Enum.KeyCode.Asterisk] = "*",
				[Enum.KeyCode.Plus] = "+",
				[Enum.KeyCode.Period] = ".",
				[Enum.KeyCode.Backquote] = "`",
				[Enum.UserInputType.MouseButton1] = "MB1",
				[Enum.UserInputType.MouseButton2] = "MB2",
				[Enum.UserInputType.MouseButton3] = "MB3"
			},
			Notifications = {},
		},
		Theme = {
			Objects = {},
			Default = {
				Accent = Color3.fromRGB(80, 21, 158),
				LightContrast = Color3.fromRGB(30, 30, 30),
				DarkContrast = Color3.fromRGB(20, 20, 20),
				Outline = Color3.fromRGB(10, 10, 10),
				Inline = Color3.fromRGB(45, 45, 45),
				TextColor = Color3.fromRGB(255, 255, 255),
				TextDark = Color3.fromRGB(175, 175, 175),
				TextBorder = Color3.fromRGB(0, 0, 0),
				ImageColor = Color3.fromRGB(255, 255, 255),
				ImageLight = Color3.fromRGB(123, 123, 123),
				ImageDark = Color3.fromRGB(82, 82, 82),
				Risky = Color3.fromRGB(255, 0, 0),
				Glow = Color3.fromRGB(80, 21, 158),
			},
			Presets = {
				Default = {1, [[{"Outline":"0a0a0a","Accent":"50159e","LightText":"ffffff","DarkText":"afafaf","LightContrast":"1e1e1e","DarkContrast":"141414","TextBorder":"000000","Inline":"2d2d2d","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"50159e"}]]},
				Abyss = {2, [[{"Outline":"0a0a0a","Accent":"8c87b4","LightText":"ffffff","DarkText":"afafaf","LightContrast":"1e1e1e","DarkContrast":"141414","TextBorder":"000000","Inline":"2d2d2d","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"ffffff"}]]},
				Fatality = {3, [[{"Outline":"0f0f28","Accent":"f00f50","LightText":"c8c8ff","DarkText":"afafaf","LightContrast":"231946","DarkContrast":"191432","TextBorder":"000000","Inline":"322850","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Neverlose = {4, [[{"Outline":"000005","Accent":"00b4f0","LightText":"ffffff","DarkText":"afafaf","LightContrast":"000f1e","DarkContrast":"050514","TextBorder":"000000","Inline":"0a1e28","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Aimware = {5, [[{"Outline":"000005","Accent":"c82828","LightText":"e8e8e8","DarkText":"afafaf","LightContrast":"2b2b2b","DarkContrast":"191919","TextBorder":"000000","Inline":"373737","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Youtube = {6, [[{"Outline":"000000","Accent":"ff0000","LightText":"f1f1f1","DarkText":"aaaaaa","LightContrast":"232323","DarkContrast":"0f0f0f","TextBorder":"000000","Inline":"393939","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Gamesense = {7, [[{"Outline":"000000","Accent":"a7d94d","LightText":"ffffff","DarkText":"afafaf","LightContrast":"171717","DarkContrast":"0c0c0c","TextBorder":"000000","Inline":"282828","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Onetap = {8, [[{"Outline":"000000","Accent":"dda85d","LightText":"d6d9e0","DarkText":"afafaf","LightContrast":"2c3037","DarkContrast":"1f2125","TextBorder":"000000","Inline":"4e5158","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Entropy = {9, [[{"Outline":"0a0a0a","Accent":"81bbe9","LightText":"dcdcdc","DarkText":"afafaf","LightContrast":"3d3a43","DarkContrast":"302f37","TextBorder":"000000","Inline":"4c4a52","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Interwebz = {10, [[{"Outline":"1a1a1a","Accent":"c9654b","LightText":"fcfcfc","DarkText":"a8a8a8","LightContrast":"291f38","DarkContrast":"1f162b","TextBorder":"000000","Inline":"40364f","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Dracula = {11, [[{"Outline":"202126","Accent":"9a81b3","LightText":"b4b4b8","DarkText":"88888b","LightContrast":"2a2c38","DarkContrast":"252730","TextBorder":"000000","Inline":"3c384d","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b788a","ImageDark":"525062","Glow":"ffffff"}]]},
				Spotify = {12, [[{"Outline":"0a0a0a","Accent":"1ed760","LightText":"d0d0d0","DarkText":"949494","LightContrast":"181818","DarkContrast":"121212","TextBorder":"000000","Inline":"292929","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Sublime = {13, [[{"Outline":"000000","Accent":"ff9800","LightText":"e8ffff","DarkText":"d3d3c2","LightContrast":"32332d","DarkContrast":"282923","TextBorder":"000000","Inline":"484944","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Vape = {14, [[{"Outline":"0a0a0a","Accent":"26866a","LightText":"dcdcdc","DarkText":"afafaf","LightContrast":"1f1f1f","DarkContrast":"1a1a1a","TextBorder":"000000","Inline":"363636","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Neko = {15, [[{"Outline":"000000","Accent":"d21f6a","LightText":"ffffff","DarkText":"afafaf","LightContrast":"171717","DarkContrast":"131313","TextBorder":"000000","Inline":"2d2d2d","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Corn = {16, [[{"Outline":"000000","Accent":"ff9000","LightText":"dcdcdc","DarkText":"afafaf","LightContrast":"252525","DarkContrast":"191919","TextBorder":"000000","Inline":"333333","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
				Minecraft = {17, [[{"Outline":"000000","Accent":"27ce40","LightText":"ffffff","DarkText":"d7d7d7","LightContrast":"333333","DarkContrast":"262626","TextBorder":"000000","Inline":"4b4b4b","Risky":"ff0000","ImageColor":"ffffff","ImageLight":"7b7b7b","ImageDark":"525252","Glow":"000000"}]]},
			}
		},
	}
	--
	function Library:Validate(Defaults, Options)
		for i, v in Defaults do
			if Options[i] == nil then
				Options[i] = v
			end
		end
		--
		return Options
	end
	--
	function Library:Connection(Signal, Func, Name, Table)
        Name = Name or "Unknown"
        Table = Table or Library.Connections
        --
        local Connection; Connection = Signal:Connect(function(...)
            local Args = {...}
            --
            local Success, Message = pcall(function() coroutine.wrap(Func)(unpack(Args)) end)
            --
            if not Success and not Library.Errors[Message] then
                if Library.Notify then
                    Library:Notify({Message = ("[ERROR] | An error has occurred:\n%s\nName: %s"):format(Message, Name), Delay = math.huge})
                else
                    warn(("[ERROR] | An error has occurred:\n%s\nName: %s"):format(Message, Name))
                end
                --
                Library.Errors[Message] = Message
                --
                if Table[Connection] then
                    Table[Connection] = nil
                end
                --
                return Connection:Disconnect()
            end
        end)
        --
        if Connection and Table then
            table.insert(Table, Connection)
        end
        --
        return Connection
	end
	--
	function Library:TweenObject(Object, Info, Goal, Callback)
		if not Object then return end
		--
		local Tween = TweenService:Create(Object, Info, Goal)
		--
		Library:Connection(Tween.Completed, Callback or function() end)
		--
		Tween:Play()
		--
		Library.Tweens[#Library.Tweens + 1] = Tween
	end
	--
	function Library:Draggable(Object, DragFrame, PerformanceUI, Outline, Shadow)
		local StartingPosition, ObjectPosition, Dragging
		--
		if not (Object or DragFrame) then return end
		--
		Library:Connection(DragFrame.MouseButton1Down, function()
			Dragging = true
			StartingPosition = UserInputService:GetMouseLocation()
			ObjectPosition = Object.Position
			--
			Library.UI.LastZIndex = Library.UI.LastZIndex + 2
			Object.ZIndex = Library.UI.LastZIndex
			--
			if Shadow then
				Shadow.ZIndex = Object.ZIndex - 2
			end
			--
			if Outline then
				Outline.ZIndex = Object.ZIndex - 1
			end
			--
			if Library.UI.PerformanceDrag and PerformanceUI then
				PerformanceUI.Visible = true
				PerformanceUI.ZIndex = Object.ZIndex + 2
			end
			--
			Library.UI.LastZIndex = Object.ZIndex + 2
		end)
		--
		Library:Connection(UserInputService.InputChanged, function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement and Dragging then
				local Delta = UserInputService:GetMouseLocation() - StartingPosition
				local NewPosition = UDim2.new(ObjectPosition.X.Scale, ObjectPosition.X.Offset + Delta.X, ObjectPosition.Y.Scale, ObjectPosition.Y.Offset + Delta.Y)
				--
				task.spawn(function()
					if (tick() - Library.UI.DraggingTick) > Library.UI.DraggingRefreshRate then
						if PerformanceUI then
							PerformanceUI.Position = NewPosition
						end
						--
						if not Library.UI.PerformanceDrag then
							Library:TweenObject(Object, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = NewPosition})
							--
							if Shadow then
								Library:TweenObject(Shadow, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = NewPosition})
							end
							--
							if Outline then
								Library:TweenObject(Outline, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = NewPosition + UDim2.new(0, -2, 0, -2)})
							end
						end
						--
						Library.UI.DraggingTick = tick()
					end
				end)
			end
		end)
		--
		Library:Connection(UserInputService.InputEnded, function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 and Dragging then 
				Dragging = false
				--
				if Library.UI.PerformanceDrag and PerformanceUI then
					Library:TweenObject(Object, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = PerformanceUI.Position})
					--
					if Shadow then
						Library:TweenObject(Shadow, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = PerformanceUI.Position})
					end
					--
					if Outline then
						Library:TweenObject(Outline, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = PerformanceUI.Position + UDim2.new(0, -2, 0, -2)})
					end
				end
				--
				if PerformanceUI then
					PerformanceUI.Visible = false
				end
			end
		end)
	end
	--
	function Library:Resizable(Object, DragFrame, MinResize, MaxResize, PerformanceUI, Shadow, Outline)
		local StartingSize, ObjectSize, Dragging, MouseLocation
		--
		local function UpdateSize(Mode)
			if not MouseLocation then return end
			--
			local CurrentMousePosition = UserInputService:GetMouseLocation()
			local Delta = CurrentMousePosition - MouseLocation
			local Offset = Mode and UDim2.new(0, 4, 0, 4) or UDim2.new(0, 0, 0, 0)
			--
			return UDim2.new(0, math.clamp(StartingSize.X.Offset + Delta.X, MinResize.X.Offset, MaxResize.X.Offset), 0, math.clamp(StartingSize.Y.Offset + Delta.Y, MinResize.Y.Offset, MaxResize.Y.Offset)) + Offset
		end
		--
		Library:Connection(DragFrame.InputBegan, function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				Dragging = true
				MouseLocation = UserInputService:GetMouseLocation()
				StartingSize = Object.Size
				--
				Library.UI.LastZIndex = Library.UI.LastZIndex + 2
				Object.ZIndex = Library.UI.LastZIndex
				Shadow.ZIndex = Object.ZIndex - 2
				Outline.ZIndex = Object.ZIndex - 1
				--
				if Library.UI.PerformanceDrag and PerformanceUI then
					PerformanceUI.Position = Object.Position
					PerformanceUI.Visible = true
					PerformanceUI.ZIndex = Object.ZIndex + 2
				end
				--
				Library.UI.LastZIndex = Object.ZIndex + 2
			end
		end)
		--
		Library:Connection(UserInputService.InputChanged, function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement and Dragging then
				task.spawn(function()
					if (tick() - Library.UI.ResizingTick) > Library.UI.ResizingRefreshRate then
						if PerformanceUI then
							PerformanceUI.Size = UpdateSize(false)
						end
						--
						if not Library.UI.PerformanceDrag then
							Library:TweenObject(Object, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UpdateSize(false)})
							Library:TweenObject(Shadow, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UpdateSize(false)})
							Library:TweenObject(Outline, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UpdateSize(true)})
						end
						--
						Library.UI.ResizingTick = tick()
					end
				end)
			end
		end)
		--
		Library:Connection(UserInputService.InputEnded, function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 and Dragging then
				Dragging = false
				--
				if Library.UI.PerformanceDrag and PerformanceUI then
					Library:TweenObject(Object, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = PerformanceUI.Size})
					Library:TweenObject(Shadow, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = PerformanceUI.Size})
					Library:TweenObject(Outline, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = PerformanceUI.Size + UDim2.new(0, 4, 0, 4)})
				end
				--
				if PerformanceUI then
					PerformanceUI.Visible = false
				end
			end
		end)
	end
	--
	function Library:GetTableIndexes(Table, Custom)
		local Table2 = {}
		--
		for Index, Value in Table do
			Table2[Custom and Value[1] or #Table2 + 1] = Index 
		end
		--
		return Table2
	end
	--
	function Library:ColorLerp(Value, MinColor, MaxColor)
		if Value <= 0 then return MaxColor end
		if Value >= 100 then return MinColor end
		--
		return Color3.new(
			MaxColor.R + (MinColor.R - MaxColor.R) * Value,
			MaxColor.G + (MinColor.G - MaxColor.G) * Value,
			MaxColor.B + (MinColor.B - MaxColor.B) * Value
		)
	end
	--
	function Library:CheckIfClipped(ScrollingFrame, Frame)
		if not ScrollingFrame:IsA("ScrollingFrame") then return end
		--
		local TopBoundary = ScrollingFrame.AbsolutePosition
		local BottomBoundary = TopBoundary + ScrollingFrame.AbsoluteSize
		--
		local Top = Frame.AbsolutePosition
		local Bottom = Top + Frame.AbsoluteSize
		--
		local function CompareVectors(a, b)
			return (a.X < b.X) or (a.Y < b.Y)
		end
		--
		return CompareVectors(Top, TopBoundary) or CompareVectors(BottomBoundary, Bottom)
	end
	--
	function Library:UpdateColor(ColorType, ColorValue)
		local ColorType = ColorType
		--
		Library.Theme.Default[ColorType] = ColorValue
		--
		for Index, Value in Library.Theme.Objects do
			for Index2, Value2 in Value do
				if Index:IsA("Frame") then
					Index2 = "BackgroundColor3"
				elseif Index:IsA("TextLabel") or Index:IsA("TextButton") then
					if ColorType == "TextBorder" then
						Index2 = "TextStrokeColor3"
					else
						Index2 = "TextColor3"
					end
				elseif Index:IsA("TextBox") then
					if ColorType == "TextColor" then
						Index2 = "TextColor3"
					elseif ColorType == "TextBorder" then
						Index2 = "TextStrokeColor3"
					elseif ColorType == "TextDark" then
						Index2 = "PlaceholderColor3"
					end
				elseif Index:IsA("ImageLabel") or Index:IsA("ImageButton") then
					Index2 = "ImageColor3"
				elseif Index:IsA("ScrollingFrame") then
					Index2 = "ScrollBarImageColor3"
				elseif Index:IsA("UIStroke") then
					Index2 = "Color"
				end
				--
				if Value2 == ColorType then
					if Index:IsA("ScrollingFrame") then
						Index.BackgroundColor3 = Library.Theme.Default.LightContrast
						Index[Index2] = Library.Theme.Default[Value2]
					else
						Index[Index2] = Library.Theme.Default[Value2]
					end
				end
			end
		end
	end
	--
	function Library:UpdateTheme(ThemeType, ThemeValue)
		if Library.Flags["ConfigTheme_" .. ThemeType] then
			Library.Flags["ConfigTheme_" .. ThemeType]:Set(ThemeValue)
		end
	end
	--
	function Library:LoadTheme(ThemeType)
		if Library.Theme.Presets[ThemeType] then
			local ThemeValue = HttpService:JSONDecode(Library.Theme.Presets[ThemeType][2])
			--
			for Index, Value in ThemeValue do
				Library:UpdateTheme(Index, Color3.fromHex(Value))
			end
		end
	end
    --
    function Library:TeleportPlace(PlaceId, JobId, Notification)
		local Success, Error
		--
        if JobId == game.JobId and #Players:GetPlayers() <= 1 then
            if Library.Notify then
                Library:Notify({Message = Library.UI.Name .. ": Current Server has 0 players, Rejoining.", Delay = math.huge})
            else
                Client:Kick(Library.UI.Name .. ": Current Server has 0 players, Rejoining.")
            end
            --
            task.wait()
            --
			Success, Error = pcall(function()
            	TeleportService:Teleport(PlaceId, Client)
			end)
        else
			Success, Error = pcall(function()
            	TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Client)
			end)
        end
		--
		if not Success then
			if Notification then
				Notification:UpdateText("Teleport failed.")
			end
		end
    end
    --
    function Library:Rejoin()
        Library:TeleportPlace(game.PlaceId, game.JobId)
    end
	--
	function Library:NewFlag()
		Library.UnnamedFlags += 1
		--
		return tostring(Library.UnnamedFlags)
	end
	--
	function Library:GetConfig()
        local Config = {}
        --
        for Index, Value in Library.Flags do
            if Value.Get then
                if typeof(Value:Get()) == "table" and Value:Get().Color and Value:Get().Transparency then
                    local Transparency = Value:Get().Transparency
                    local Hue, Saturation, Value = Value:Get().Color:ToHSV()
                    --
                    Config[Index] = {Hue, Saturation, Value, Transparency}
                else
                    Config[Index] = Value:Get()
                end
            end
        end
        --
        return HttpService:JSONEncode(Config)
    end
    --
    function Library:LoadConfig(Config)
        local Config = HttpService:JSONDecode(Config)
        --
        for Index, Value in Config do
            if Library.Flags[Index] then
                Library.Flags[Index]:Set(Value)
            end
        end
    end
	--
	function Library:CreateObject(Type, Parent)
		local Object = Instance.new(Type, Parent)
		--
		Library.Objects[#Library.Objects + 1] = Object
		--
		return Object
	end
	--
	function Library:GetCurrentTime()
		local CurrentTime = os.date("*t")
		local Hour = CurrentTime.hour
		local Period = "AM"
		--
		if Hour >= 12 then
			Period = "PM"
			--
			if Hour > 12 then
				Hour = Hour - 12
			end
		end
		--
		return ("%d:%02d %s"):format(Hour, CurrentTime.min, Period)
	end
	--
	function Library:PerformanceDrag(State)
		Library.UI.PerformanceDrag = State
	end
	--
	function Library:WatermarkRefreshRate(Value)
		Library.UI.WatermarkRefreshRate = Value
	end
	--
	function Library:WatermarkPosition(State)
		Library.UI.WatermarkPosition = State
	end
	--
	function Library:ColorPickerRainbowSpeed(Value)
		Library.UI.ColorPickerRainbowSpeed = Value
	end
	--
	function Library:ColorPickerFadeSpeed(Value)
		Library.UI.ColorPickerFadeSpeed = Value
	end
	--
	Library.__index = Library
	Library.Sections.__index = Library.Sections
    --
	local Sections = Library.Sections
	--
	function Library:ColorPicker(Options)
		Options = Library:Validate({
			Name = "Preview Color Picker",
			Default = Color3.fromRGB(255, 0, 0),
			Alpha = 1,
			AlphaBar = true,
			Parent = nil,
			Parent2 = nil,
			Count = 1,
			Keybind = false,
			Flag = Library:NewFlag(),
			Callback = function() end,
		}, Options or {})
		--
		local Hue, Saturation, Value = Options.Default:ToHSV()
		--
		local ColorPicker = {
			Hover = false,
			MouseDown = false,
			MainFrameHover = false,
			Color = Options.Default,
			Saturation = {Saturation, Value},
			Alpha = Options.Alpha,
			Hue = Hue,
			LastCopiedColor = nil,
			FrameOpened = false,
			Mode = "Normal",
			CurrentMode = nil,
			Loop = nil,
		}
		--
		if not Options.Default then
			Library.Flags[Options.Flag] = ColorPicker
			Options.Callback(Options.Default, Options.Alpha)
		end
		--
		Library.UI.ColorPickerZIndex -= 1
		--
		if Options.Keybind then
			Options.Count += 1
		end
		--
		do -- Rendering
			-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker
			ColorPicker["72"] = Library:CreateObject("Frame", Options.Parent ~= nil and Options.Parent);
			ColorPicker["72"]["BorderSizePixel"] = 0;
			ColorPicker["72"]["BackgroundColor3"] = ColorPicker.Color;
			ColorPicker["72"]["Size"] = UDim2.new(0, 27, 0, 10);
			ColorPicker["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			ColorPicker["72"]["Position"] = UDim2.new(1, -27 - (Options.Count - 1) * 32, 0, 2);
			ColorPicker["72"]["Name"] = [[ColorPicker]];
			ColorPicker["72"]["BackgroundTransparency"] = 1 - ColorPicker.Alpha;
			ColorPicker["72"]["ZIndex"] = Library.UI.ColorPickerZIndex
			
			-- StarterGui.MyLibrary.MainBackground.ContentContainer.Hometab.Left.Section.ContentContainer.Toggle.Colorpicker.MainFrame.ColorFrame.Image
			ColorPicker["55"] = Library:CreateObject("ImageLabel", ColorPicker["72"]);
			ColorPicker["55"]["BorderSizePixel"] = 0;
			ColorPicker["55"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			ColorPicker["55"]["Image"] = [[rbxassetid://17712772030]];
			ColorPicker["55"]["Size"] = UDim2.new(1, 0, 1, 0);
			ColorPicker["55"]["ImageTransparency"] = ColorPicker.Alpha;
			ColorPicker["55"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			ColorPicker["55"]["BackgroundTransparency"] = 1;
			
			-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
			ColorPicker["b"] = Library:CreateObject("TextButton", ColorPicker["72"]);
			ColorPicker["b"]["BorderSizePixel"] = 0;
			ColorPicker["b"]["TextTransparency"] = 1;
			ColorPicker["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			ColorPicker["b"]["TextSize"] = Library.UI.FontSize;
			ColorPicker["b"]["FontFace"] = Library.UI.Font;
			ColorPicker["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
			ColorPicker["b"]["Size"] = UDim2.new(1, 0, 1, 0);
			ColorPicker["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			ColorPicker["b"]["BackgroundTransparency"] = 1;
	
			-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.UIStroke
			ColorPicker["73"] = Library:CreateObject("UIStroke", ColorPicker["72"]);
			ColorPicker["73"]["Color"] = Library.Theme.Default.Inline;
			ColorPicker["73"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
			
			Library.Theme.Objects[ColorPicker["73"]] = {
				Color = "Inline"
			}
		end
		--
		do -- Functions
			function ColorPicker:SetVisible(Bool)
				ColorPicker["72"].Visible = Bool
                --
                if Bool == false then
                    ColorPicker:RemoveFrame()
                end
			end
			--
			function ColorPicker:AddFrame()
				--
				Library.UI.OpenColorFrames += 1
				--
				do -- Rendering
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame
					ColorPicker["74"] = Library:CreateObject("Frame", ColorPicker["72"]);
					ColorPicker["74"]["BorderSizePixel"] = 0;
					ColorPicker["74"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					ColorPicker["74"]["Size"] = UDim2.new(0, 200, 0, 200);
					ColorPicker["74"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["74"]["Position"] = UDim2.new(0, -200, 0, 0);
					ColorPicker["74"]["Visible"] = true;
					ColorPicker["74"]["Name"] = [[ColorPickerFrame]];
					ColorPicker["74"]["ZIndex"] = 10;
					
					Library.Theme.Objects[ColorPicker["74"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.UIStroke
					ColorPicker["75"] = Library:CreateObject("UIStroke", ColorPicker["74"]);
					ColorPicker["75"]["Color"] = Library.Theme.Default.Inline;
					ColorPicker["75"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[ColorPicker["75"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.ColorFrame
					ColorPicker["76"] = Library:CreateObject("Frame", ColorPicker["74"]);
					ColorPicker["76"]["BorderSizePixel"] = 0;
					ColorPicker["76"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["76"]["Size"] = UDim2.new(1, -26, 1, -36);
					ColorPicker["76"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["76"]["Position"] = UDim2.new(0, 5, 0, 15);
					ColorPicker["76"]["Name"] = [[ColorFrame]];

					-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
					ColorPicker["bz24"] = Library:CreateObject("TextButton", ColorPicker["76"]);
					ColorPicker["bz24"]["BorderSizePixel"] = 0;
					ColorPicker["bz24"]["TextTransparency"] = 1;
					ColorPicker["bz24"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["bz24"]["TextSize"] = Library.UI.FontSize;
					ColorPicker["bz24"]["FontFace"] = Library.UI.Font;
					ColorPicker["bz24"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["bz24"]["Size"] = UDim2.new(1, 0, 1, 0);
					ColorPicker["bz24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["bz24"]["BackgroundTransparency"] = 1;
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.ColorFrame.DraggingDot
					ColorPicker["3a"] = Library:CreateObject("Frame", ColorPicker["76"]);
					ColorPicker["3a"]["BorderSizePixel"] = 0;
					ColorPicker["3a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["3a"]["Size"] = UDim2.new(0, 3, 0, 3);
					ColorPicker["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["3a"]["Position"] = UDim2.new(0, 10, 0, 10);
					ColorPicker["3a"]["Name"] = [[DraggingDot]];
					ColorPicker["3a"]["ZIndex"] = 2;
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.ColorFrame.DraggingDot.UIStroke
					ColorPicker["3b"] = Library:CreateObject("UIStroke", ColorPicker["3a"]);
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.ColorFrame.UIStroke
					ColorPicker["77"] = Library:CreateObject("UIStroke", ColorPicker["76"]);
					ColorPicker["77"]["Color"] = Library.Theme.Default.Inline;
					ColorPicker["77"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[ColorPicker["77"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.ColorFrame.ImageLabel
					ColorPicker["78"] = Library:CreateObject("ImageLabel", ColorPicker["76"]);
					ColorPicker["78"]["BorderSizePixel"] = 0;
					ColorPicker["78"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["78"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["78"]["Image"] = [[rbxassetid://8180999986]];
					ColorPicker["78"]["Size"] = UDim2.new(1, 0, 1, 0);
					ColorPicker["78"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["78"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.ColorFrame.UIGradient
					ColorPicker["79"] = Library:CreateObject("UIGradient", ColorPicker["76"]);
					ColorPicker["79"]["Rotation"] = 180;
					ColorPicker["79"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 0, 5)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.HueFrame
					ColorPicker["7fa"] = Library:CreateObject("Frame", ColorPicker["74"]);
					ColorPicker["7fa"]["BorderSizePixel"] = 0;
					ColorPicker["7fa"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["7fa"]["Size"] = UDim2.new(0, 11, 1, -36);
					ColorPicker["7fa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["7fa"]["Position"] = UDim2.new(1, -16, 0, 15);
					ColorPicker["7fa"]["Name"] = [[HueFrame]];

					-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
					ColorPicker["bz2421"] = Library:CreateObject("TextButton", ColorPicker["7fa"]);
					ColorPicker["bz2421"]["BorderSizePixel"] = 0;
					ColorPicker["bz2421"]["TextTransparency"] = 1;
					ColorPicker["bz2421"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["bz2421"]["TextSize"] = Library.UI.FontSize;
					ColorPicker["bz2421"]["FontFace"] = Library.UI.Font;
					ColorPicker["bz2421"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["bz2421"]["Size"] = UDim2.new(1, 0, 1, 0);
					ColorPicker["bz2421"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["bz2421"]["BackgroundTransparency"] = 1;
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.HueFrame.HueLine
					ColorPicker["40"] = Library:CreateObject("Frame", ColorPicker["7fa"]);
					ColorPicker["40"]["BorderSizePixel"] = 0;
					ColorPicker["40"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["40"]["Size"] = UDim2.new(1, 4, 0, 2);
					ColorPicker["40"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["40"]["Position"] = UDim2.new(0, -2, 0, 0);
					ColorPicker["40"]["Name"] = [[HueLine]];
					ColorPicker["40"]["ZIndex"] = 2;
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.HueFrame.HueLine.UIStroke
					ColorPicker["41"] = Library:CreateObject("UIStroke", ColorPicker["40"]);
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.HueFrame.UIStroke
					ColorPicker["7b"] = Library:CreateObject("UIStroke", ColorPicker["7fa"]);
					ColorPicker["7b"]["Color"] = Library.Theme.Default.Inline;
					ColorPicker["7b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[ColorPicker["7b"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.HueFrame.ImageLabel
					ColorPicker["7c"] = Library:CreateObject("ImageLabel", ColorPicker["7fa"]);
					ColorPicker["7c"]["BorderSizePixel"] = 0;
					ColorPicker["7c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["7c"]["Image"] = [[rbxassetid://8180989234]];
					ColorPicker["7c"]["Size"] = UDim2.new(1, 0, 1, 0);
					ColorPicker["7c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["7c"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.HueFrame.UIGradient
					ColorPicker["7d"] = Library:CreateObject("UIGradient", ColorPicker["7fa"]);
					ColorPicker["7d"]["Rotation"] = 180;
					ColorPicker["7d"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 0, 5)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.SatFrame
					ColorPicker["7e"] = Library:CreateObject("Frame", ColorPicker["74"]);
					ColorPicker["7e"]["BorderSizePixel"] = 0;
					ColorPicker["7e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["7e"]["Size"] = UDim2.new(1, -26, 0, 11);
					ColorPicker["7e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["7e"]["Position"] = UDim2.new(0, 5, 1, -16);
					ColorPicker["7e"]["Name"] = [[SatFrame]];

					-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
					ColorPicker["bz243"] = Library:CreateObject("TextButton", ColorPicker["7e"]);
					ColorPicker["bz243"]["BorderSizePixel"] = 0;
					ColorPicker["bz243"]["TextTransparency"] = 1;
					ColorPicker["bz243"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["bz243"]["TextSize"] = Library.UI.FontSize;
					ColorPicker["bz243"]["FontFace"] = Library.UI.Font;
					ColorPicker["bz243"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["bz243"]["Size"] = UDim2.new(1, 0, 1, 0);
					ColorPicker["bz243"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["bz243"]["BackgroundTransparency"] = 1;
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.SatFrame.SatLine
					ColorPicker["45"] = Library:CreateObject("Frame", ColorPicker["7e"]);
					ColorPicker["45"]["BorderSizePixel"] = 0;
					ColorPicker["45"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["45"]["Size"] = UDim2.new(0, 2, 1, 4);
					ColorPicker["45"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["45"]["Position"] = UDim2.new(0, 0, 0, -2);
					ColorPicker["45"]["Name"] = [[SatLine]];
					ColorPicker["45"]["ZIndex"] = 2;
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.SatFrame.SatLine.UIStroke
					ColorPicker["46"] = Library:CreateObject("UIStroke", ColorPicker["45"]);
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.SatFrame.UIStroke
					ColorPicker["7f"] = Library:CreateObject("UIStroke", ColorPicker["7e"]);
					ColorPicker["7f"]["Color"] = Library.Theme.Default.Inline;
					ColorPicker["7f"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[ColorPicker["7f"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.SatFrame.ImageLabel
					ColorPicker["80"] = Library:CreateObject("ImageLabel", ColorPicker["7e"]);
					ColorPicker["80"]["BorderSizePixel"] = 0;
					ColorPicker["80"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["80"]["Image"] = [[http://www.roblox.com/asset/?id=17716156120]];
					ColorPicker["80"]["Size"] = UDim2.new(1, 0, 1, 0);
					ColorPicker["80"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["80"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.ActualColorFrame
					ColorPicker["81"] = Library:CreateObject("Frame", ColorPicker["74"]);
					ColorPicker["81"]["BorderSizePixel"] = 0;
					ColorPicker["81"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
					ColorPicker["81"]["Size"] = UDim2.new(0, 11, 0, 11);
					ColorPicker["81"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["81"]["Position"] = UDim2.new(1, -16, 1, -16);
					ColorPicker["81"]["Name"] = [[ActualColorFrame]];
					
					-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
					ColorPicker["bz"] = Library:CreateObject("TextButton", ColorPicker["81"]);
					ColorPicker["bz"]["BorderSizePixel"] = 0;
					ColorPicker["bz"]["TextTransparency"] = 1;
					ColorPicker["bz"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["bz"]["TextSize"] = Library.UI.FontSize;
					ColorPicker["bz"]["FontFace"] = Library.UI.Font;
					ColorPicker["bz"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["bz"]["Size"] = UDim2.new(1, 0, 1, 0);
					ColorPicker["bz"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["bz"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerFrame.ActualColorFrame.UIStroke
					ColorPicker["82"] = Library:CreateObject("UIStroke", ColorPicker["81"]);
					ColorPicker["82"]["Color"] = Library.Theme.Default.Inline;
					ColorPicker["82"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[ColorPicker["82"]] = {
						Color = "Inline"
					}
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Slider.SliderText
					ColorPicker["21a"] = Library:CreateObject("TextLabel", ColorPicker["74"]);
					ColorPicker["21a"]["TextStrokeTransparency"] = 0;
					ColorPicker["21a"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					ColorPicker["21a"]["BorderSizePixel"] = 0;
					ColorPicker["21a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					ColorPicker["21a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
					ColorPicker["21a"]["FontFace"] = Library.UI.Font;
					ColorPicker["21a"]["TextSize"] = Library.UI.FontSize;
					ColorPicker["21a"]["TextColor3"] = Library.Theme.Default.TextColor;
					ColorPicker["21a"]["Size"] = UDim2.new(1, -10, 0, 10);
					ColorPicker["21a"]["Position"] = UDim2.new(0, 5, 0, 0);
					ColorPicker["21a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["21a"]["Text"] = Options.Name;
					ColorPicker["21a"]["Name"] = Options.Name;
					ColorPicker["21a"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[ColorPicker["21a"]] = {
						Color = "TextColor"
					}
					
					Library.Theme.Objects[ColorPicker["21a"]] = {
						Color = "TextBorder"
					}
					
					-- StartingPositionerGui.MainUI.MainFrame.TopBar.TextLabel.UIPadding
					ColorPicker["2ad"] = Library:CreateObject("UIPadding", ColorPicker["21a"]);
					ColorPicker["2ad"]["PaddingTop"] = UDim.new(0, 2);
					ColorPicker["2ad"]["PaddingBottom"] = UDim.new(0, -2);
				end
				--
				do -- Functions
					local function UpdateColor()
						ColorPicker.Color = Color3.fromHSV(ColorPicker.Hue, ColorPicker.Saturation[1], ColorPicker.Saturation[2])
						--
						ColorPicker["72"].BackgroundColor3 = ColorPicker.Color
						ColorPicker["81"].BackgroundColor3 = ColorPicker.Color
						ColorPicker["7e"].BackgroundColor3 = ColorPicker.Color
						ColorPicker["55"].ImageTransparency = ColorPicker.Alpha
						ColorPicker["72"].BackgroundTransparency = 1 - ColorPicker.Alpha
						ColorPicker["79"].Color =  ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromHSV(ColorPicker.Hue, 1, 1)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};
						--
						ColorPicker["3a"].Position = UDim2.fromScale(math.clamp(ColorPicker.Saturation[1], 0, 0.97), math.clamp(1 - ColorPicker.Saturation[2], 0, 0.97))
						ColorPicker["45"].Position = UDim2.new(math.clamp(ColorPicker.Alpha, 0, 0.98), 0, 0, -2)
						ColorPicker["40"].Position = UDim2.new(0, -2, math.clamp(ColorPicker.Hue, 0, 0.98), 0)
						--
						Options.Callback(ColorPicker.Color, ColorPicker.Alpha)
						Library.Flags[Options.Flag] = ColorPicker
						
					end
					--
					function ColorPicker:Update()
						UpdateColor()
					end
					--
					function ColorPicker:Set(Color, Transparency)
						if typeof(Color) == "table" then
							ColorPicker.Color = Color3.fromHSV(Color[1], Color[2], Color[3])
							ColorPicker.Alpha = Color[4]
							ColorPicker.Hue = Color[1]
							ColorPicker.Saturation[1] = Color[2]
							ColorPicker.Saturation[2] = Color[3]
							ColorPicker:Update()
							Options.Callback(ColorPicker.Color, ColorPicker.Alpha)
						elseif typeof(Color) == "Color3" then
							local h, s, v = Color:ToHSV()
							ColorPicker.Color = Color3.fromHSV(h, s, v)
							ColorPicker.Alpha = Transparency or 1
							ColorPicker.Hue = h
							ColorPicker.Saturation[1] = s
							ColorPicker.Saturation[2] = v
							ColorPicker:Update()
							Options.Callback(ColorPicker.Color, ColorPicker.Alpha)
						end
					end
					--
					function ColorPicker:Get()
						return {Color = ColorPicker.Color, Transparency = ColorPicker.Alpha}
					end
					--
					function ColorPicker:UpdateHue(Percentage)
						local Percentage = typeof(Percentage == "number") and math.clamp(Percentage, 0, 1) or 0
						--
						ColorPicker.Hue = Percentage
						--
						ColorPicker:Update()
					end
					--
					function ColorPicker:UpdateAlpha(Percentage)
						local Percentage = typeof(Percentage == "number") and math.clamp(Percentage, 0, 1) or 0
						--
						ColorPicker.Alpha = Percentage
						--
						ColorPicker:Update()
					end
					--
					function ColorPicker:UpdateSaturation(PercentageX, PercentageY)
						local PercentageX = typeof(PercentageX == "number") and math.clamp(PercentageX, 0, 1) or 0
						local PercentageY = typeof(PercentageY == "number") and math.clamp(PercentageY, 0, 1) or 0
						--
						ColorPicker.Saturation[1] = PercentageX
						ColorPicker.Saturation[2] = 1 - PercentageY
						--
						ColorPicker:Update()
					end
				end
				--
				do -- Connections
					Library:Connection(ColorPicker["bz"].MouseButton2Click, function()
						ColorPicker.LastCopiedColor = {Color = ColorPicker.Color, Alpha = ColorPicker.Alpha}
                        --
                        setclipboard("Color: " .. tostring(ColorPicker.Color) .. " Alpha: " .. tostring(ColorPicker.Alpha))
					end)
					--
					Library:Connection(ColorPicker["bz"].MouseButton1Click, function()
						ColorPicker:Set(ColorPicker.LastCopiedColor.Color, ColorPicker.LastCopiedColor.Alpha)
					end)
					--
					Library:Connection(ColorPicker["bz24"].InputBegan, function(Input)
						if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) and (Input.UserInputType == Enum.UserInputType.MouseButton1) then
							Library.UI.Dragging = {GUI = ColorPicker["76"], True = true}
							--
							local InputPosition = Vector2.new(Input.Position.X, Input.Position.Y)
							local Percentage = (InputPosition - ColorPicker["76"].AbsolutePosition) / ColorPicker["76"].AbsoluteSize
							--
							ColorPicker:UpdateSaturation(Percentage.X, Percentage.Y)
						end
					end)
					--
					Library:Connection(ColorPicker["bz243"].InputBegan, function(Input)
						if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) and (Input.UserInputType == Enum.UserInputType.MouseButton1) then
							Library.UI.Dragging = {GUI = ColorPicker["7e"], True = true}
							--
							local InputPosition = Vector2.new(Input.Position.X, Input.Position.Y)
							local GuiPosition = ColorPicker["7e"].AbsolutePosition.X
							local GUserInputServiceize = ColorPicker["7e"].AbsoluteSize.X
							local Percentage = ((InputPosition.X - GuiPosition) / GUserInputServiceize)
							--
							ColorPicker:UpdateAlpha(Percentage)
						end
					end)
					--
					Library:Connection(ColorPicker["bz2421"].InputBegan, function(Input)
						if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) and (Input.UserInputType == Enum.UserInputType.MouseButton1) then
							Library.UI.Dragging = {GUI = ColorPicker["7fa"], True = true}
							--
							local InputPosition = Vector2.new(Input.Position.X, Input.Position.Y)
							local Percentage = (InputPosition - ColorPicker["7fa"].AbsolutePosition) / ColorPicker["7fa"].AbsoluteSize
							--
							ColorPicker:UpdateHue(Percentage.Y)
						end
					end)
					--
					Library:Connection(UserInputService.InputChanged, function(Input)
						if (Library.UI.Dragging.GUI ~= ColorPicker["76"] and Library.UI.Dragging.GUI ~= ColorPicker["7fa"] and Library.UI.Dragging.GUI ~= ColorPicker["7e"]) then return end
						--
						if not (UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)) then
							Library.UI.Dragging = {GUI = nil, True = false}
							--
							return
						end
						--
						local InputPosition = Vector2.new(Input.Position.X, Input.Position.Y)
						--
						if (Input.UserInputType == Enum.UserInputType.MouseMovement) then
							if Library.UI.Dragging.GUI == ColorPicker["76"] then
								local Percentage = (InputPosition - ColorPicker["76"].AbsolutePosition) / ColorPicker["76"].AbsoluteSize
								--
								ColorPicker:UpdateSaturation(Percentage.X, Percentage.Y)
							end
							--
							if Library.UI.Dragging.GUI == ColorPicker["7e"] then
								local InputPosition = Vector2.new(Input.Position.X, Input.Position.Y)
								local GuiPosition = ColorPicker["7e"].AbsolutePosition.X
								local GUserInputServiceize = ColorPicker["7e"].AbsoluteSize.X
								local Percentage = ((InputPosition.X - GuiPosition) / GUserInputServiceize)
								--
								ColorPicker:UpdateAlpha(Percentage)
							end
							--
							if Library.UI.Dragging.GUI == ColorPicker["7fa"] then
								local Percentage = (InputPosition - ColorPicker["7fa"].AbsolutePosition) / ColorPicker["7fa"].AbsoluteSize
								--
								ColorPicker:UpdateHue(Percentage.Y)
							end
						end
					end)
				end
				--
				ColorPicker:Update()
			end
			--
			function ColorPicker:RemoveFrame()
				for Index, Value in ColorPicker["72"]:GetChildren() do
					if Value:IsA("Frame") and Value.Name == "ColorPickerFrame" then
						Value:Destroy()
						--
						Library.UI.OpenColorFrames -= 1
					end
				end
			end
			--
			function ColorPicker:FindFrame()
				for Index, Value in ColorPicker["72"]:GetChildren() do
					if Value:IsA("Frame") and Value.Name == "ColorPickerFrame" then
						return true
					end
				end
				--
				return false
			end
			--
			function ColorPicker:Toggle()
				if not ColorPicker:FindFrame() then
					if Library.UI.OpenColorFrames == 0 and Library.UI.OpenColorMethods == 0 then
						Options.Parent.ZIndex = 10
						ColorPicker:AddFrame()
					end
				else
					if Library.UI.OpenColorFrames == 1 then
						Options.Parent.ZIndex = 1
					end
					--
					ColorPicker:RemoveFrame()
				end
			end
			--
			function ColorPicker:AddMethodFrame()
				Library.UI.OpenColorMethods += 1
				--
				do -- Rendering
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerMode
					ColorPicker["5d"] = Library:CreateObject("Frame", ColorPicker["72"]);
					ColorPicker["5d"]["BorderSizePixel"] = 0;
					ColorPicker["5d"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					ColorPicker["5d"]["Size"] = UDim2.new(0, 60, 0, 10);
					ColorPicker["5d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					ColorPicker["5d"]["Position"] = UDim2.new(0, -61, 0, 0);
					ColorPicker["5d"]["AutomaticSize"] = Enum.AutomaticSize.Y;
					ColorPicker["5d"]["Visible"] = true;
					ColorPicker["5d"]["Name"] = [[ColorPickerMode]];
	
					Library.Theme.Objects[ColorPicker["5d"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerMode.UIStroke
					ColorPicker["5e"] = Library:CreateObject("UIStroke", ColorPicker["5d"]);
					ColorPicker["5e"]["Color"] = Library.Theme.Default.Inline;
					ColorPicker["5e"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
	
					Library.Theme.Objects[ColorPicker["5e"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerMode.UIListLayout
					ColorPicker["5f"] = Library:CreateObject("UIListLayout", ColorPicker["5d"]);
					ColorPicker["5f"]["Padding"] = UDim.new(0, 1);
					ColorPicker["5f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
				end
				--
				do -- Functions
					function ColorPicker:AddModes(Options)
						Options = Library:Validate({
							Modes = {"Normal", "Rainbow", "Alpha"},
						}, Options or {})
						--
						for Index, Value in Options.Modes do
							local ModeItem = {
								Active = false,
								Hovering = false,
							}
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerMode.Always
								ModeItem["60"] = Library:CreateObject("Frame", ColorPicker["5d"]);
								ModeItem["60"]["BorderSizePixel"] = 0;
								ModeItem["60"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								ModeItem["60"]["BackgroundTransparency"] = 1;
								ModeItem["60"]["Size"] = UDim2.new(1, 0, 0, 20);
								ModeItem["60"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								ModeItem["60"]["Name"] = Value;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
								ModeItem["8c"] = Library:CreateObject("ImageLabel", ModeItem["60"]);
								ModeItem["8c"]["ZIndex"] = 0;
								ModeItem["8c"]["BorderSizePixel"] = 0;
								ModeItem["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								ModeItem["8c"]["Image"] = [[rbxassetid://18520020007]];
								ModeItem["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
								ModeItem["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								ModeItem["8c"]["Name"] = [[Gradient]];
								ModeItem["8c"]["BackgroundTransparency"] = 1;
	
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerMode.Always.TextButton
								ModeItem["61"] = Library:CreateObject("TextButton", ModeItem["60"]);
								ModeItem["61"]["TextStrokeTransparency"] = 0;
								ModeItem["61"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								ModeItem["61"]["BorderSizePixel"] = 0;
								ModeItem["61"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								ModeItem["61"]["TextSize"] = Library.UI.FontSize;
								ModeItem["61"]["FontFace"] = Library.UI.Font;
								ModeItem["61"]["TextColor3"] = Library.Theme.Default.TextDark;
								ModeItem["61"]["Size"] = UDim2.new(1, 0, 1, 0);
								ModeItem["61"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								ModeItem["61"]["Text"] = Value;
								ModeItem["61"]["BackgroundTransparency"] = 1;
	
								Library.Theme.Objects[ModeItem["61"]] = {
									Color = "TextDark"
								}
	
								Library.Theme.Objects[ModeItem["61"]] = {
									Color = "TextBorder"
								}
	
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.ColorPickerMode.Always.UIStroke
								ModeItem["62"] = Library:CreateObject("UIStroke", ModeItem["60"]);
								ModeItem["62"]["Color"] = Library.Theme.Default.Inline;
								ModeItem["62"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
	
								Library.Theme.Objects[ModeItem["62"]] = {
									Color = "Inline"
								}
							end
							--
							do -- Functions
								function ModeItem:Activate()
									if not ModeItem.Active then
	
										if ColorPicker.CurrentMode ~= nil then
											ColorPicker.CurrentMode:Deactivate()
										end
	
										ModeItem.Active = true
	
										Library:TweenObject(ModeItem["61"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
	
										Library.Theme.Objects[ModeItem["61"]] = {
											Color = "Accent"
										}
										--
										if ColorPicker.Loop then ColorPicker.Loop:Disconnect() ColorPicker.Loop = nil end
										--
										if Value == "Rainbow" then
											ColorPicker.Loop = Library:Connection(RunService.Heartbeat, function()
												ColorPicker:Set(Color3.fromHSV((tick() * Library.UI.ColorPickerRainbowSpeed) % 1, 1, 1))
											end)
										elseif Value == "Alpha" then
											ColorPicker.Loop = Library:Connection(RunService.Heartbeat, function()
												ColorPicker:Set(ColorPicker.Color, 0.5 * (1 + math.sin(tick() * (1 + Library.UI.ColorPickerFadeSpeed) - math.pi / 2)))
											end)
										else
											if ColorPicker.Loop then ColorPicker.Loop:Disconnect() ColorPicker.Loop = nil end
										end
										--
										ColorPicker.Mode = Value
										ColorPicker.CurrentMode = ModeItem
									end
								end
	
								function ModeItem:Deactivate()
									if ModeItem.Active then
										ModeItem.Active = false
										ModeItem.Hovering = false
	
										Library:TweenObject(ModeItem["61"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
	
										Library.Theme.Objects[ModeItem["61"]] = {
											Color = "TextDark"
										}
									end
								end
							end
							--
							do -- Connections
								Library:Connection(ModeItem["60"].MouseEnter, function()
									if not ModeItem.Active and ColorPicker.Mode ~= Value then
										ModeItem.Hovering = true
										Library:TweenObject(ModeItem["61"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
	
										Library.Theme.Objects[ModeItem["61"]] = {
											Color = "TextColor"
										}
									end
								end)
								--
								Library:Connection(ModeItem["60"].MouseLeave, function()
									if not ModeItem.Active and ColorPicker.Mode ~= Value then
										ModeItem.Hovering = false
										Library:TweenObject(ModeItem["61"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
	
										Library.Theme.Objects[ModeItem["61"]] = {
											Color = "TextDark"
										}
									end
								end)
								--
								Library:Connection(ModeItem["61"].MouseButton1Click, function()
									ModeItem:Activate()
								end)
							end
							--
							if ColorPicker.Mode == Value then
								ModeItem:Activate()
							end
						end
					end
				end
				--
				ColorPicker:AddModes({Modes = {"Normal", "Rainbow", "Alpha"}})
			end
			--
			function ColorPicker:RemoveMethodFrame()
				for Index, Value in ColorPicker["72"]:GetChildren() do
					if Value:IsA("Frame") and Value.Name == "ColorPickerMode" then
						Value:Destroy()
						--
						Library.UI.OpenColorMethods -= 1
					end
				end
			end
			--
			function ColorPicker:ToggleFrame()
				ColorPicker.FrameOpened = not ColorPicker.FrameOpened
				--
				if ColorPicker.FrameOpened then
					if Library.UI.OpenColorMethods == 0 and Library.UI.OpenColorFrames == 0 then
						Options.Parent.ZIndex = 10
						--
						ColorPicker:AddMethodFrame() 
					end
				else
					if Library.UI.OpenColorMethods == 1 then
						Options.Parent.ZIndex = 1
					end
					--
					ColorPicker:RemoveMethodFrame()
				end
			end
		end
		--
		do -- Connections
			Library:Connection(ColorPicker["b"].MouseButton1Click, function()
				ColorPicker:Toggle()
			end)
			--
			Library:Connection(ColorPicker["b"].MouseButton2Click, function()
				ColorPicker:ToggleFrame()
			end)
		end
		--
		ColorPicker:AddFrame()
		ColorPicker:Update()
		ColorPicker:RemoveFrame()
		--
		return ColorPicker
	end
	--
	function Library:KeyBind(Options)
		Options = Library:Validate({
			Default = Enum.KeyCode.Backspace,
			Mode = "Toggle",
			HideFromList = false,
			Blacklisted = {},
			Parent = nil,
			Toggle = nil,
			ToggleState = false,
			Flag = Library.NewFlag(),
			Count = 1,
			Callback = function() end,
		}, Options or {})
		--
		if Options.Toggle == nil then return end
		--
		local Keybind = {
			Hover = false,
			Active = false,
			Keybind = Options.Default,
			RegKeybind = nil,
			State = true,
			Toggle = false,
			Connection = nil,
			Mode = Options.Mode,
			ConfigKeybind = nil,
			Current = {},
			CurrentMode = nil,
		}
		--
		do -- Rendering
			-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithKeybind.Keybind
			Keybind["5a"] = Library:CreateObject("Frame", Options.Parent ~= nil and Options.Parent);
			Keybind["5a"]["BorderSizePixel"] = 0;
			Keybind["5a"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
			Keybind["5a"]["Size"] = UDim2.new(0, 27, 0, 10);
			Keybind["5a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			Keybind["5a"]["Position"] = UDim2.new(1, -27 - (Options.Count - 1) * 33, 0, 2);
			Keybind["5a"]["Name"] = [[Keybind]];
			
			Library.Theme.Objects[Keybind["5a"]] = {
				Color = "LightContrast"
			}
			
			-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
			Keybind["8c"] = Library:CreateObject("ImageLabel", Keybind["5a"]);
			Keybind["8c"]["ZIndex"] = 0;
			Keybind["8c"]["BorderSizePixel"] = 0;
			Keybind["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			Keybind["8c"]["Image"] = [[rbxassetid://18520020007]];
			Keybind["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
			Keybind["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			Keybind["8c"]["Name"] = [[Gradient]];
			Keybind["8c"]["BackgroundTransparency"] = 1;

			-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithKeybind.Keybind.UIStroke
			Keybind["5b"] = Library:CreateObject("UIStroke", Keybind["5a"]);
			Keybind["5b"]["Color"] = Library.Theme.Default.Inline;
			Keybind["5b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
			
			Library.Theme.Objects[Keybind["5b"]] = {
				Color = "Inline"
			}

			-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithKeybind.Keybind.TextButton
			Keybind["5c"] = Library:CreateObject("TextButton", Keybind["5a"]);
			Keybind["5c"]["TextStrokeTransparency"] = 0;
			Keybind["5c"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
			Keybind["5c"]["BorderSizePixel"] = 0;
			Keybind["5c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			Keybind["5c"]["TextSize"] = Library.UI.FontSize;
			Keybind["5c"]["FontFace"] = Library.UI.Font;
			Keybind["5c"]["TextColor3"] = Library.Theme.Default.TextColor;
			Keybind["5c"]["Size"] = UDim2.new(1, 0, 1, 0);
			Keybind["5c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			Keybind["5c"]["Text"] = [[...]];
			Keybind["5c"]["BackgroundTransparency"] = 1;
			
			Library.Theme.Objects[Keybind["5c"]] = {
				Color = "TextColor"
			}
			
			Library.Theme.Objects[Keybind["5c"]] = {
				Color = "TextBorder"
			}
		end
        --
        local UserInputTypeBinds = {"MouseButton1", "MouseButton2", "MouseButton3"}
		--
		do -- Functions
			function Keybind:SetVisible(Bool)
				Keybind["51"].Visible = Bool
			end
			--
			function Keybind:Set(Key)
				if typeof(Key) == "boolean" then return end
				--
				if typeof(Key) == "EnumItem" then
					Keybind.RegKeybind = Key
				elseif typeof(Key) == "string" then
                    if table.find(UserInputTypeBinds, Key) then
                        Keybind.RegKeybind = Enum.UserInputType[Key]
                        Key = Enum.UserInputType[Key]
                    else
					    Keybind.RegKeybind = Enum.KeyCode[Key]
                        Key = Enum.KeyCode[Key]
                    end
				end
				--
				if typeof(Key) == "string" then
					if Key:find("KEY") then
						Key = Enum.KeyCode[Key:gsub("KEY_", "")]
					elseif Key:find("INPUT") then
						Key = Enum.UserInputType[Key:gsub("INPUT_", "")]
					end
				end
				--
				local ValidKey = false
				local KeyString = ""
				--
				if table.find(Options.Blacklisted, Key) then
					Key = nil
				end
				--
				if Key then
					if ((Key.EnumType == Enum.KeyCode and UserInputService:GetStringForKeyCode(Key) ~= "") or Library.UI.Keys[Key]) then
						ValidKey = true
						KeyString = Library.UI.Keys[Key] or UserInputService:GetStringForKeyCode(Key)
					end
				end
				--
				local Offset
				--
				if (Options.Count > 2) then
					Offset = (Options.Count - 1) * 32
				elseif Options.Count == 1 then
					Offset = 0
				else
					Offset = 33
				end
				--
				if ValidKey then
					Keybind.Keybind = KeyString
					Options.Callback(Key)
					Library.Flags[Options.Flag] = Keybind
					Keybind["5c"].Text = KeyString
					Keybind["5a"].Size = UDim2.new(0, Keybind["5c"].TextBounds.X + 25, 0, 10)
					Keybind["5a"].Position = UDim2.new(1, -(Keybind["5c"].TextBounds.X + 25 + Offset), 0, 2)
				else
					Keybind.Keybind = "None"
					Keybind["5c"].Text = Keybind.Keybind
					Keybind["5a"].Size = UDim2.new(0, Keybind["5c"].TextBounds.X + 25, 0, 10)
					Keybind["5a"].Position = UDim2.new(1, -(Keybind["5c"].TextBounds.X + 25 + Offset), 0, 2)
				end
			end
			--
			function Keybind:AddFrame()
				do -- Rendering
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithKeybind.Keybind.KeybindMode
					Keybind["5d"] = Library:CreateObject("Frame", Keybind["5a"]);
					Keybind["5d"]["BorderSizePixel"] = 0;
					Keybind["5d"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Keybind["5d"]["Size"] = UDim2.new(0, 60, 0, 10);
					Keybind["5d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Keybind["5d"]["Position"] = UDim2.new(0, -61, 0, 0);
					Keybind["5d"]["AutomaticSize"] = Enum.AutomaticSize.Y;
					Keybind["5d"]["Visible"] = true;
					Keybind["5d"]["Name"] = [[KeybindMode]];
					
					Library.Theme.Objects[Keybind["5d"]] = {
						Color = "LightContrast"
					}

					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithKeybind.Keybind.KeybindMode.UIStroke
					Keybind["5e"] = Library:CreateObject("UIStroke", Keybind["5d"]);
					Keybind["5e"]["Color"] = Library.Theme.Default.Inline;
					Keybind["5e"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Keybind["5e"]] = {
						Color = "Inline"
					}

					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithKeybind.Keybind.KeybindMode.UIListLayout
					Keybind["5f"] = Library:CreateObject("UIListLayout", Keybind["5d"]);
					Keybind["5f"]["Padding"] = UDim.new(0, 1);
					Keybind["5f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
				end
				--
				do -- Functions
					function Keybind:AddModes(Options)
						Options = Library:Validate({
							Modes = {"Always", "Toggle", "On Hold", "Off Hold"},
						}, Options or {})
						--
						for Index, Value in Options.Modes do
							local ModeItem = {
								Active = false,
								Hovering = false,
							}
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithKeybind.Keybind.KeybindMode.Always
								ModeItem["60"] = Library:CreateObject("Frame", Keybind["5d"]);
								ModeItem["60"]["BorderSizePixel"] = 0;
								ModeItem["60"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								ModeItem["60"]["BackgroundTransparency"] = 1;
								ModeItem["60"]["Size"] = UDim2.new(1, 0, 0, 20);
								ModeItem["60"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								ModeItem["60"]["Name"] = Value;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
								ModeItem["8c"] = Library:CreateObject("ImageLabel", ModeItem["60"]);
								ModeItem["8c"]["ZIndex"] = 0;
								ModeItem["8c"]["BorderSizePixel"] = 0;
								ModeItem["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								ModeItem["8c"]["Image"] = [[rbxassetid://18520020007]];
								ModeItem["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
								ModeItem["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								ModeItem["8c"]["Name"] = [[Gradient]];
								ModeItem["8c"]["BackgroundTransparency"] = 1;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithKeybind.Keybind.KeybindMode.Always.TextButton
								ModeItem["61"] = Library:CreateObject("TextButton", ModeItem["60"]);
								ModeItem["61"]["TextStrokeTransparency"] = 0;
								ModeItem["61"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								ModeItem["61"]["BorderSizePixel"] = 0;
								ModeItem["61"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								ModeItem["61"]["TextSize"] = Library.UI.FontSize;
								ModeItem["61"]["FontFace"] = Library.UI.Font;
								ModeItem["61"]["TextColor3"] = Library.Theme.Default.TextDark;
								ModeItem["61"]["Size"] = UDim2.new(1, 0, 1, 0);
								ModeItem["61"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								ModeItem["61"]["Text"] = Value;
								ModeItem["61"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[ModeItem["61"]] = {
									Color = "TextDark"
								}
								
								Library.Theme.Objects[ModeItem["61"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithKeybind.Keybind.KeybindMode.Always.UIStroke
								ModeItem["62"] = Library:CreateObject("UIStroke", ModeItem["60"]);
								ModeItem["62"]["Color"] = Library.Theme.Default.Inline;
								ModeItem["62"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
								
								Library.Theme.Objects[ModeItem["62"]] = {
									Color = "Inline"
								}
							end
							--
							do -- Functions
								function ModeItem:Activate()
									if not ModeItem.Active then

										if Keybind.CurrentMode ~= nil then
											Keybind.CurrentMode:Deactivate()
										end

										ModeItem.Active = true

										Library:TweenObject(ModeItem["61"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
										
										Library.Theme.Objects[ModeItem["61"]] = {
											Color = "Accent"
										}
										
										Keybind.Mode = Value
										Keybind.CurrentMode = ModeItem
										Keybind.State = false
									end
								end

								function ModeItem:Deactivate()
									if ModeItem.Active then
										ModeItem.Active = false
										ModeItem.Hovering = false

										Library:TweenObject(ModeItem["61"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
										
										Library.Theme.Objects[ModeItem["61"]] = {
											Color = "TextDark"
										}
									end
								end
							end
							--
							do -- Connections
								Library:Connection(ModeItem["60"].MouseEnter, function()
									if not ModeItem.Active and Keybind.Mode ~= Value then
										ModeItem.Hovering = true
										Library:TweenObject(ModeItem["61"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
										
										Library.Theme.Objects[ModeItem["61"]] = {
											Color = "TextColor"
										}
									end
								end)
								--
								Library:Connection(ModeItem["60"].MouseLeave, function()
									if not ModeItem.Active and Keybind.Mode ~= Value then
										ModeItem.Hovering = false
										Library:TweenObject(ModeItem["61"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
										
										Library.Theme.Objects[ModeItem["61"]] = {
											Color = "TextDark"
										}
									end
								end)
								--
								Library:Connection(ModeItem["61"].MouseButton1Click, function()
									ModeItem:Activate()
								end)
							end
							--
							if Keybind.Mode == Value then
								ModeItem:Activate()
							end
						end
					end
				end
				--
				Keybind:AddModes()
			end
			--
			function Keybind:RemoveFrame()
				for Index, Value in Keybind["5a"]:GetChildren() do
					if Value:IsA("Frame") and Value.Name == "KeybindMode" then
						Value:Destroy()
					end
				end
			end
			--
			function Keybind:ToggleFrame()
				Options.Toggle.Toggle = not Options.Toggle.Toggle
				--
				if Options.Toggle.Toggle then
					if Library.UI.OpenColorFrames == 0 then
						Options.Parent.ZIndex = 10
					end
					--
					Keybind:AddFrame()
				else
					if Library.UI.OpenColorFrames == 1 then
						Options.Parent.ZIndex = 1
					end
					--
					Keybind:RemoveFrame()
				end
			end
			--
			function Keybind:Toggle(Bool)
				if Options.Toggle.State then
					if Bool == nil then
						Keybind.State = not Keybind.State
					else
						Keybind.State = Bool
					end
					--
					if not Options.HideFromList then
						if Keybind.State then
							Library:AddKeybindFrame(Keybind.Mode, Options.Toggle:GetName(), Keybind.Keybind)
						else
							Library:RemoveKeybindFrame(Options.Toggle:GetName())
						end
					end
					--
					if Options.Toggle.GetFlag then
						Library.Flags[Options.Toggle:GetFlag()] = Keybind
					end
					--
					Options.Toggle:GetCallback(Keybind.State)
				end
			end
			--
			Keybind:Set(Options.Default)
			--
			function Keybind:Get()
				local KeyString = Keybind.RegKeybind.EnumType == Enum.KeyCode and tostring(Keybind.RegKeybind):match("^Enum%.KeyCode%.(.+)$") or tostring(Keybind.RegKeybind):match("^Enum%.UserInputType%.(.+)$")
				--
				return KeyString
			end
			--
			function Keybind:Active()
				return Keybind.State
			end
		end
		--
		do -- Connections
			Library:Connection(Keybind["5c"].MouseButton1Click, function()
				if Keybind.Connection then
					Keybind.Connection:Disconnect()
				end
				--
				Keybind["5c"].Text = "..."
				local InputTable = {}
				--
				Keybind.Connection = Library:Connection(UserInputService.InputBegan, function(Input)
					Keybind:Set(Input.UserInputType == Enum.UserInputType.Keyboard and Input.KeyCode or Input.UserInputType)
					--
					Keybind.Connection:Disconnect()
					--
					task.delay(0.1, function()
						Keybind.Connection = nil
					end)
				end)
			end)
			--
			Library:Connection(Keybind["5c"].MouseButton2Click, function()
				Keybind:ToggleFrame()
			end)
			--
			Library:Connection(UserInputService.InputBegan, function(Input, Proccessed)
				if Proccessed then return end

				if (Input.UserInputType == Enum.UserInputType.Keyboard and Keybind.Keybind ~= "None" and Input.KeyCode == Keybind.RegKeybind) or (Input.UserInputType == Enum.UserInputType.MouseButton1 and Keybind.Keybind == "MB1") or (Input.UserInputType == Enum.UserInputType.MouseButton2 and Keybind.Keybind == "MB2") or (Input.UserInputType == Enum.UserInputType.MouseButton3 and Keybind.Keybind == "MB3") then
					if Keybind.Mode == "Always" then
						Keybind:Toggle(true)
					elseif Keybind.Mode == "Off Hold" then
						Keybind:Toggle(false)
					else
						Keybind:Toggle()
					end
				end
			end)
			--
			Library:Connection(UserInputService.InputEnded, function(Input, Proccessed)
				if Proccessed then return end

				if Keybind.Mode == "On Hold" or Keybind.Mode == "Off Hold" then
					if (Input.UserInputType == Enum.UserInputType.Keyboard and Keybind.Keybind ~= "None" and Input.KeyCode == Keybind.RegKeybind) or (Input.UserInputType == Enum.UserInputType.MouseButton1 and Keybind.Keybind == "MB1") or (Input.UserInputType == Enum.UserInputType.MouseButton2 and Keybind.Keybind == "MB2") or (Input.UserInputType == Enum.UserInputType.MouseButton3 and Keybind.Keybind == "MB3") then
						if Keybind.Mode == "Off Hold" then
							Keybind:Toggle(true)
						else
							Keybind:Toggle()
						end
					end
				end
			end)
		end
		--
		return Keybind
	end
	--
	function Library:Navigation(Options)
		Options = Library:Validate({
			Size = UDim2.new(0, 88, 0, 36),
		}, Options or {})
		--
		local GUI = {}
		--
		do -- Rendering
			-- StartingPositionerGui.MainUI
			GUI["1"] = Library:CreateObject("ScreenGui", CoreGui);
			GUI["1"]["Name"] = [[UI]];
			GUI["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
			GUI["1"]["ResetOnSpawn"] = false;
			GUI["1"]["IgnoreGuiInset"] = true;
			GUI["1"]["DisplayOrder"] = 1000;
			
			Library.UI.ScreenGUI = GUI["1"]

			-- StartingPositionerGui.MainUI.NavigationFrame
			GUI["2"] = Library:CreateObject("Frame", GUI["1"]);
			GUI["2"]["BorderSizePixel"] = 0;
			GUI["2"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
			GUI["2"]["Size"] = Options.Size;
			GUI["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			GUI["2"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (GUI["2"].Size.X.Offset / 2), 7);
			GUI["2"]["Name"] = [[Navigation]];
			
			Library.Theme.Objects[GUI["2"]] = {
				Color = "LightContrast"
			}

			-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.UIStroke
			GUI["1d0"] = Library:CreateObject("UIStroke", GUI["2"]);
			GUI["1d0"]["Color"] = Library.Theme.Default.Outline;
			GUI["1d0"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

			Library.Theme.Objects[GUI["1d0"]] = {
				Color = "Outline"
			}

			-- StartingPositionerGui.MainUI.NavigationFrame.DropShadowHolder
			GUI["3"] = Library:CreateObject("Frame", GUI["1"]);
			GUI["3"]["ZIndex"] = 0;
			GUI["3"]["BorderSizePixel"] = 0;
			GUI["3"]["BackgroundTransparency"] = 1;
			GUI["3"]["Size"] = Options.Size;
			GUI["3"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (GUI["2"].Size.X.Offset / 2), 7);
			GUI["3"]["Name"] = [[DropShadowHolder]];

			-- StartingPositionerGui.MainUI.NavigationFrame.DropShadowHolder.DropShadow
			GUI["4"] = Library:CreateObject("ImageLabel", GUI["3"]);
			GUI["4"]["ZIndex"] = 0;
			GUI["4"]["BorderSizePixel"] = 0;
			GUI["4"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
			GUI["4"]["ScaleType"] = Enum.ScaleType.Slice;
			GUI["4"]["ImageColor3"] = Library.Theme.Default.Glow;
			GUI["4"]["ImageTransparency"] = 0.5;
			GUI["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
			GUI["4"]["Image"] = [[rbxassetid://6015897843]];
			GUI["4"]["Size"] = UDim2.new(1, 41, 1, 41);
			GUI["4"]["Name"] = [[DropShadow]];
			GUI["4"]["BackgroundTransparency"] = 1;
			GUI["4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
			
			Library.Theme.Objects[GUI["4"]] = {
				ImageColor3 = "Glow"
			}

			-- StartingPositionerGui.MainUI.NavigationFrame.Bar
			GUI["5"] = Library:CreateObject("Frame", GUI["2"]);
			GUI["5"]["BorderSizePixel"] = 0;
			GUI["5"]["BackgroundColor3"] = Library.Theme.Default.Accent;
			GUI["5"]["Size"] = UDim2.new(1, 0, 0, 2);
			GUI["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			GUI["5"]["Name"] = [[Bar]];
			
			Library.Theme.Objects[GUI["5"]] = {
				Color = "Accent"
			}

			-- StartingPositionerGui.MainUI.NavigationFrame.Holder
			GUI["6"] = Library:CreateObject("Frame", GUI["2"]);
			GUI["6"]["BorderSizePixel"] = 0;
			GUI["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			GUI["6"]["BackgroundTransparency"] = 1;
			GUI["6"]["Size"] = UDim2.new(1, 0, 1, 0);
			GUI["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			GUI["6"]["Name"] = [[Holder]];

			-- StartingPositionerGui.MainUI.NavigationFrame.Holder.UIListLayout
			GUI["7"] = Library:CreateObject("UIListLayout", GUI["6"]);
			GUI["7"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
			GUI["7"]["FillDirection"] = Enum.FillDirection.Horizontal;
			GUI["7"]["Padding"] = UDim.new(0, 6);
			GUI["7"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

			-- StartingPositionerGui.MainUI.NavigationFrame.Holder.UIPadding
			GUI["b"] = Library:CreateObject("UIPadding", GUI["6"]);
			GUI["b"]["PaddingLeft"] = UDim.new(0, 5);
			GUI["b"]["PaddingTop"] = UDim.new(0, 2);
		end
		--
		function GUI:CreateTab(Options)
			Options = Library:Validate({
				Icon = "rbxassetid://18468372588",
				MainWindow = false,
				ESPPreview = false,
				PlayerList = false,
				HitPoints = false,
				Configs = false,
				ChatSpy = false,
				Settings = false,
			}, Options or {})
			--
			local Tab = {
				Active = false,
				Hovering = false,
				ZIndex = 1,
				GUI = {
					Tabs = {},
					CurrentTab = nil,
				},
			}
			--
			do -- Rendering
				-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton
				Tab["8"] = Library:CreateObject("Frame", GUI["6"]);
				Tab["8"]["BorderSizePixel"] = 0;
				Tab["8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Tab["8"]["BackgroundTransparency"] = 1;
				Tab["8"]["Size"] = UDim2.new(0, 22, 1, -14);
				Tab["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Tab["8"]["Position"] = UDim2.new(0, 5, 0, 8);
				Tab["8"]["Name"] = [[ActiveButton]];

				-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.UIStroke
				Tab["9"] = Library:CreateObject("UIStroke", Tab["8"]);
				Tab["9"]["Color"] = Library.Theme.Default.Inline;
				Tab["9"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
				
				Library.Theme.Objects[Tab["9"]] = {
					Color = "Inline"
				}

				-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.Image
				Tab["a"] = Library:CreateObject("ImageLabel", Tab["8"]);
				Tab["a"]["BorderSizePixel"] = 0;
				Tab["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Tab["a"]["ImageColor3"] = Library.Theme.Default.ImageDark;
				Tab["a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
				Tab["a"]["Image"] = Options.Icon;
				Tab["a"]["Size"] = UDim2.new(1, -6, 1, -6);
				Tab["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Tab["a"]["Name"] = [[Image]];
				Tab["a"]["BackgroundTransparency"] = 1;
				Tab["a"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
				
				Library.Theme.Objects[Tab["a"]] = {
					Color = "ImageDark"
				}

				-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
				Tab["b"] = Library:CreateObject("TextButton", Tab["8"]);
				Tab["b"]["BorderSizePixel"] = 0;
				Tab["b"]["TextTransparency"] = 1;
				Tab["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Tab["b"]["TextSize"] = Library.UI.FontSize;
				Tab["b"]["FontFace"] = Library.UI.Font;
				Tab["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
				Tab["b"]["Size"] = UDim2.new(1, 0, 1, 0);
				Tab["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				Tab["b"]["BackgroundTransparency"] = 1;
			end
			--
			do -- Functions
				function Tab:Toggle()
					if not Tab.Active then
						Tab.Active = true
						--
						Library:TweenObject(Tab["a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {ImageColor3 = Library.Theme.Default.Accent})
						--
						Library.Theme.Objects[Tab["a"]] = {
							Color = "Accent"
						}
					else
						Tab.Active = false
						Tab.Hovering = false
						--
						Library:TweenObject(Tab["a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {ImageColor3 = Library.Theme.Default.ImageDark})
						--
						Library.Theme.Objects[Tab["a"]] = {
							Color = "ImageDark"
						}
					end
					--
					Library.UI.LastZIndex = Library.UI.LastZIndex + 1
					--
					Tab.GUI["2"].ZIndex = Library.UI.LastZIndex
					Tab.GUI["3"].ZIndex = Tab.GUI["2"].ZIndex - 2
					Tab.GUI["bdf3"].ZIndex = Tab.GUI["2"].ZIndex - 1
					Tab.GUI["2"].Visible = Tab.Active
					Tab.GUI["3"].Visible = Tab.Active
					Tab.GUI["bdf3"].Visible = Tab.Active
					--
					Library.UI.LastZIndex = Tab.GUI["2"].ZIndex + 5
				end
				--
				function Tab:UpdateSizes()
					local Count = #Tab.GUI.Tabs
					local PaddingAmount = (Count - 1) * 7
					local TabWidth = (1 - PaddingAmount / Tab.GUI["16"].AbsoluteSize.X) / Count
					--
					for Index, Value in Tab.GUI.Tabs do
						Value.Size = UDim2.new(TabWidth, 0, 1, -20)
						Value.Position = UDim2.new((TabWidth + 7 / Tab.GUI["16"].AbsoluteSize.X) * (Index - 1), 0, 0, 10)
					end
				end
			end
			--
			do -- Connections
				Library:Connection(Tab["8"].MouseEnter, function()
					if not Tab.Active then
						Library:TweenObject(Tab["a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {ImageColor3 = Library.Theme.Default.ImageLight})
						--
						Tab.Hovering = true
						--
						Library.Theme.Objects[Tab["a"]] = {
							Color = "ImageLight"
						}
					end
				end)
				--
				Library:Connection(Tab["8"].MouseLeave, function()
					if Tab.Hovering and not Tab.Active then
						Library:TweenObject(Tab["a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {ImageColor3 = Library.Theme.Default.ImageDark})
						--
						Tab.Hovering = false
						--
						Library.Theme.Objects[Tab["a"]] = {
							Color = "ImageDark"
						}
					end
				end)
				--
				Library:Connection(Tab["b"].MouseButton1Click, function()
					Tab:Toggle()
				end)
			end
			--
			if Options.MainWindow then
				function Tab:Window(Options)
					Options = Library:Validate({
						Name = "Elevated",
						Size = UDim2.new(0, 600, 0, 650),
						MinResize = UDim2.new(0, 450, 0, 500),
						MaxResize = UDim2.new(0, 600, 0, 650),
						CloseBind = Enum.KeyCode.LeftControl,
					}, Options or {})
					--
					local Window = Tab.GUI
					--
					Library.UI.CloseBind = Options.CloseBind
					Library.UI.Name = Options.Name
					--
					do -- Rendering
						-- StartingPositionerGui.MainUI.MainFrame
						Window["2"] = Library:CreateObject("Frame", GUI["1"]);
						Window["2"]["BorderSizePixel"] = 0;
						Window["2"]["AnchorPoint"] = Vector2.new(0, 0);
						Window["2"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
						Window["2"]["Size"] = Options.Size;
						Window["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["2"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
						Window["2"]["Name"] = [[Main Window]];
						Window["2"]["Visible"] = Tab.Active;
						
						Library.Theme.Objects[Window["2"]] = {
							Color = "DarkContrast"
						}
						
						-- StarterGui.MainUI.MainFrameBack
						Window["bdf3"] = Library:CreateObject("Frame", GUI["1"]);
						Window["bdf3"]["BorderSizePixel"] = 0;
						Window["bdf3"]["BackgroundColor3"] = Library.Theme.Default.Outline;
						Window["bdf3"]["Size"] = Options.Size + UDim2.new(0, 4, 0, 4);
						Window["bdf3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["bdf3"]["Position"] = Window["2"].Position + UDim2.new(0, -2, 0, -2);
						Window["bdf3"]["Name"] = [[MainFrameBack]];
						Window["bdf3"]["Visible"] = false;
						
						Library.Theme.Objects[Window["bdf3"]] = {
							Color = "Outline"
						}

						-- StarterGui.MainUI.MainFrameBack
						Window["bdf36"] = Library:CreateObject("Frame", GUI["1"]);
						Window["bdf36"]["BorderSizePixel"] = 0;
						Window["bdf36"]["BackgroundColor3"] = Library.Theme.Default.Outline;
						Window["bdf36"]["BackgroundTransparency"] = 1;
						Window["bdf36"]["Size"] = Window["2"].Size;
						Window["bdf36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["bdf36"]["Position"] = Window["2"].Position;
						Window["bdf36"]["Name"] = [[MainFrameBack]];
						Window["bdf36"]["Visible"] = false;

						-- StartingPositionerGui.MainUI.MainFrame.UIStroke
						Window["5fd"] = Library:CreateObject("UIStroke", Window["bdf36"]);
						Window["5fd"]["Color"] = Library.Theme.Default.Accent;
						Window["5fd"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						Window["5fd"]["Thickness"] = 1;

						Library.Theme.Objects[Window["5fd"]] = {
							Color = "Accent"
						}

						-- StartingPositionerGui.MainUI.MainFrame.DropShadowHolder
						Window["3"] = Library:CreateObject("Frame", GUI["1"]);
						Window["3"]["ZIndex"] = 0;
						Window["3"]["BorderSizePixel"] = 0;
						Window["3"]["BackgroundTransparency"] = 1;
						Window["3"]["Size"] = Window["2"].Size;
						Window["3"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
						Window["3"]["Name"] = [[DropShadowHolder]];
						Window["3"]["Visible"] = false;

						-- StartingPositionerGui.MainUI.MainFrame.DropShadowHolder.DropShadow
						Window["4"] = Library:CreateObject("ImageLabel", Window["3"]);
						Window["4"]["ZIndex"] = 0;
						Window["4"]["BorderSizePixel"] = 0;
						Window["4"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
						Window["4"]["ScaleType"] = Enum.ScaleType.Slice;
						Window["4"]["ImageColor3"] = Library.Theme.Default.Glow;
						Window["4"]["ImageTransparency"] = 0.5;
						Window["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
						Window["4"]["Image"] = [[rbxassetid://6015897843]];
						Window["4"]["Size"] = UDim2.new(1, 47, 1, 47);
						Window["4"]["Name"] = [[DropShadow]];
						Window["4"]["BackgroundTransparency"] = 1;
						Window["4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
						
						Library.Theme.Objects[Window["4"]] = {
							Color = "Glow"
						}

						-- StartingPositionerGui.MainUI.MainFrame.UIStroke
						Window["5"] = Library:CreateObject("UIStroke", Window["2"]);
						Window["5"]["Color"] = Library.Theme.Default.Accent;
						Window["5"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						Window["5"]["Thickness"] = 1;
						
						Library.Theme.Objects[Window["5"]] = {
							Color = "Accent"
						}

						-- StartingPositionerGui.MainUI.MainFrame.InnerFrame
						Window["6"] = Library:CreateObject("Frame", Window["2"]);
						Window["6"]["BorderSizePixel"] = 0;
						Window["6"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
						Window["6"]["Size"] = UDim2.new(1, -14, 1, -27);
						Window["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["6"]["Position"] = UDim2.new(0, 7, 0, 20);
						Window["6"]["Name"] = [[InnerFrame]];
						
						Library.Theme.Objects[Window["6"]] = {
							Color = "DarkContrast"
						}

						-- StartingPositionerGui.MainUI.MainFrame.InnerFrame.UIStroke
						Window["7"] = Library:CreateObject("UIStroke", Window["6"]);
						Window["7"]["Color"] = Library.Theme.Default.Inline;
						Window["7"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						
						Library.Theme.Objects[Window["7"]] = {
							Color = "Inline"
						}

						-- StartingPositionerGui.MainUI.MainFrame.TopBar
						Window["28"] = Library:CreateObject("Frame", Window["2"]);
						Window["28"]["BorderSizePixel"] = 0;
						Window["28"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["28"]["BackgroundTransparency"] = 1;
						Window["28"]["Size"] = UDim2.new(1, 0, 0, 20);
						Window["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["28"]["Name"] = [[TopBar]];
						
						-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.TextButton
						Window["1dfb"] = Library:CreateObject("TextButton",Window["28"]);
						Window["1dfb"]["BorderSizePixel"] = 0;
						Window["1dfb"]["TextTransparency"] = 1;
						Window["1dfb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["1dfb"]["TextSize"] = Library.UI.FontSize;
						Window["1dfb"]["FontFace"] = Library.UI.Font;
						Window["1dfb"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1dfb"]["Size"] = UDim2.new(1, 0, 1, 0);
						Window["1dfb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1dfb"]["BackgroundTransparency"] = 1;

						-- StartingPositionerGui.MainUI.MainFrame.TopBar.TextLabel
						Window["29"] = Library:CreateObject("TextLabel", Window["28"]);
						Window["29"]["TextStrokeTransparency"] = 0;
						Window["29"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
						Window["29"]["BorderSizePixel"] = 0;
						Window["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["29"]["TextXAlignment"] = Enum.TextXAlignment.Left;
						Window["29"]["FontFace"] = Library.UI.Font;
						Window["29"]["TextSize"] = Library.UI.FontSize;
						Window["29"]["TextColor3"] = Library.Theme.Default.TextColor;
						Window["29"]["Size"] = UDim2.new(1, 0, 1, 0);
						Window["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["29"]["Text"] = Options.Name;
						Window["29"]["BackgroundTransparency"] = 1;
						Window["29"]["RichText"] = true;
						
						Library.Theme.Objects[Window["29"]] = {
							TextStrokeColor3 = "TextBorder",
							TextColor3 = "TextColor"
						}
						
						-- StartingPositionerGui.MainUI.MainFrame.TopBar.TextLabel.UIPadding
						Window["2a"] = Library:CreateObject("UIPadding", Window["29"]);
						Window["2a"]["PaddingLeft"] = UDim.new(0, 6);

						Window["2d"] = Library:CreateObject("Frame", Window["2"]);
						Window["2d"]["BorderSizePixel"] = 0;
						Window["2d"]["BackgroundTransparency"] = 1;
						Window["2d"]["AnchorPoint"] = Vector2.new(1, 1)
						Window["2d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["2d"]["Size"] = UDim2.new(0, 20, 0, 20);
						Window["2d"]["Name"] = [[ResizableCorner]];
						Window["2d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["2d"]["Position"] = UDim2.new(1, 0, 1, 0);

						-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar
						Window["16"] = Library:CreateObject("Frame", Window["6"]);
						Window["16"]["BorderSizePixel"] = 0;
						Window["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["16"]["BackgroundTransparency"] = 1;
						Window["16"]["Size"] = UDim2.new(1, -10, 0, 27);
						Window["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["16"]["Position"] = UDim2.new(0, 5, 0, 0);
						Window["16"]["Name"] = [[TopBar]];
						Window["16"]["ZIndex"] = 2;
						
						-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.UIPadding
						Window["22"] = Library:CreateObject("UIPadding", Window["16"]);
						Window["22"]["PaddingBottom"] = UDim.new(0, -14);
						
						-- StarterGui.Settings.MainFrame.TopBar.CloseButton
						Window["19df"] = Library:CreateObject("ImageButton", Window["28"]);
						Window["19df"]["BorderSizePixel"] = 0;
						Window["19df"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["19df"]["Image"] = [[rbxassetid://18491059927]];
						Window["19df"]["Size"] = UDim2.new(0, 10, 1, -10);
						Window["19df"]["Name"] = [[CloseButton]];
						Window["19df"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["19df"]["Position"] = UDim2.new(1, -15, 0, 5);
						Window["19df"]["BackgroundTransparency"] = 1;
						
						Library.Theme.Objects[Window["19df"]] = {
							ImageColor3 = "ImageColor"
						}
					end
					--
					do -- Connections
						Library:Connection(Window["19df"].MouseButton1Click, function()
							Tab:Toggle()
						end)
					end
					--
					do -- Functions
						function Window:CreateWatermark()
							
							local Watermark = {
								RefreshTick = tick(),
								FPSTick = tick(),
							}
							--
							do -- Rendering
								-- StarterGui.WatermarkKeybindList.Watermark
								Watermark["2"] = Library:CreateObject("Frame", GUI["1"]);
								Watermark["2"]["BorderSizePixel"] = 0;
								Watermark["2"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Watermark["2"]["Size"] = UDim2.new(0, 146, 0, 28);
								Watermark["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Watermark["2"]["Position"] = UDim2.new(0, 165, 0, 19)
								Watermark["2"]["Name"] = [[Watermark]];
								Watermark["2"]["ZIndex"] = 1000;
								
								Library.Theme.Objects[Watermark["2"]] = {
									Color = "LightContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.UIStroke
								Watermark["10d"] = Library:CreateObject("UIStroke", Watermark["2"]);
								Watermark["10d"]["Color"] = Library.Theme.Default.Outline;
								Watermark["10d"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

								Library.Theme.Objects[Watermark["10d"]] = {
									Color = "Outline"
								}

								-- StarterGui.WatermarkKeybindList.Watermark.DropShadowHolder
								Watermark["3"] = Library:CreateObject("Frame", GUI["1"]);
								Watermark["3"]["ZIndex"] = 0;
								Watermark["3"]["BorderSizePixel"] = 0;
								Watermark["3"]["BackgroundTransparency"] = 1;
								Watermark["3"]["Size"] = UDim2.new(0, 146, 0, 28);
								Watermark["3"]["Position"] = UDim2.new(0, 165, 0, 19)
								Watermark["3"]["Name"] = [[DropShadowHolder]];

								-- StarterGui.WatermarkKeybindList.Watermark.DropShadowHolder.DropShadow
								Watermark["4"] = Library:CreateObject("ImageLabel", Watermark["3"]);
								Watermark["4"]["ZIndex"] = 0;
								Watermark["4"]["BorderSizePixel"] = 0;
								Watermark["4"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
								Watermark["4"]["ScaleType"] = Enum.ScaleType.Slice;
								Watermark["4"]["ImageColor3"] = Library.Theme.Default.Glow;
								Watermark["4"]["ImageTransparency"] = 0.5;
								Watermark["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
								Watermark["4"]["Image"] = [[rbxassetid://6015897843]];
								Watermark["4"]["Size"] = UDim2.new(1, 31, 1, 31);
								Watermark["4"]["Name"] = [[DropShadow]];
								Watermark["4"]["BackgroundTransparency"] = 1;
								Watermark["4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
								
								Library.Theme.Objects[Watermark["4"]] = {
									ImageColor3 = "Glow"
								}

								-- StarterGui.WatermarkKeybindList.Watermark.Bar
								Watermark["5"] = Library:CreateObject("Frame", Watermark["2"]);
								Watermark["5"]["BorderSizePixel"] = 0;
								Watermark["5"]["BackgroundColor3"] = Library.Theme.Default.Accent;
								Watermark["5"]["Size"] = UDim2.new(1, 0, 0, 2);
								Watermark["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Watermark["5"]["Name"] = [[Bar]];
								
								Library.Theme.Objects[Watermark["5"]] = {
									Color = "Accent"
								}

								-- StarterGui.WatermarkKeybindList.Watermark.Holder
								Watermark["6"] = Library:CreateObject("Frame", Watermark["2"]);
								Watermark["6"]["BorderSizePixel"] = 0;
								Watermark["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Watermark["6"]["BackgroundTransparency"] = 1;
								Watermark["6"]["Size"] = UDim2.new(1, 0, 1, 0);
								Watermark["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Watermark["6"]["Name"] = [[Holder]];

								-- StarterGui.WatermarkKeybindList.Watermark.Holder.Text
								Watermark["7"] = Library:CreateObject("TextLabel", Watermark["6"]);
								Watermark["7"]["TextStrokeTransparency"] = 0;
								Watermark["7"]["BorderSizePixel"] = 0;
								Watermark["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Watermark["7"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								Watermark["7"]["FontFace"] = Library.UI.Font;
								Watermark["7"]["TextSize"] = Library.UI.FontSize;
								Watermark["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
								Watermark["7"]["Size"] = UDim2.new(1, 0, 1, 0);
								Watermark["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Watermark["7"]["Text"] = "Watermark";
								Watermark["7"]["Name"] = [[Text]];
								Watermark["7"]["BackgroundTransparency"] = 1;
								Watermark["7"]["RichText"] = true;

								-- StarterGui.WatermarkKeybindList.Watermark.Holder.Text.UIPadding
								Watermark["8"] = Library:CreateObject("UIPadding", Watermark["7"]);
								Watermark["8"]["PaddingLeft"] = UDim.new(0, 8);
							end
							--
							do -- Functions
								function Library:UpdateWatermark(Text)
									Watermark["7"].Text = tostring(Text)
									Watermark["2"].Size = UDim2.new(0, Watermark["7"].TextBounds.X + 15, 0, Watermark["2"].Size.Y.Offset)
									Watermark["3"].Size = UDim2.new(0, Watermark["7"].TextBounds.X + 15, 0, Watermark["2"].Size.Y.Offset)
									--
									local RealPosition = Library.UI.WatermarkPosition == "Middle" and UDim2.fromOffset((Viewport.X / 2) - ((Watermark["7"].TextBounds.X + 4) / 2), (Viewport.Y) - (Watermark["2"].Size.Y.Offset) - 10) or UDim2.new(0, 165, 0, 19)
									--
									Watermark["2"].Position = RealPosition
									Watermark["3"].Position = RealPosition
								end
								--
								function Library:ToggleWatermark(State)
									Watermark["2"].Visible = State
									Watermark["3"].Visible = State
								end
							end
							--
							local R, G, B = Library.Theme.Default.Accent.r * 255, Library.Theme.Default.Accent.g * 255, Library.Theme.Default.Accent.b * 255
							--
							Library:UpdateWatermark(("<font color='rgb(%d, %d, %d)'>[%s]</font> - [Build = Private | FPS = %s | Ping = %s] - %s"):format(R, G, B, Options.Name, "0", "0", os.date("%I:%M %p")))
							--
							Library:Connection(RunService.Heartbeat, function()
								if Watermark["2"].Visible then
									local R, G, B = Library.Theme.Default.Accent.r * 255, Library.Theme.Default.Accent.g * 255, Library.Theme.Default.Accent.b * 255
									local FPS = math.floor(1 / math.abs(Watermark.FPSTick - tick()))
									local Ping = Stats.Network:FindFirstChild("ServerStatsItem") and tostring(math.round(Stats.Network.ServerStatsItem["Data Ping"]:GetValue())) or "N/A"
									--
									Watermark.FPSTick = tick()
									--
									task.spawn(function()
										if (tick() - Watermark.RefreshTick) > Library.UI.WatermarkRefreshRate and Library.UpdateWatermark then
											Library:UpdateWatermark(("<font color='rgb(%d, %d, %d)'>[%s]</font> - [Build = Private | FPS = %s | Ping = %s] - %s"):format(R, G, B, Library.UI.Name, FPS, Ping, os.date("%I:%M %p")))
											--
											Watermark.RefreshTick = tick()
										end
									end)
								end
							end)
							--
							return Watermark
						end
						--
						function Window:CreateKeybindList()
							local KeybindList = {
								Keybinds = 0,
							}
							--
							do -- Rendering
								-- StarterGui.WatermarkKeybindList.KeybindShadowFrame
								KeybindList["9"] = Library:CreateObject("Frame", GUI["1"]);
								KeybindList["9"]["BorderSizePixel"] = 0;
								KeybindList["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								KeybindList["9"]["BackgroundTransparency"] = 1;
								KeybindList["9"]["Size"] = UDim2.new(0, 200, 0, 25);
								KeybindList["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								KeybindList["9"]["Position"] = UDim2.fromOffset(10, (Viewport.Y / 2) - (KeybindList["9"].Size.Y.Offset / 2));
								KeybindList["9"]["Name"] = [[KeybindShadowFrame]];
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.UIStroke
								KeybindList["10d"] = Library:CreateObject("UIStroke", KeybindList["9"]);
								KeybindList["10d"]["Color"] = Library.Theme.Default.Outline;
								KeybindList["10d"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

								Library.Theme.Objects[KeybindList["10d"]] = {
									Color = "Outline"
								}

								-- StarterGui.MainUI.MainFrameBack
								KeybindList["bdf36"] = Library:CreateObject("Frame", GUI["1"]);
								KeybindList["bdf36"]["BorderSizePixel"] = 0;
								KeybindList["bdf36"]["BackgroundColor3"] = Library.Theme.Default.Outline;
								KeybindList["bdf36"]["BackgroundTransparency"] = 1;
								KeybindList["bdf36"]["Size"] = KeybindList["9"].Size;
								KeybindList["bdf36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								KeybindList["bdf36"]["Position"] = KeybindList["9"].Position;
								KeybindList["bdf36"]["Name"] = [[MainFrameBack]];
								KeybindList["bdf36"]["Visible"] = false;

								-- StartingPositionerGui.MainUI.MainFrame.UIStroke
								KeybindList["5fd"] = Library:CreateObject("UIStroke", KeybindList["bdf36"]);
								KeybindList["5fd"]["Color"] = Library.Theme.Default.Accent;
								KeybindList["5fd"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
								KeybindList["5fd"]["Thickness"] = 1;

								Library.Theme.Objects[KeybindList["5fd"]] = {
									Color = "Accent"
								}

								-- StarterGui.WatermarkKeybindList.KeybindShadowFrame.KeybindList
								KeybindList["a"] = Library:CreateObject("Frame", KeybindList["9"]);
								KeybindList["a"]["BorderSizePixel"] = 0;
								KeybindList["a"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								KeybindList["a"]["Size"] = UDim2.new(0, 200, 0, 25);
								KeybindList["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								KeybindList["a"]["Name"] = [[KeybindList]];
								
								Library.Theme.Objects[KeybindList["a"]] = {
									Color = "LightContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.TextButton
								KeybindList["1dfb"] = Library:CreateObject("TextButton", KeybindList["a"]);
								KeybindList["1dfb"]["BorderSizePixel"] = 0;
								KeybindList["1dfb"]["TextTransparency"] = 1;
								KeybindList["1dfb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								KeybindList["1dfb"]["TextSize"] = Library.UI.FontSize;
								KeybindList["1dfb"]["FontFace"] = Library.UI.Font;
								KeybindList["1dfb"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
								KeybindList["1dfb"]["Size"] = UDim2.new(1, 0, 1, 0);
								KeybindList["1dfb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								KeybindList["1dfb"]["BackgroundTransparency"] = 1;

								-- StarterGui.WatermarkKeybindList.KeybindShadowFrame.KeybindList.Bar
								KeybindList["b"] = Library:CreateObject("Frame", KeybindList["a"]);
								KeybindList["b"]["BorderSizePixel"] = 0;
								KeybindList["b"]["BackgroundColor3"] = Library.Theme.Default.Accent;
								KeybindList["b"]["Size"] = UDim2.new(1, 0, 0, 2);
								KeybindList["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								KeybindList["b"]["Name"] = [[Bar]];
								
								Library.Theme.Objects[KeybindList["b"]] = {
									Color = "Accent"
								}

								-- StarterGui.WatermarkKeybindList.KeybindShadowFrame.KeybindList.TopBar
								KeybindList["c"] = Library:CreateObject("Frame", KeybindList["a"]);
								KeybindList["c"]["BorderSizePixel"] = 0;
								KeybindList["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								KeybindList["c"]["BackgroundTransparency"] = 1;
								KeybindList["c"]["Size"] = UDim2.new(1, 0, 1, 0);
								KeybindList["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								KeybindList["c"]["Name"] = [[TopBar]];

								-- StarterGui.WatermarkKeybindList.KeybindShadowFrame.KeybindList.TopBar.TextLabel
								KeybindList["d"] = Library:CreateObject("TextLabel", KeybindList["c"]);
								KeybindList["d"]["TextStrokeTransparency"] = 0;
								KeybindList["d"]["BorderSizePixel"] = 0;
								KeybindList["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								KeybindList["d"]["FontFace"] = Library.UI.Font;
								KeybindList["d"]["TextSize"] = Library.UI.FontSize;
								KeybindList["d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
								KeybindList["d"]["Size"] = UDim2.new(1, 0, 1, 0);
								KeybindList["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								KeybindList["d"]["Text"] = [[Keybinds]];
								KeybindList["d"]["BackgroundTransparency"] = 1;

								-- StarterGui.WatermarkKeybindList.KeybindShadowFrame.KeybindList.KeybindHolder
								KeybindList["e"] = Library:CreateObject("Frame", KeybindList["a"]);
								KeybindList["e"]["BorderSizePixel"] = 0;
								KeybindList["e"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
								KeybindList["e"]["Size"] = UDim2.new(1, 0, 0, 0);
								KeybindList["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								KeybindList["e"]["Position"] = UDim2.new(0, 0, 1, 0);
								KeybindList["e"]["AutomaticSize"] = Enum.AutomaticSize.Y;
								KeybindList["e"]["Name"] = [[KeybindHolder]];
								
								Library.Theme.Objects[KeybindList["e"]] = {
									Color = "DarkContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.UIListLayout
								KeybindList["1d1"] = Library:CreateObject("UIListLayout", KeybindList["e"]);
								KeybindList["1d1"]["Padding"] = UDim.new(0, 1);
								KeybindList["1d1"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
								
								-- StarterGui.WatermarkKeybind.KeybindShadowFrame.Keybind.KeybindHolder.KeybindFrame.KeybindName.UIPadding
								KeybindList["f3"] = Library:CreateObject("UIPadding", KeybindList["e"]);
								KeybindList["f3"]["PaddingLeft"] = UDim.new(0, 1);

								-- StarterGui.WatermarkKeybindList.KeybindShadowFrame.DropShadowHolder
								KeybindList["14"] = Library:CreateObject("Frame", KeybindList["9"]);
								KeybindList["14"]["ZIndex"] = 0;
								KeybindList["14"]["BorderSizePixel"] = 0;
								KeybindList["14"]["BackgroundTransparency"] = 1;
								KeybindList["14"]["Size"] = UDim2.new(1, 0, 1, 0);
								KeybindList["14"]["Name"] = [[DropShadowHolder]];

								-- StarterGui.WatermarkKeybindList.KeybindShadowFrame.DropShadowHolder.DropShadow
								KeybindList["15"] = Library:CreateObject("ImageLabel", KeybindList["14"]);
								KeybindList["15"]["ZIndex"] = 0;
								KeybindList["15"]["BorderSizePixel"] = 0;
								KeybindList["15"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
								KeybindList["15"]["ScaleType"] = Enum.ScaleType.Slice;
								KeybindList["15"]["ImageColor3"] = Library.Theme.Default.Glow;
								KeybindList["15"]["ImageTransparency"] = 0.5;
								KeybindList["15"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
								KeybindList["15"]["Image"] = [[rbxassetid://6015897843]];
								KeybindList["15"]["Size"] = UDim2.new(1, 24, 1, 24);
								KeybindList["15"]["Name"] = [[DropShadow]];
								KeybindList["15"]["BackgroundTransparency"] = 1;
								KeybindList["15"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
								
								Library.Theme.Objects[KeybindList["15"]] = {
									Color = "Glow"
								}
							end
							--
							function Library:UpdateKeybindPosition()
								KeybindList["9"].Position = UDim2.fromOffset(10, (Viewport.Y / 2) - (KeybindList["9"].Size.Y.Offset / 2))
							end
							--
							function Library:ToggleKeybindList(State)
								KeybindList["9"].Visible = State
							end
							--
							function Window:CheckSize()
								local Offset = KeybindList.Keybinds * 10
								--
								if KeybindList.Keybinds == 0 then
									KeybindList["15"].Size = UDim2.new(1, 24, 1, 24)
								else
									KeybindList["15"].Size = UDim2.new(1, 33 + Offset, 1, 33 + Offset)
								end
							end
							--
							function Window:TextBounds()
								local Largest = Vector2.new(0, 0)
								--
								for Index, Value in KeybindList["e"]:GetDescendants() do
									if Value:IsA("TextLabel") then
										local TextBounds = Value.TextBounds
										--
										Largest = Vector2.new(math.max(Largest.X, TextBounds.X), math.max(Largest.Y, TextBounds.Y))
									end
								end
								--
								return Largest
							end

							function Window:UpdateSize()
								local DefaultSize = UDim2.new(0, 200, 0, 25)
								local MaxSize = UDim2.new(0, 200, 0, 25)
								--
								if KeybindList.Keybinds > 0 then
									local LargestTextBounds = Window:TextBounds()
									--
									DefaultSize = UDim2.new(0, math.max(LargestTextBounds.X + 12, 200), 0, 25)
									MaxSize = UDim2.new(0, math.max(LargestTextBounds.X + 12, 200), 0, 25 + (23 * KeybindList.Keybinds))
								end
								--
								KeybindList["a"].Size = DefaultSize
								KeybindList["9"].Size = MaxSize
							end
							--
							Library:Connection(KeybindList["e"].ChildAdded, function()
								Window:UpdateSize()
								Window:CheckSize()
							end)
							--
							Library:Connection(KeybindList["e"].ChildRemoved, function()
								Window:UpdateSize()
								Window:CheckSize()
							end)
							--
							Window:CheckSize()
							--
							do -- Functions
								function Library:AddKeybindFrame(Mode, Name, Key)
									if KeybindList["e"]:FindFirstChild(tostring(Name)) then return end
									--
									KeybindList["9"].Size = UDim2.new(KeybindList["9"].Size.X.Scale, KeybindList["9"].Size.X.Offset, KeybindList["9"].Size.Y.Scale, KeybindList["9"].Size.Y.Offset + 23)
									KeybindList.Keybinds += 1
									--
									local Keybind = {}
									--
									do -- Rendering
										-- StarterGui.WatermarkKeybind.KeybindShadowFrame.Keybind.KeybindHolder.KeybindFrame
										Keybind["f"] = Library:CreateObject("Frame", KeybindList["e"]);
										Keybind["f"]["BorderSizePixel"] = 0;
										Keybind["f"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
										Keybind["f"]["BackgroundTransparency"] = 0;
										Keybind["f"]["Size"] = UDim2.new(1, -1, 0, 22);
										Keybind["f"]["Position"] = UDim2.new(0, 1, 0, 1);
										Keybind["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Keybind["f"]["Name"] = tostring(Name);
										
										Library.Theme.Objects[Keybind["f"]] = {
											Color = "DarkContrast"
										}

										-- StartingPositionerGui.MainUI.MainFrame.InnerFrame.Navigation.UIStroke
										Keybind["9d"] = Library:CreateObject("UIStroke", Keybind["f"]);
										Keybind["9d"]["Color"] = Library.Theme.Default.Inline;
										Keybind["9d"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

										Library.Theme.Objects[Keybind["9d"]] = {
											Color = "Inline"
										}

										-- StarterGui.WatermarkKeybind.KeybindShadowFrame.Keybind.KeybindHolder.KeybindFrame.KeybindName
										Keybind["10"] = Library:CreateObject("TextLabel", Keybind["f"]);
										Keybind["10"]["BorderSizePixel"] = 0;
										Keybind["10"]["TextStrokeTransparency"] = 0;
										Keybind["10"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
										Keybind["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
										Keybind["10"]["TextXAlignment"] = Enum.TextXAlignment.Left;
										Keybind["10"]["FontFace"] = Library.UI.Font;
										Keybind["10"]["TextSize"] = Library.UI.FontSize;
										Keybind["10"]["TextColor3"] = Library.Theme.Default.TextColor;
										Keybind["10"]["Size"] = UDim2.new(0.5, 0, 1, 0);
										Keybind["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Keybind["10"]["Text"] = ("[%s] %s"):format(tostring(Mode), tostring(Name));
										Keybind["10"]["Name"] = [[KeybindName]];
										Keybind["10"]["BackgroundTransparency"] = 1;
										
										Library.Theme.Objects[Keybind["10"]] = {
											TextStrokeColor3 = "TextBorder",
											TextColor3 = "TextColor"
										}

										-- StarterGui.WatermarkKeybind.KeybindShadowFrame.Keybind.KeybindHolder.KeybindFrame.KeybindName.UIPadding
										Keybind["11"] = Library:CreateObject("UIPadding", Keybind["10"]);
										Keybind["11"]["PaddingLeft"] = UDim.new(0, 4);

										-- StarterGui.WatermarkKeybind.KeybindShadowFrame.Keybind.KeybindHolder.KeybindFrame.KeybindKey
										Keybind["12"] = Library:CreateObject("TextLabel", Keybind["f"]);
										Keybind["12"]["BorderSizePixel"] = 0;
										Keybind["12"]["TextStrokeTransparency"] = 0;
										Keybind["12"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
										Keybind["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
										Keybind["12"]["TextXAlignment"] = Enum.TextXAlignment.Right;
										Keybind["12"]["FontFace"] = Library.UI.Font;
										Keybind["12"]["TextSize"] = Library.UI.FontSize;
										Keybind["12"]["TextColor3"] = Library.Theme.Default.TextColor;
										Keybind["12"]["Size"] = UDim2.new(0.5, 0, 1, 0);
										Keybind["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Keybind["12"]["Text"] = ("[%s]"):format(tostring(Key));
										Keybind["12"]["Name"] = [[KeybindKey]];
										Keybind["12"]["BackgroundTransparency"] = 1;
										Keybind["12"]["Position"] = UDim2.new(0.5, 0, 0, 0);
										
										Library.Theme.Objects[Keybind["12"]] = {
											TextStrokeColor3 = "TextBorder",
											TextColor3 = "TextColor"
										}

										-- StarterGui.WatermarkKeybind.KeybindShadowFrame.Keybind.KeybindHolder.KeybindFrame.KeybindKey.UIPadding
										Keybind["13"] = Library:CreateObject("UIPadding", Keybind["12"]);
										Keybind["13"]["PaddingRight"] = UDim.new(0, 4);

										-- StarterGui.WatermarkKeybind.KeybindShadowFrame.DropShadowHolder
										Keybind["14"] = Library:CreateObject("Frame", Keybind["9"]);
										Keybind["14"]["ZIndex"] = 0;
										Keybind["14"]["BorderSizePixel"] = 0;
										Keybind["14"]["BackgroundTransparency"] = 1;
										Keybind["14"]["Size"] = UDim2.new(1, 0, 1, 0);
										Keybind["14"]["Name"] = [[DropShadowHolder]];
									end
								end
								--
								function Library:RemoveKeybindFrame(Name)
									KeybindList.Keybinds -= 1
									--
									for Index, Value in KeybindList["e"]:GetChildren() do
										if Value:IsA("Frame") and Value.Name == tostring(Name) then
											Value:Destroy()
										end
									end
								end
							end
							--
							do -- Dragging
								Library:Draggable(KeybindList["9"], KeybindList["1dfb"], KeybindList["bdf36"])
							end
							--
							return KeybindList
						end
						--[[
						function Window:Fade()
							Library.UI.Visible = not Library.UI.Visible
							
							local TransparencyProperties = {
								Frame = "BackgroundTransparency",
								TextLabel = "TextTransparency",
								TextButton = "TextTransparency",
								ImageLabel = "ImageTransparency",
								ImageButton = "ImageTransparency",
								ScrollingFrame = "BackgroundTransparency",
								UIStroke = "Transparency",
								TextBox = "TextTransparency",
							}
							--
							task.spawn(function()
								for _, Value in Library.Objects do
									local TransparencyOption = TransparencyProperties[Value.ClassName]
									--
									if TransparencyOption then
										Library:TweenObject(Value, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {[TransparencyOption] = 1})
									end
								end
							end)
						end
						--]]
						function Library:ToggleUI(State)
							Library.UI.ScreenGUI.Enabled = State
						end
						--
						function Library:UpdateTitle(Text, Type, Date)
							Type = Type or "Normal"
							Date = Date or false
							--
							Library.UI.Name = Text
							--
							Text = Text:gsub(" %- %d+/%d+/%d+$", "")
							--
							if Date then
								Text = ("%s - %s"):format(Text, os.date("%m/%d/%Y"))
							end
							--
							if Type == "Accent" then
								local R, G, B = Library.Theme.Default.Accent.r * 255, Library.Theme.Default.Accent.g * 255, Library.Theme.Default.Accent.b * 255
								local RealText = Text:match("^(.-) %- %d+/%d+/%d+$") or Text
								local Date = Text:match(" %- %d+/%d+/%d+$") or ""
								--
								Window["29"].Text = ("<font color='rgb(%d, %d, %d)'>%s</font>%s"):format(R, G, B, RealText, Date)
							else
								Window["29"].Text = Text
							end
						end
					end
					--
					Window:CreateWatermark()
					Window:CreateKeybindList()
					--
					do -- Dragging
						Library:Draggable(Window["2"], Window["1dfb"], Window["bdf36"], Window["bdf3"], Window["3"])
						Library:Resizable(Window["2"], Window["2d"], Options.MinResize, Options.MaxResize, Window["bdf36"], Window["3"], Window["bdf3"])
					end
					--
					function Window:CreateTab(Options)
						Options = Library:Validate({
							Name = "Main",
						}, Options or {})
						--
						local WindowTab = {
							Active = false,
							Hovering = false,
							Dropdowns = {},
							MultiBoxes = {},
						}
						--
						do -- Rendering
							-- StartingPositionerGui.MainUI.MainFrame.InnerFrame.Navigation
							WindowTab["8"] = Library:CreateObject("Frame", Window["6"]);
							WindowTab["8"]["BorderSizePixel"] = 0;
							WindowTab["8"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
							WindowTab["8"]["Size"] = UDim2.new(1, -10, 1, -37);
							WindowTab["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							WindowTab["8"]["Position"] = UDim2.new(0, 5, 0, 32);
							WindowTab["8"]["Name"] = Options.Name;
							WindowTab["8"]["Visible"] = false
							
							Library.Theme.Objects[WindowTab["8"]] = {
								Color = "LightContrast"
							}
							
							-- StartingPositionerGui.MainUI.MainFrame.InnerFrame.Navigation
							WindowTab["8df"] = Library:CreateObject("Frame", WindowTab["8"]);
							WindowTab["8df"]["BorderSizePixel"] = 0;
							WindowTab["8df"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
							WindowTab["8df"]["Size"] = UDim2.new(1, 0, 1, 0);
							WindowTab["8df"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							WindowTab["8df"]["Position"] = UDim2.new(0, 0, 0, 0);
							WindowTab["8df"]["Name"] = "Fading";
							WindowTab["8df"]["ZIndex"] = 15;
							WindowTab["8df"]["BackgroundTransparency"] = 1;
							WindowTab["8df"]["Visible"] = false;
							
							Library.Theme.Objects[WindowTab["8df"]] = {
								Color = "LightContrast"
							}

							-- StartingPositionerGui.MainUI.MainFrame.InnerFrame.Navigation.UIStroke
							WindowTab["9"] = Library:CreateObject("UIStroke", WindowTab["8"]);
							WindowTab["9"]["Color"] = Library.Theme.Default.Inline;
							WindowTab["9"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
							
							Library.Theme.Objects[WindowTab["9"]] = {
								Color = "Inline"
							}
							
							-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left
							WindowTab["a"] = Library:CreateObject("ScrollingFrame", WindowTab["8"]);
							WindowTab["a"]["Active"] = true;
							WindowTab["a"]["BorderSizePixel"] = 0;
							WindowTab["a"]["MidImage"] = [[http://www.roblox.com/asset/?id=158362264]];
							WindowTab["a"]["TopImage"] = [[http://www.roblox.com/asset/?id=158362264]];
							WindowTab["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							WindowTab["a"]["BackgroundTransparency"] = 1;
							WindowTab["a"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
							WindowTab["a"]["CanvasSize"] = UDim2.new(0, 0, 0, 0)
							WindowTab["a"]["Size"] = UDim2.new(0.5, -4, 1, -10);
							WindowTab["a"]["ScrollBarImageColor3"] = Library.Theme.Default.Accent;
							WindowTab["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							WindowTab["a"]["ScrollBarThickness"] = 2;
							WindowTab["a"]["Position"] = UDim2.new(0, 5, 0, 5);
							WindowTab["a"]["Name"] = [[Left]];
							WindowTab["a"]["BottomImage"] = [[http://www.roblox.com/asset/?id=158362264]];
							
							Library.Theme.Objects[WindowTab["a"]] = {
								Color = "Accent"
							}

							-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.UIListLayout
							WindowTab["11"] = Library:CreateObject("UIListLayout", WindowTab["a"]);
							WindowTab["11"]["Padding"] = UDim.new(0, 7);
							WindowTab["11"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

							-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.UIPadding
							WindowTab["12"] = Library:CreateObject("UIPadding", WindowTab["a"]);
							WindowTab["12"]["PaddingTop"] = UDim.new(0, 1);
							WindowTab["12"]["PaddingRight"] = UDim.new(0, 1);
							WindowTab["12"]["PaddingBottom"] = UDim.new(0, 1);
							WindowTab["12"]["PaddingLeft"] = UDim.new(0, 6);

							-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Right
							WindowTab["13"] = Library:CreateObject("ScrollingFrame", WindowTab["8"]);
							WindowTab["13"]["Active"] = true;
							WindowTab["13"]["BorderSizePixel"] = 0;
							WindowTab["13"]["MidImage"] = [[http://www.roblox.com/asset/?id=158362264]];
							WindowTab["13"]["TopImage"] = [[http://www.roblox.com/asset/?id=158362264]];
							WindowTab["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							WindowTab["13"]["BackgroundTransparency"] = 1;
							WindowTab["13"]["Size"] = UDim2.new(0.5, -7, 1, -10);
							WindowTab["13"]["ScrollBarImageColor3"] = Library.Theme.Default.Accent;
							WindowTab["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							WindowTab["13"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
							WindowTab["13"]["CanvasSize"] = UDim2.new(0, 0, 0, 0)
							WindowTab["13"]["ScrollBarThickness"] = 2;
							WindowTab["13"]["Position"] = UDim2.new(0.5, 2, 0, 5);
							WindowTab["13"]["Name"] = [[Right]];
							WindowTab["13"]["BottomImage"] = [[http://www.roblox.com/asset/?id=158362264]];
							
							Library.Theme.Objects[WindowTab["13"]] = {
								Color = "Accent"
							}

							-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Right.UIListLayout
							WindowTab["14"] = Library:CreateObject("UIListLayout", WindowTab["13"]);
							WindowTab["14"]["Padding"] = UDim.new(0, 7);
							WindowTab["14"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

							-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Right.UIPadding
							WindowTab["15"] = Library:CreateObject("UIPadding", WindowTab["13"]);
							WindowTab["15"]["PaddingTop"] = UDim.new(0, 1);
							WindowTab["15"]["PaddingLeft"] = UDim.new(0, 4);
							WindowTab["15"]["PaddingBottom"] = UDim.new(0, 1);
							
							-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab
							WindowTab["17"] = Library:CreateObject("Frame", Window["16"]);
							WindowTab["17"]["BorderSizePixel"] = 0;
							WindowTab["17"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
							WindowTab["17"]["Size"] = UDim2.new(1 / #Window.Tabs, 0, 1, -10);
							WindowTab["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							WindowTab["17"]["Position"] = UDim2.new(0, 0, 0, 9);
							WindowTab["17"]["Name"] = Options.Name;
							
							Library.Theme.Objects[WindowTab["17"]] = {
								Color = "DarkContrast"
							}

							-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.UIStroke
							WindowTab["18"] = Library:CreateObject("UIStroke", WindowTab["17"]);
							WindowTab["18"]["Color"] = Library.Theme.Default.Inline;
							WindowTab["18"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
							
							Library.Theme.Objects[WindowTab["18"]] = {
								Color = "Inline"
							}

							-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.BlockStrokeFrame
							WindowTab["19"] = Library:CreateObject("Frame", WindowTab["17"]);
							WindowTab["19"]["BorderSizePixel"] = 0;
							WindowTab["19"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
							WindowTab["19"]["Size"] = UDim2.new(1, 0, 0, 4);
							WindowTab["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							WindowTab["19"]["Position"] = UDim2.new(0, 0, 1, 0);
							WindowTab["19"]["Name"] = [[BlockStrokeFrame]];
							WindowTab["19"]["Visible"] = false;
							
							Library.Theme.Objects[WindowTab["19"]] = {
								Color = "LightContrast"
							}

							-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.Name
							WindowTab["1a"] = Library:CreateObject("TextLabel", WindowTab["17"]);
							WindowTab["1a"]["TextStrokeTransparency"] = 0;
							WindowTab["1a"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
							WindowTab["1a"]["BorderSizePixel"] = 0;
							WindowTab["1a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							WindowTab["1a"]["FontFace"] = Library.UI.Font;
							WindowTab["1a"]["TextSize"] = Library.UI.FontSize;
							WindowTab["1a"]["TextColor3"] = Library.Theme.Default.TextDark;
							WindowTab["1a"]["Size"] = UDim2.new(1, 0, 1, 0);
							WindowTab["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							WindowTab["1a"]["Text"] = Options.Name;
							WindowTab["1a"]["Name"] = [[Name]];
							WindowTab["1a"]["BackgroundTransparency"] = 1;
							
							Library.Theme.Objects[WindowTab["1a"]] = {
								TextStrokeColor3 = "TextBorder",
								Color = "TextDark"
							}

							-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.TextButton
							WindowTab["1b"] = Library:CreateObject("TextButton", WindowTab["17"]);
							WindowTab["1b"]["BorderSizePixel"] = 0;
							WindowTab["1b"]["TextTransparency"] = 1;
							WindowTab["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							WindowTab["1b"]["TextSize"] = Library.UI.FontSize;
							WindowTab["1b"]["FontFace"] = Library.UI.Font;
							WindowTab["1b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
							WindowTab["1b"]["Size"] = UDim2.new(1, 0, 1, 0);
							WindowTab["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							WindowTab["1b"]["BackgroundTransparency"] = 1;
						end
						--
						do -- Functions
							function WindowTab:Fade(Bool)
								task.spawn(function()
									WindowTab["8df"].Visible = true
									--
									Library:TweenObject(WindowTab["8df"], TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {BackgroundTransparency = 0})
									--
									task.wait(0.15)
									--
									WindowTab["8"].Visible = Bool
									--
									Library:TweenObject(WindowTab["8df"], TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {BackgroundTransparency = 1})
									--
									task.wait(0.15)
									--
									WindowTab["8df"].Visible = false
								end)
							end
							--
							function WindowTab:Activate()
								if not WindowTab.Active then
									--
									if Window.CurrentTab ~= nil then
										Window.CurrentTab:Deactivate()
									end
									--
									WindowTab.Active = true
									--
									WindowTab["1a"].TextColor3 = Library.Theme.Default.TextColor
									WindowTab["17"].BackgroundColor3 = Library.Theme.Default.LightContrast
									WindowTab["19"].Visible = true
									
									Library.Theme.Objects[WindowTab["17"]] = {
										Color = "LightContrast"
									}
									
									Library.Theme.Objects[WindowTab["1a"]] = {
										TextStrokeColor3 = "TextBorder",
										Color = "TextColor"
									}
									--
									WindowTab:Fade(true)
									--
									Window.CurrentTab = WindowTab
								end
							end

							function WindowTab:Deactivate()
								if WindowTab.Active then
									WindowTab.Active = false
									WindowTab.Hovering = false
									--
									WindowTab["1a"].TextColor3 = Library.Theme.Default.TextDark
									WindowTab["17"].BackgroundColor3 = Library.Theme.Default.DarkContrast
									WindowTab["19"].Visible = false
									
									Library.Theme.Objects[WindowTab["17"]] = {
										Color = "DarkContrast"
									}
									
									Library.Theme.Objects[WindowTab["1a"]] = {
										Color = "TextDark"
									}
									--
									WindowTab:Fade(false)
									--
									for _, Value in WindowTab.Dropdowns do
										if Value.Open then
											Value:Toggle(false)
										end
									end
									--
									for _, Value in WindowTab.MultiBoxes do
										if Value.Open then
											Value:Toggle(false)
										end
									end
								end
							end
						end
						--
						do -- Connections
							Library:Connection(WindowTab["17"].MouseEnter, function()
								if not WindowTab.Active then
									Library:TweenObject(WindowTab["1a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
									--
									WindowTab.Hovering = true
									
									Library.Theme.Objects[WindowTab["1a"]] = {
										Color = "TextColor"
									}
								end
							end)
							--
							Library:Connection(WindowTab["17"].MouseLeave, function()
								if WindowTab.Hovering and not WindowTab.Active then
									Library:TweenObject(WindowTab["1a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
									--
									WindowTab.Hovering = false
									
									Library.Theme.Objects[WindowTab["1a"]] = {
										Color = "TextDark"
									}
								end
							end)
							--
							Library:Connection(WindowTab["1b"].MouseButton1Click, function()
								WindowTab:Activate()
							end)
						end
						--
						if Window.CurrentTab == nil then
							WindowTab:Activate()
						end
						--
						table.insert(Window.Tabs, WindowTab["17"])
						--
						Tab:UpdateSizes()
						--
						function WindowTab:Section(Options)
							Options = Library:Validate({
								Name = "Preview Section",
								Side = "Left"
							}, Options or {})
							--
							local Section = {
								Elements = {},
							}
							--
							Library.UI.SectionZIndex -= 1
							--
							local Parent = Options.Side == "Left" and WindowTab["a"] or WindowTab["13"]
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section
								Section["b"] = Library:CreateObject("Frame", Parent);
								Section["b"]["BorderSizePixel"] = 0;
								Section["b"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
								Section["b"]["Size"] = UDim2.new(1, -7, 0, 10);
								Section["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Section["b"]["Position"] = UDim2.new(0, 0, 0, 33);
								Section["b"]["Name"] = Options.Name;
								Section["b"]["AutomaticSize"] = Enum.AutomaticSize.Y;
								Section["b"]["ClipsDescendants"] = false;
								Section["b"]["ZIndex"] = Library.UI.SectionZIndex
								
								Library.Theme.Objects[Section["b"]] = {
									Color = "DarkContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar.Name.UIPadding
								Section["10d"] = Library:CreateObject("UIPadding", Section["b"]);
								Section["10d"]["PaddingBottom"] = UDim.new(0, 7);

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.UIStroke
								Section["c"] = Library:CreateObject("UIStroke", Section["b"]);
								Section["c"]["Color"] = Library.Theme.Default.Inline;
								Section["c"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
								
								Library.Theme.Objects[Section["c"]] = {
									Color = "Inline"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar
								Section["d"] = Library:CreateObject("Frame", Section["b"]);
								Section["d"]["BorderSizePixel"] = 0;
								Section["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Section["d"]["BackgroundTransparency"] = 1;
								Section["d"]["Size"] = UDim2.new(1, 0, 0, 20);
								Section["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Section["d"]["Name"] = [[TopBar]];

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar.Bar
								Section["e"] = Library:CreateObject("Frame", Section["d"]);
								Section["e"]["BorderSizePixel"] = 0;
								Section["e"]["BackgroundColor3"] = Library.Theme.Default.Accent;
								Section["e"]["Size"] = UDim2.new(1, 0, 0, 2);
								Section["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Section["e"]["Name"] = [[Bar]];
								
								Library.Theme.Objects[Section["e"]] = {
									Color = "Accent"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar.Name
								Section["f"] = Library:CreateObject("TextLabel", Section["d"]);
								Section["f"]["TextStrokeTransparency"] = 0;
								Section["f"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Section["f"]["BorderSizePixel"] = 0;
								Section["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Section["f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								Section["f"]["FontFace"] = Library.UI.Font;
								Section["f"]["TextSize"] = Library.UI.FontSize;
								Section["f"]["TextColor3"] = Library.Theme.Default.TextColor;
								Section["f"]["Size"] = UDim2.new(1, 0, 1, -4);
								Section["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Section["f"]["Text"] = Options.Name;
								Section["f"]["Name"] = [[Name]];
								Section["f"]["BackgroundTransparency"] = 1;
								Section["f"]["Position"] = UDim2.new(0, 0, 0, 2);
								
								Library.Theme.Objects[Section["f"]] = {
									Color = "TextColor"
								}
								
								Library.Theme.Objects[Section["f"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar.Name.UIPadding
								Section["10"] = Library:CreateObject("UIPadding", Section["f"]);
								Section["10"]["PaddingLeft"] = UDim.new(0, 3);
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section
								Section["13"] = Library:CreateObject("Frame", Section["b"]);
								Section["13"]["BorderSizePixel"] = 0;
								Section["13"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
								Section["13"]["AutomaticSize"] = Enum.AutomaticSize.Y;
								Section["13"]["Size"] = UDim2.new(1, 0, 0, 10);
								Section["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Section["13"]["Position"] = UDim2.new(0, 0, 0, 20);
								Section["13"]["Name"] = "Section";
								Section["13"]["ClipsDescendants"] = false;
								
								Library.Theme.Objects[Section["13"]] = {
									Color = "DarkContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.UIListLayout
								Section["15"] = Library:CreateObject("UIListLayout", Section["13"]);
								Section["15"]["Padding"] = UDim.new(0, 5);
								Section["15"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.UIPadding
								Section["16"] = Library:CreateObject("UIPadding", Section["13"]);
								Section["16"]["PaddingLeft"] = UDim.new(0, 5);
							end
							--
							do -- Functions
								function Section:SetVisible(Bool)
									Section["b"].Visible = Bool
								end
							end
							--
							Section.Elements = {
								Name = Section["f"],
								ContentHolder = Section["13"],
								Scrolling = Parent,
							}
							--
							return setmetatable(Section, Library.Sections)
						end
						--
						function WindowTab:MultiSection(Options)
							Options = Library:Validate({
								Side = "Left",
								Sections = {},
								Callback = function() end,
							}, Options or {})
							--
							local MultiSection = {
								CurrentSection = nil,
								Elements = {},
								List = {},
								Sections = {},
							}
							--
							Library.UI.SectionZIndex -= 1
							--
							local Parent = Options.Side == "Left" and WindowTab["a"] or WindowTab["13"]
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section
								MultiSection["13"] = Library:CreateObject("Frame", Parent);
								MultiSection["13"]["BorderSizePixel"] = 0;
								MultiSection["13"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
								MultiSection["13"]["Size"] = UDim2.new(1, -7, 0, 10);
								MultiSection["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiSection["13"]["Position"] = UDim2.new(0, 0, 0, 33);
								MultiSection["13"]["Name"] = [[MultiSection]];
								MultiSection["13"]["AutomaticSize"] = Enum.AutomaticSize.Y;
								MultiSection["13"]["ZIndex"] = Library.UI.SectionZIndex
								
								Library.Theme.Objects[MultiSection["13"]] = {
									Color = "DarkContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar.Name.UIPadding
								MultiSection["10d"] = Library:CreateObject("UIPadding", MultiSection["13"]);
								MultiSection["10d"]["PaddingBottom"] = UDim.new(0, 7);

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.UIStroke
								MultiSection["14"] = Library:CreateObject("UIStroke", MultiSection["13"]);
								MultiSection["14"]["Color"] = Library.Theme.Default.Inline;
								MultiSection["14"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
								
								Library.Theme.Objects[MultiSection["14"]] = {
									Color = "Inline"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar
								MultiSection["15"] = Library:CreateObject("Frame", MultiSection["13"]);
								MultiSection["15"]["BorderSizePixel"] = 0;
								MultiSection["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								MultiSection["15"]["BackgroundTransparency"] = 1;
								MultiSection["15"]["Size"] = UDim2.new(1, 0, 0, 20);
								MultiSection["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiSection["15"]["Name"] = [[TopBar]];
								MultiSection["15"]["ZIndex"] = 2;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar.Bar
								MultiSection["16"] = Library:CreateObject("Frame", MultiSection["15"]);
								MultiSection["16"]["BorderSizePixel"] = 0;
								MultiSection["16"]["BackgroundColor3"] = Library.Theme.Default.Accent;
								MultiSection["16"]["Size"] = UDim2.new(1, 0, 0, 2);
								MultiSection["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiSection["16"]["Name"] = [[Bar]];
								
								Library.Theme.Objects[MultiSection["16"]] = {
									Color = "Accent"
								}
							end
							--
							do -- Functions
								function MultiSection:SetVisible(Bool)
									MultiSection["13"].Visible = Bool
								end
							end
							--
							for Index, Value in Options.Sections do
								local SectionItem = {
									Active = false,
									Hovering = false,
									Elements = {},
								}
								
								do -- Rendering
									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section
									SectionItem["13"] = Library:CreateObject("Frame", MultiSection["13"]);
									SectionItem["13"]["BorderSizePixel"] = 0;
									SectionItem["13"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
									SectionItem["13"]["AutomaticSize"] = Enum.AutomaticSize.Y;
									SectionItem["13"]["Size"] = UDim2.new(1, 0, 0, 0);
									SectionItem["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									SectionItem["13"]["Position"] = UDim2.new(0, 0, 0, 26);
									SectionItem["13"]["Name"] = Value;
									SectionItem["13"]["Visible"] = false;
									
									Library.Theme.Objects[SectionItem["13"]] = {
										Color = "DarkContrast"
									}

									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.UIListLayout
									SectionItem["15"] = Library:CreateObject("UIListLayout", SectionItem["13"]);
									SectionItem["15"]["Padding"] = UDim.new(0, 5);
									SectionItem["15"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.UIPadding
									SectionItem["16"] = Library:CreateObject("UIPadding", SectionItem["13"]);
									SectionItem["16"]["PaddingTop"] = UDim.new(0, 5);
									SectionItem["16"]["PaddingLeft"] = UDim.new(0, 5);
									
									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar.ActiveSection
									SectionItem["17"] = Library:CreateObject("Frame", MultiSection["15"]);
									SectionItem["17"]["BorderSizePixel"] = 0;
									SectionItem["17"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
									SectionItem["17"]["Size"] = UDim2.new(0.5, 0, 1, 0);
									SectionItem["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									SectionItem["17"]["Position"] = UDim2.new(0, 0, 0, 3);
									SectionItem["17"]["Name"] = Value;
									
									Library.Theme.Objects[SectionItem["17"]] = {
										Color = "LightContrast"
									}
									
									-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.TextButton
									SectionItem["1b"] = Library:CreateObject("TextButton", SectionItem["17"]);
									SectionItem["1b"]["BorderSizePixel"] = 0;
									SectionItem["1b"]["TextTransparency"] = 1;
									SectionItem["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
									SectionItem["1b"]["TextSize"] = Library.UI.FontSize;
									SectionItem["1b"]["FontFace"] = Library.UI.Font;
									SectionItem["1b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
									SectionItem["1b"]["Size"] = UDim2.new(1, 0, 1, 0);
									SectionItem["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									SectionItem["1b"]["BackgroundTransparency"] = 1;

									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar.ActiveSection.Name
									SectionItem["18"] = Library:CreateObject("TextLabel", SectionItem["17"]);
									SectionItem["18"]["TextStrokeTransparency"] = 0;
									SectionItem["18"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
									SectionItem["18"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
									SectionItem["18"]["BorderSizePixel"] = 0;
									SectionItem["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
									SectionItem["18"]["FontFace"] = Library.UI.Font;
									SectionItem["18"]["TextSize"] = Library.UI.FontSize;
									SectionItem["18"]["TextColor3"] = Library.Theme.Default.TextDark;
									SectionItem["18"]["Size"] = UDim2.new(1, 0, 1, 0);
									SectionItem["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									SectionItem["18"]["Text"] = Value;
									SectionItem["18"]["Name"] = Value;
									SectionItem["18"]["BackgroundTransparency"] = 1;
									
									Library.Theme.Objects[SectionItem["18"]] = {
										Color = "TextDark"
									}
									
									Library.Theme.Objects[SectionItem["18"]] = {
										Color = "TextBorder"
									}

									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar.ActiveSection.UIStroke
									SectionItem["19"] = Library:CreateObject("UIStroke", SectionItem["17"]);
									SectionItem["19"]["Color"] = Library.Theme.Default.Inline;
									SectionItem["19"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
									
									Library.Theme.Objects[SectionItem["19"]] = {
										Color = "Inline"
									}

									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.TopBar.ActiveSection.BlockStrokeFrame
									SectionItem["1a"] = Library:CreateObject("Frame", SectionItem["17"]);
									SectionItem["1a"]["BorderSizePixel"] = 0;
									SectionItem["1a"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
									SectionItem["1a"]["Size"] = UDim2.new(1, 0, 0, 2);
									SectionItem["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									SectionItem["1a"]["Position"] = UDim2.new(0, 0, 1, -1);
									SectionItem["1a"]["Name"] = [[BlockStrokeFrame]];
									SectionItem["1a"]["Visible"] = false;
									
									Library.Theme.Objects[SectionItem["1a"]] = {
										Color = "DarkContrast"
									}
								end
								--
								table.insert(MultiSection.List, SectionItem["17"])
								--
								SectionItem.Elements = {
									Name = SectionItem["18"],
									ContentHolder = SectionItem["13"],
									Scrolling = Parent,
								}
								--
								do -- Logic
									for Index2, Value2 in MultiSection.List do
										Value2.Size = UDim2.new(1 / #MultiSection.List, 0, 1, 0)
										Value2.Position = UDim2.new(1 / #MultiSection.List * (Index2 - 1), 0, 0, 3)
									end
								end
								--
								do -- Functions
									function SectionItem:Activate()
										if not SectionItem.Active then

											if MultiSection.CurrentSection ~= nil then
												MultiSection.CurrentSection:Deactivate()
											end

											SectionItem.Active = true
											
											SectionItem["17"].BackgroundColor3 = Library.Theme.Default.DarkContrast
											SectionItem["18"].TextColor3 = Library.Theme.Default.TextColor
											SectionItem["1a"].Visible = true
											SectionItem["13"].Visible = true
											
											Library.Theme.Objects[SectionItem["17"]] = {
												Color = "DarkContrast"
											}
											
											Library.Theme.Objects[SectionItem["18"]] = {
												Color = "TextColor"
											}
											
											Library.Theme.Objects[SectionItem["18"]] = {
												Color = "TextBorder"
											}

											MultiSection.CurrentSection = SectionItem
											Options.Callback(tostring(SectionItem["18"]))
										end
									end
									--
									function SectionItem:Deactivate()
										if SectionItem.Active then
											SectionItem.Active = false
											SectionItem.Hovering = false
											
											SectionItem["17"].BackgroundColor3 = Library.Theme.Default.LightContrast
											SectionItem["18"].TextColor3 = Library.Theme.Default.TextDark
											SectionItem["1a"].Visible = false
											SectionItem["13"].Visible = false
											
											Library.Theme.Objects[SectionItem["17"]] = {
												Color = "LightContrast"
											}
											
											Library.Theme.Objects[SectionItem["18"]] = {
												Color = "TextDark"
											}
										end
									end
								end
								--
								do -- Connections
									Library:Connection(SectionItem["17"].MouseEnter, function()
										if not SectionItem.Hovering then
											SectionItem.Hovering = true
											Library:TweenObject(SectionItem["18"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
											
											Library.Theme.Objects[SectionItem["18"]] = {
												Color = "TextColor"
											}
										end	
									end)
									--
									Library:Connection(SectionItem["17"].MouseLeave, function()
										if SectionItem.Hovering and not SectionItem.Active then
											SectionItem.Hovering = false
											Library:TweenObject(SectionItem["18"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
											
											Library.Theme.Objects[SectionItem["18"]] = {
												Color = "TextDark"
											}
										end
									end)
									--
									Library:Connection(SectionItem["1b"].MouseButton1Click, function()
										SectionItem:Activate()
									end)
								end
								--
								if MultiSection.CurrentSection == nil then
									SectionItem:Activate()
								end
								--
								MultiSection.Sections[#MultiSection.Sections + 1] = setmetatable(SectionItem, Library.Sections)
							end
							--
							return table.unpack(MultiSection.Sections)
						end
						--
						function Sections:TextBox(Options)
							Options = Library:Validate({
								Default = "",
								Name = "Preview TextBox",
								Max = 32,
								NumbersOnly = false,
								ClearOnFocus = false,
								CheckIfPressedEnter = false,
								Risky = false,
								Flag = Library.NewFlag(),
								Callback = function() end
							}, Options or {})
							--
							local TextBox = {
								Section = self,
							}
							--
							do -- Rendering
								-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.TextBox
								TextBox["17"] = Library:CreateObject("Frame", TextBox.Section.Elements.ContentHolder);
								TextBox["17"]["BorderSizePixel"] = 0;
								TextBox["17"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								TextBox["17"]["Size"] = UDim2.new(1, -5, 0, 15)
								TextBox["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								TextBox["17"]["Position"] = UDim2.new(0, 5, 0, 0);
								TextBox["17"]["Name"] = [[TextBox]];

								Library.Theme.Objects[TextBox["17"]] = {
									Color = "LightContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
								TextBox["8c"] = Library:CreateObject("ImageLabel", TextBox["17"]);
								TextBox["8c"]["ZIndex"] = 0;
								TextBox["8c"]["BorderSizePixel"] = 0;
								TextBox["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								TextBox["8c"]["Image"] = [[rbxassetid://18520020007]];
								TextBox["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
								TextBox["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								TextBox["8c"]["Name"] = [[Gradient]];
								TextBox["8c"]["BackgroundTransparency"] = 1;

								-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.TextBox.UIStroke
								TextBox["18"] = Library:CreateObject("UIStroke", TextBox["17"]);
								TextBox["18"]["Color"] = Library.Theme.Default.Inline;
								TextBox["18"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

								Library.Theme.Objects[TextBox["18"]] = {
									Color = "Inline"
								}

								-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.TextBox.ConfigName
								TextBox["19"] = Library:CreateObject("TextBox", TextBox["17"]);
								TextBox["19"]["PlaceholderColor3"] = Library.Theme.Default.TextDark;
								TextBox["19"]["BorderSizePixel"] = 0;
								TextBox["19"]["TextStrokeTransparency"] = 0;
								TextBox["19"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								TextBox["19"]["TextSize"] = Library.UI.FontSize;
								TextBox["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								TextBox["19"]["TextColor3"] = Options.Risky and Library.Theme.Default.Risky or Library.Theme.Default.TextColor;
								TextBox["19"]["FontFace"] = Library.UI.Font;
								TextBox["19"]["BackgroundTransparency"] = 1;
								TextBox["19"]["ClipsDescendants"] = true;
								TextBox["19"]["PlaceholderText"] = Options.Name;
								TextBox["19"]["Size"] = UDim2.new(1, 0, 1, 0);
								TextBox["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								TextBox["19"]["Text"] = Options.Default;
								TextBox["19"]["Name"] = [[ConfigName]];
								TextBox["19"]["ClearTextOnFocus"] = false;
								TextBox["19"]["SelectionStart"] = 1;
								--
								Library.Theme.Objects[TextBox["19"]] = {
									PlaceholderColor3 = "TextDark",
									TextStrokeTransparency = "TextBorder",
									TextColor3 = Options.Risky and "Risky" or "TextColor",
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Toggle.ToggleText.UIPadding
								TextBox["1c"] = Library:CreateObject("UIPadding", TextBox["19"]);
								TextBox["1c"]["PaddingTop"] = UDim.new(0, -1);
							end
							--
							function TextBox:Get()
								return TextBox["19"].Text
							end
							--
							function TextBox:SetVisible(Bool)
								TextBox["17"].Visible = Bool
							end
							--
							function TextBox:Set(Value)
								TextBox["19"].Text = tostring(Value)
							end
							--
							do -- Connections
								Library:Connection(TextBox["19"]:GetPropertyChangedSignal("Text"), function()
									TextBox["19"].Text = TextBox["19"].Text:sub(1, Options.Max)
									--
									if Options.NumbersOnly then
										TextBox["19"].Text = TextBox["19"].Text:gsub('[^%d%.%-]+', '')
									end
								end)
								--
								Library:Connection(TextBox["19"].FocusLost, function(EnterPressed)
									if Options.CheckIfPressedEnter and not EnterPressed then return end

									Library.Flags[Options.Flag] = TextBox
									Options.Callback(TextBox["19"].Text)
								end)
							end
							--
							if Options.Default then
								Library.Flags[Options.Flag] = TextBox
								Options.Callback(TextBox["19"].Text)
							end
						end
						--
						function Sections:Button(Options)
							Options = Library:Validate({
								Name = "Preview Button",
                                Confirmation = false,
								Risky = false,
								Callback = function() end
							}, Options or {})
							--
							local Button = {
								MouseDown = false,
                                WaitingForConfirm = false,
                                ConfirmationTime = 0,
                                ConfirmationConnection = nil,
								Section = self,
							}
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Button
								Button["12"] = Library:CreateObject("Frame", Button.Section.Elements.ContentHolder);
								Button["12"]["BorderSizePixel"] = 0;
								Button["12"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Button["12"]["Size"] = UDim2.new(1, -5, 0, 15);
								Button["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Button["12"]["Position"] = UDim2.new(0, 5, 0, 0);
								Button["12"]["Name"] = Options.Name;
								
								Library.Theme.Objects[Button["12"]] = {
									Color = "LightContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
								Button["8c"] = Library:CreateObject("ImageLabel", Button["12"]);
								Button["8c"]["ZIndex"] = 0;
								Button["8c"]["BorderSizePixel"] = 0;
								Button["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Button["8c"]["Image"] = [[rbxassetid://18520020007]];
								Button["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
								Button["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Button["8c"]["Name"] = [[Gradient]];
								Button["8c"]["BackgroundTransparency"] = 1;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Button.UIStroke
								Button["13"] = Library:CreateObject("UIStroke", Button["12"]);
								Button["13"]["Color"] = Library.Theme.Default.Inline;
								Button["13"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
								
								Library.Theme.Objects[Button["13"]] = {
									Color = "Inline"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Button.UnloadButton
								Button["14"] = Library:CreateObject("TextButton", Button["12"]);
								Button["14"]["BorderSizePixel"] = 0;
								Button["14"]["TextStrokeTransparency"] = 0;
								Button["14"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Button["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Button["14"]["TextSize"] = Library.UI.FontSize;
								Button["14"]["FontFace"] = Library.UI.Font;
								Button["14"]["TextColor3"] = Options.Risky and Library.Theme.Default.Risky or Library.Theme.Default.TextColor;
								Button["14"]["Size"] = UDim2.new(1, 0, 1, 0);
								Button["14"]["Name"] = [[UnloadButton]];
								Button["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Button["14"]["Text"] = Options.Name;
								Button["14"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[Button["14"]] = {
									Color = Options.Risky and "Risky" or "TextColor"
								}
								--
								Library.Theme.Objects[Button["14"]] = {
									Color = "TextBorder"
								}
							end
                            --
                            function Button:ConfirmationStart()
                                Button.MouseDown = true
                                Button.WaitingForConfirm = true
                                Button.ConfirmationTime = 5
                                Button["14"].Text = "Confirm? (" .. Button.ConfirmationTime .. "s)"
                                --
                                if Button.ConfirmationConnection then
                                    coroutine.close(Button.ConfirmationConnection)
                                    Button.ConfirmationConnection = nil
                                end
                                --
                                Button.ConfirmationConnection = coroutine.create(function()
                                    for i = 1, 5 do 
                                        task.wait(1)
                                        --
                                        Button.ConfirmationTime = Button.ConfirmationTime - 1
                                        --
                                        if Button.ConfirmationTime > 0 then
                                            Button["14"].Text = "Confirm? (" .. Button.ConfirmationTime .. "s)"
                                        else
                                            Button["14"].Text = Options.Name
                                            --
                                            if Button.MouseDown then
                                                Library:TweenObject(Button["14"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
                                                --
                                                Library.Theme.Objects[Button["14"]] = {
                                                    Color = "TextColor"
                                                }
                                                --
                                                Button.MouseDown = false
                                                Button.WaitingForConfirm = false
                                            end
                                            --
                                            break
                                        end
                                    end
                                end)
                                --
                                coroutine.resume(Button.ConfirmationConnection)
                            end
							--
							function Button:SetVisible(Bool)
								Button["12"].Visible = Bool
							end
							--
							do -- Connections
								Library:Connection(Button["14"].MouseButton1Down, function()
									if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) then
										Library:TweenObject(Button["14"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
										--
										Library.Theme.Objects[Button["14"]] = {
											Color = "Accent"
										}
										--
                                        if Options.Confirmation then
                                            if not Button.WaitingForConfirm then
                                                Button:ConfirmationStart()
                                            else
                                                if Button.ConfirmationConnection then
                                                    coroutine.close(Button.ConfirmationConnection)
                                                    Button.ConfirmationConnection = nil
                                                end
                                                --
                                                Options.Callback()
                                                Button.MouseDown = true
                                                Button.WaitingForConfirm = false
                                                --
                                                Library:TweenObject(Button["14"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
                                                --
                                                Library.Theme.Objects[Button["14"]] = {
                                                    Color = "TextColor"
                                                }
                                                --
                                                Button["14"].Text = Options.Name
                                            end
                                        else
                                            Options.Callback()
                                            Button.MouseDown = true
                                        end
									end
								end)
								--
								Library:Connection(UserInputService.InputEnded, function(Input)
									if Input.UserInputType == Enum.UserInputType.MouseButton1 and Button.MouseDown and not Button.WaitingForConfirm then
										Library:TweenObject(Button["14"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
										--
										Library.Theme.Objects[Button["14"]] = {
											Color = "TextColor"
										}
									end
								end)
							end
							--
							return Button
						end
						--
						function Sections:ButtonGroup()
							local ButtonGroup = {
								Buttons = {},
								Section = self,
							}
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ButtonGroup
								ButtonGroup["2"] = Library:CreateObject("Frame", ButtonGroup.Section.Elements.ContentHolder);
								ButtonGroup["2"]["BorderSizePixel"] = 0;
								ButtonGroup["2"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								ButtonGroup["2"]["Size"] = UDim2.new(1, -5, 0, 15);
								ButtonGroup["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								ButtonGroup["2"]["BackgroundTransparency"] = 1;
								ButtonGroup["2"]["Position"] = UDim2.new(0, 5, 0, 0);
								ButtonGroup["2"]["Name"] = "ButtonHolder";
							end
							--
							do -- Functions
								function ButtonGroup:SetVisible(Bool)
									ButtonGroup["2"].Visible = Bool
								end
								--
								function ButtonGroup:UpdateSizes()
									local Count = #ButtonGroup.Buttons
									local PaddingAmount = (Count - 1) * 5
									local TabWidth = (1 - PaddingAmount / ButtonGroup["2"].AbsoluteSize.X) / Count
									--
									for Index, Value in ButtonGroup.Buttons do
										Value.Size = UDim2.new(TabWidth, 0, 1, 0)
										Value.Position = UDim2.new((TabWidth + 5 / ButtonGroup["2"].AbsoluteSize.X) * (Index - 1), 0, 0, 0)
									end
								end
							end
							--
							function ButtonGroup:Button(Options)
								Options = Library:Validate({
									Name = "Preview Button",
									Confirmation = false,
									Risky = false,
									Callback = function() end
								}, Options or {})
								--
								local Buttons = {
									MouseDown = false,
									WaitingForConfirm = false,
									ConfirmationTime = 0,
									ConfirmationConnection = nil,
								}
								--
								do -- Rendering
									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Buttons
									Buttons["12"] = Library:CreateObject("Frame", ButtonGroup["2"]);
									Buttons["12"]["BorderSizePixel"] = 0;
									Buttons["12"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
									Buttons["12"]["Size"] = UDim2.new(1 / #ButtonGroup.Buttons, 0, 1, 0);
									Buttons["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									Buttons["12"]["Position"] = UDim2.new(0, 0, 0, 0);
									Buttons["12"]["Name"] = Options.Name;
									
									table.insert(ButtonGroup.Buttons, Buttons["12"])
									
									Library.Theme.Objects[Buttons["12"]] = {
										Color = "LightContrast"
									}
									
									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
									Buttons["8c"] = Library:CreateObject("ImageLabel", Buttons["12"]);
									Buttons["8c"]["ZIndex"] = 0;
									Buttons["8c"]["BorderSizePixel"] = 0;
									Buttons["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
									Buttons["8c"]["Image"] = [[rbxassetid://18520020007]];
									Buttons["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
									Buttons["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									Buttons["8c"]["Name"] = [[Gradient]];
									Buttons["8c"]["BackgroundTransparency"] = 1;
								
									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Buttons.UIStroke
									Buttons["13"] = Library:CreateObject("UIStroke", Buttons["12"]);
									Buttons["13"]["Color"] = Library.Theme.Default.Inline;
									Buttons["13"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
									
									Library.Theme.Objects[Buttons["13"]] = {
										Color = "Inline"
									}
								
									-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Buttons.UnloadButtons
									Buttons["14"] = Library:CreateObject("TextButton", Buttons["12"]);
									Buttons["14"]["BorderSizePixel"] = 0;
									Buttons["14"]["TextStrokeTransparency"] = 0;
									Buttons["14"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
									Buttons["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
									Buttons["14"]["TextSize"] = Library.UI.FontSize;
									Buttons["14"]["FontFace"] = Library.UI.Font;
									Buttons["14"]["TextColor3"] = Options.Risky and Library.Theme.Default.Risky or Library.Theme.Default.TextColor;
									Buttons["14"]["Size"] = UDim2.new(1, 0, 1, 0);
									Buttons["14"]["Name"] = [[UnloadButtons]];
									Buttons["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									Buttons["14"]["Text"] = Options.Name;
									Buttons["14"]["BackgroundTransparency"] = 1;
									
									Library.Theme.Objects[Buttons["14"]] = {
										Color = Options.Risky and "Risky" or "TextColor"
									}
									--
									Library.Theme.Objects[Buttons["14"]] = {
										Color = "TextBorder"
									}
								end
								--
								function Buttons:ConfirmationStart()
									Buttons.MouseDown = true
									Buttons.WaitingForConfirm = true
									Buttons.ConfirmationTime = 5
									Buttons["14"].Text = "Confirm? (" .. Buttons.ConfirmationTime .. "s)"
									--
									if Buttons.ConfirmationConnection then
										coroutine.close(Buttons.ConfirmationConnection)
										Buttons.ConfirmationConnection = nil
									end
									--
									Buttons.ConfirmationConnection = coroutine.create(function()
										for i = 1, 5 do 
											task.wait(1)
											--
											Buttons.ConfirmationTime = Buttons.ConfirmationTime - 1
											--
											if Buttons.ConfirmationTime > 0 then
												Buttons["14"].Text = "Confirm? (" .. Buttons.ConfirmationTime .. "s)"
											else
												Buttons["14"].Text = Options.Name
												--
												if Buttons.MouseDown then
													Library:TweenObject(Buttons["14"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
													--
													Library.Theme.Objects[Buttons["14"]] = {
														Color = "TextColor"
													}
													--
													Buttons.MouseDown = false
													Buttons.WaitingForConfirm = false
												end
												--
												break
											end
										end
									end)
									--
									coroutine.resume(Buttons.ConfirmationConnection)
								end
								--
								do -- Connections
									Library:Connection(Buttons["14"].MouseButton1Down, function()
										if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) then
											Library:TweenObject(Buttons["14"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
											--
											Library.Theme.Objects[Buttons["14"]] = {
												Color = "Accent"
											}
											--
											if Options.Confirmation then
												if not Buttons.WaitingForConfirm then
													Buttons:ConfirmationStart()
												else
													if Buttons.ConfirmationConnection then
														coroutine.close(Buttons.ConfirmationConnection)
														Buttons.ConfirmationConnection = nil
													end
													--
													Options.Callback()
													Buttons.MouseDown = true
													Buttons.WaitingForConfirm = false
													--
													Library:TweenObject(Buttons["14"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
													--
													Library.Theme.Objects[Buttons["14"]] = {
														Color = "TextColor"
													}
													--
													Buttons["14"].Text = Options.Name
												end
											else
												Options.Callback()
												Buttons.MouseDown = true
											end
										end
									end)
									--
									Library:Connection(UserInputService.InputEnded, function(Input)
										if Input.UserInputType == Enum.UserInputType.MouseButton1 and Buttons.MouseDown and not Buttons.WaitingForConfirm then
											Library:TweenObject(Buttons["14"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
											--
											Library.Theme.Objects[Buttons["14"]] = {
												Color = "TextColor"
											}
										end
									end)
								end
								--
								ButtonGroup:UpdateSizes()
								--
								return Buttons
							end
							--
							return ButtonGroup
						end
						--
						function Sections:Toggle(Options)
							Options = Library:Validate({
								Default = false,
								Name = "Preview Toggle",
								Risky = false,
								Flag = Library:NewFlag(),
								Callback = function() end
							}, Options or {})
							--
							local Toggle = {
								Active = false,
								Hovering = false,
								State = false,
								ColorPickers = {},
								KeybindState = false,
								Section = self,
							}
							--
							if not Options.Default then
								Library.Flags[Options.Flag] = Toggle
								Options.Callback(Options.Default)
							end
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Toggle
								Toggle["17"] = Library:CreateObject("Frame", Toggle.Section.Elements.ContentHolder);
								Toggle["17"]["BorderSizePixel"] = 0;
								Toggle["17"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Toggle["17"]["BackgroundTransparency"] = 1;
								Toggle["17"]["Size"] = UDim2.new(1, -5, 0, 15);
								Toggle["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Toggle["17"]["Position"] = UDim2.new(0, 5, 0, 0);
								Toggle["17"]["Name"] = Options.Name;
								
								Library.Theme.Objects[Toggle["17"]] = {
									Color = "LightContrast"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Toggle.ToggleFrame
								Toggle["18"] = Library:CreateObject("Frame", Toggle["17"]);
								Toggle["18"]["BorderSizePixel"] = 0;
								Toggle["18"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Toggle["18"]["AnchorPoint"] = Vector2.new(0, 0.5);
								Toggle["18"]["Size"] = UDim2.new(0, 10, 1, -5);
								Toggle["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Toggle["18"]["Position"] = UDim2.new(0, 0, 0.5, 0);
								Toggle["18"]["Name"] = [[Toggle Frame]];
								
								Library.Theme.Objects[Toggle["18"]] = {
									Color = "LightContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
								Toggle["8c"] = Library:CreateObject("ImageLabel", Toggle["18"]);
								Toggle["8c"]["ZIndex"] = 0;
								Toggle["8c"]["BorderSizePixel"] = 0;
								Toggle["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Toggle["8c"]["Image"] = [[rbxassetid://18520020007]];
								Toggle["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
								Toggle["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Toggle["8c"]["Name"] = [[Gradient]];
								Toggle["8c"]["BackgroundTransparency"] = 1;
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Toggle.ToggleFrame
								Toggle["18d"] = Library:CreateObject("Frame", Toggle["18"]);
								Toggle["18d"]["BorderSizePixel"] = 0;
								Toggle["18d"]["BackgroundColor3"] = Library.Theme.Default.Accent;
								Toggle["18d"]["AnchorPoint"] = Vector2.new(0, 0);
								Toggle["18d"]["Size"] = UDim2.new(1, 0, 1, 0);
								Toggle["18d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Toggle["18d"]["Position"] = UDim2.new(0, 0, 0, 0);
								Toggle["18d"]["Name"] = [[Toggle Frame]];
								Toggle["18d"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[Toggle["18d"]] = {
									Color = "Accent"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Toggle.ToggleFrame.UIStroke
								Toggle["19"] = Library:CreateObject("UIStroke", Toggle["18"]);
								Toggle["19"]["Color"] = Library.Theme.Default.Inline;
								Toggle["19"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
								
								Library.Theme.Objects[Toggle["19"]] = {
									Color = "Inline"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Toggle.ToggleFrame.TextButton
								Toggle["1a"] = Library:CreateObject("TextButton", Toggle["17"]);
								Toggle["1a"]["BorderSizePixel"] = 0;
								Toggle["1a"]["TextTransparency"] = 1;
								Toggle["1a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Toggle["1a"]["TextSize"] = Library.UI.FontSize;
								Toggle["1a"]["FontFace"] = Library.UI.Font;
								Toggle["1a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
								Toggle["1a"]["Size"] = UDim2.new(1, 0, 1, 0);
								Toggle["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Toggle["1a"]["BackgroundTransparency"] = 1;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Toggle.ToggleText
								Toggle["1b"] = Library:CreateObject("TextLabel", Toggle["17"]);
								Toggle["1b"]["TextStrokeTransparency"] = 0;
								Toggle["1b"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Toggle["1b"]["BorderSizePixel"] = 0;
								Toggle["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Toggle["1b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								Toggle["1b"]["FontFace"] = Library.UI.Font;
								Toggle["1b"]["TextSize"] = Library.UI.FontSize;
								Toggle["1b"]["TextColor3"] = Options.Risky and Library.Theme.Default.Risky or Library.Theme.Default.TextColor;
								Toggle["1b"]["Size"] = UDim2.new(1, -12, 1, 0);
								Toggle["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Toggle["1b"]["Text"] = Options.Name;
								Toggle["1b"]["Name"] = [[ToggleText]];
								Toggle["1b"]["BackgroundTransparency"] = 1;
								Toggle["1b"]["Position"] = UDim2.new(0, 12, 0, 0);
								
								Library.Theme.Objects[Toggle["1b"]] = {
									Color = Options.Risky and "Risky" or "TextColor"
								}
								
								Library.Theme.Objects[Toggle["1b"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Toggle.ToggleText.UIPadding
								Toggle["1c"] = Library:CreateObject("UIPadding", Toggle["1b"]);
								Toggle["1c"]["PaddingBottom"] = UDim.new(0, -1);
								Toggle["1c"]["PaddingLeft"] = UDim.new(0, 4);
							end
							--
							do -- Functions
								function Toggle:ToggleGUI(Bool)
									if Bool == nil then
										Toggle.State = not Toggle.State
									else
										Toggle.State = Bool
									end
									--
									if Toggle.State then
										Library:TweenObject(Toggle["18d"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {BackgroundTransparency = 0})
									else
										Library:TweenObject(Toggle["18d"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {BackgroundTransparency = 1})
										Library:RemoveKeybindFrame(Options.Name)
									end
									--
									Library.Flags[Options.Flag] = Toggle
									Options.Callback(Toggle.State)
								end
								--
								function Toggle:GetName()
									return Options.Name
								end
								--
								function Toggle:GetFlag()
									return Options.Flag
								end
								--
								function Toggle:GetState()
									return Toggle.State
								end
								--
								function Toggle:GetCallback(b)
									Options.Callback(b)
								end
								--
								function Toggle:Set(Value)
									Toggle:ToggleGUI(Value)
								end
								--
								function Toggle:Get()
									return Toggle.State
								end
								--
								function Toggle:SetVisible(Bool)
									Toggle["17"].Visible = Bool
								end
							end
							--
							do -- Connections
								Library:Connection(Toggle["1a"].MouseButton1Click, function()
									if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) then
										Toggle:ToggleGUI()
									end
								end)
							end
							--
							if Options.Default == true then
								Toggle:ToggleGUI(true)
							end
							--
							function Toggle:ColorPicker(Options)
								Options = Library:Validate({
									Name = "Preview Color Picker",
									Default = Color3.fromRGB(255, 0, 0),
									Flag = Library.NewFlag(),
									Alpha = 1,
									AlphaBar = true,
									Callback = function() end,
								}, Options or {})
								--
								local ColorPicker = {}
								--
								Toggle.ColorPickers[#Toggle.ColorPickers + 1] = ColorPicker
								--
								local ColorPickerFrame = Library:ColorPicker({
									Name = Options.Name,
									Default = Options.Default,
									Flag = Options.Flag,
									Alpha = Options.Alpha,
									AlphaBar = Options.AlphaBar,
									Callback = Options.Callback,
									Parent = Toggle["17"],
									Keybind = Toggle.KeybindState,
									Count = #Toggle.ColorPickers,
									Object = Window["2"],
									GUI = GUI["1"],
									Scrolling = Toggle.Section.Elements.Scrolling,
								})
								--
								return ColorPickerFrame
							end
							--
							function Toggle:Keybind(Options)
								Options = Library:Validate({
									Default = Enum.KeyCode.Backspace,
									Mode = "Toggle",
									HideFromList = false,
									Blacklisted = {},
									Flag = Library.NewFlag(),
									Callback = function() end,
								}, Options or {})
								--
								local Keybind = {}
								--
								Toggle.KeybindState = true
								--
								Library:KeyBind({
									Default = Options.Default,
									Mode = Options.Mode,
									HideFromList = Options.HideFromList,
									Blacklisted = Options.Blacklisted,
									Parent = Toggle["17"],
									Toggle = Toggle,
									ToggleState = Toggle.State,
									Flag = Options.Flag,
									Callback = Options.Callback,
									Count = #Toggle.ColorPickers + 1,
								})
								--
								return Keybind
							end
							--
							return Toggle
						end
						--
						function Sections:Slider(Options)
							Options = Library:Validate({
								Name = "Preview Slider",
								Min = 0,
								Max = 100,
								Default = 1,
								Decimal = 1,
								Ending = "",
								Risky = false,
								Flag = Library.NewFlag(),
								Callback = function() end
							}, Options or {})
							--
							local Slider = {
								MouseDown = false,
								Connection = nil,
								CurrentValue = -9999,
								LeftControlDown = false,
								Section = self,
							}
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Slider
								Slider["20"] = Library:CreateObject("Frame", Slider.Section.Elements.ContentHolder);
								Slider["20"]["BorderSizePixel"] = 0;
								Slider["20"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Slider["20"]["BackgroundTransparency"] = 1;
								Slider["20"]["Size"] = UDim2.new(1, -5, 0, 26);
								Slider["20"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Slider["20"]["Position"] = UDim2.new(0, 5, 0, 0);
								Slider["20"]["Name"] = Options.Name;
								
								Library.Theme.Objects[Slider["20"]] = {
									Color = "LightContrast"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Slider.SliderText
								Slider["21"] = Library:CreateObject("TextLabel", Slider["20"]);
								Slider["21"]["TextStrokeTransparency"] = 0;
								Slider["21"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Slider["21"]["BorderSizePixel"] = 0;
								Slider["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Slider["21"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								Slider["21"]["FontFace"] = Library.UI.Font;
								Slider["21"]["TextSize"] = Library.UI.FontSize;
								Slider["21"]["TextColor3"] = Options.Risky and Library.Theme.Default.Risky or Library.Theme.Default.TextColor;
								Slider["21"]["Size"] = UDim2.new(1, 0, 0.5, 0);
								Slider["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Slider["21"]["Text"] = Options.Name;
								Slider["21"]["Name"] = [[SliderText]];
								Slider["21"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[Slider["21"]] = {
									Color = Options.Risky and "Risky" or "TextColor"
								}
								
								Library.Theme.Objects[Slider["21"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Slider.SliderText.UIPadding
								Slider["22"] = Library:CreateObject("UIPadding", Slider["21"]);
								Slider["22"]["PaddingLeft"] = UDim.new(0, -1);

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Slider.SliderBack
								Slider["23"] = Library:CreateObject("Frame", Slider["20"]);
								Slider["23"]["BorderSizePixel"] = 0;
								Slider["23"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Slider["23"]["Size"] = UDim2.new(1, 0, 0.5, -4);
								Slider["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Slider["23"]["Position"] = UDim2.new(0, 0, 0.5, 4);
								Slider["23"]["Name"] = [[SliderBack]];
								
								Library.Theme.Objects[Slider["23"]] = {
									Color = "LightContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
								Slider["8c"] = Library:CreateObject("ImageLabel", Slider["23"]);
								Slider["8c"]["ZIndex"] = 0;
								Slider["8c"]["BorderSizePixel"] = 0;
								Slider["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Slider["8c"]["Image"] = [[rbxassetid://18520020007]];
								Slider["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
								Slider["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Slider["8c"]["Name"] = [[Gradient]];
								Slider["8c"]["BackgroundTransparency"] = 1;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Slider.SliderBack.UIStroke
								Slider["24"] = Library:CreateObject("UIStroke", Slider["23"]);
								Slider["24"]["Color"] = Library.Theme.Default.Inline;
								Slider["24"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
								
								Library.Theme.Objects[Slider["24"]] = {
									Color = "Inline"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Slider.SliderBack.SliderDragging
								Slider["25"] = Library:CreateObject("Frame", Slider["23"]);
								Slider["25"]["BorderSizePixel"] = 0;
								Slider["25"]["BackgroundColor3"] = Library.Theme.Default.Accent;
								Slider["25"]["Size"] = UDim2.new(0.5, 0, 1, 0);
								Slider["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Slider["25"]["Name"] = [[SliderDragging]];
								
								Library.Theme.Objects[Slider["25"]] = {
									Color = "Accent"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Slider.SliderBack.SliderDragging.UIStroke
								Slider["26"] = Library:CreateObject("UIStroke", Slider["25"]);
								Slider["26"]["Color"] = Library.Theme.Default.Inline;
								Slider["26"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
								
								Library.Theme.Objects[Slider["26"]] = {
									Color = "Inline"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Slider.SliderBack.SliderValue
								Slider["27"] = Library:CreateObject("TextLabel", Slider["23"]);
								Slider["27"]["TextStrokeTransparency"] = 0;
								Slider["27"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Slider["27"]["BorderSizePixel"] = 0;
								Slider["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Slider["27"]["FontFace"] = Library.UI.Font;
								Slider["27"]["TextSize"] = Library.UI.FontSize;
								Slider["27"]["TextColor3"] = Library.Theme.Default.TextColor;
								Slider["27"]["Size"] = UDim2.new(1, 0, 1, 0);
								Slider["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Slider["27"]["Text"] = [[50/100]];
								Slider["27"]["Name"] = [[SliderValue]];
								Slider["27"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[Slider["27"]] = {
									TextStrokeColor3 = "TextBorder",
									TextColor3 = "TextColor"
								}
								
								-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
								Slider["b"] = Library:CreateObject("TextButton", Slider["23"]);
								Slider["b"]["BorderSizePixel"] = 0;
								Slider["b"]["TextTransparency"] = 1;
								Slider["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Slider["b"]["TextSize"] = Library.UI.FontSize;
								Slider["b"]["FontFace"] = Library.UI.Font;
								Slider["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
								Slider["b"]["Size"] = UDim2.new(1, 0, 1, 0);
								Slider["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Slider["b"]["BackgroundTransparency"] = 1;

								-- StarterGui.MyLibrary.MainBackground.ContentContainer.Hometab.Left.Section.ContentContainer.Slider.SliderBack
								Slider["s1b"] = Library:CreateObject("Frame", Slider["20"]);
								Slider["s1b"]["BorderSizePixel"] = 0;
								Slider["s1b"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
								Slider["s1b"]["BackgroundTransparency"] = 1;
								Slider["s1b"]["Size"] = UDim2.new(1, 0, 0.5, -4);
								Slider["s1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Slider["s1b"]["Position"] = UDim2.new(0, 0, 0.5, 4);
								Slider["s1b"]["Name"] = [[SliderBack]];
								Slider["s1b"]["Visible"] = false;

								-- StarterGui.MyLibrary.MainBackground.ContentContainer.Hometab.Right.Section.ContentContainer.TextBox.TextBox
								Slider["7fe"] = Library:CreateObject("TextBox", Slider["s1b"]);
								Slider["7fe"]["PlaceholderColor3"] = Color3.fromRGB(141, 141, 141);
								Slider["7fe"]["BorderSizePixel"] = 0;
								Slider["7fe"]["TextStrokeTransparency"] = 0;
								Slider["7fe"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Slider["7fe"]["TextSize"] = Library.UI.FontSize;
								Slider["7fe"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Slider["7fe"]["TextColor3"] = Library.Theme.Default.TextColor;
								Slider["7fe"]["TextXAlignment"] = Enum.TextXAlignment.Center;
								Slider["7fe"]["FontFace"] = Library.UI.Font;
								Slider["7fe"]["BackgroundTransparency"] = 1;
								Slider["7fe"]["PlaceholderText"] = "";
								Slider["7fe"]["Size"] = UDim2.new(1, 0, 1, 0);
								Slider["7fe"]["Position"] = UDim2.new(0, 0, 0, 0);
								Slider["7fe"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Slider["7fe"]["Text"] = "";
								Slider["7fe"]["ClearTextOnFocus"] = false;
								Slider["7fe"]["Visible"] = true;
								
								Library.Theme.Objects[Slider["7fe"]] = {
									TextStrokeColor3 = "TextBorder",
									TextColor3 = "TextColor"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Label.LabelText.UIPadding
								Slider["1fd"] = Library:CreateObject("UIPadding", Slider["7fe"]);
								Slider["1fd"]["PaddingTop"] = UDim.new(0, -1);
							end
							--
							local function GetValue(value)
								return ("%.14g"):format(value)
							end
							--
							function Slider:ReturnValue()
								return ("%.14g"):format(Slider.CurrentValue)
							end
							--
							local function SetValue(value)
								value = math.clamp(Options.Decimal * math.round(tonumber(value) / Options.Decimal), Options.Min, Options.Max)
								Slider["27"].Text = tostring(GetValue(value))..Options.Ending.."/"..tostring(GetValue(Options.Max))..Options.Ending

								if value ~= Slider.CurrentValue then
									Slider.CurrentValue = value
									Library:TweenObject(Slider["25"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new((value - Options.Min) / (Options.Max - Options.Min), 0, 1, 0)})
								end

								Library.Flags[Options.Flag] = Slider
								Options.Callback(tonumber(GetValue(value)))
							end
							--
							SetValue(Options.Default)
							--
							function Slider:Get()
								return tonumber(Slider:ReturnValue())
							end
							--
							function Slider:Set(Value)
								SetValue(Value)
							end
                            --
                            function Slider:GetName()
                                return Options.Name
                            end
							--
							function Slider:SetVisible(Bool)
								Slider["20"].Visible = Bool
							end
							--
							local function SlideBar(input)
								local sizeX = (input.Position.X - Slider["23"].AbsolutePosition.X) / Slider["23"].AbsoluteSize.X
								local value = math.clamp((Options.Max - Options.Min) * sizeX + Options.Min, Options.Min, Options.Max)
								--
								SetValue(value)
							end
							--
							do -- Connections
								Library:Connection(Slider["b"].MouseButton1Down, function()
									if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) and not Slider.LeftControlDown then
										Library.UI.Dragging = {GUI = Slider["b"], True = true}
										Slider.MouseDown = true
										SlideBar({Position = UserInputService:GetMouseLocation()})
									end
								end)
								--
								Library:Connection(UserInputService.InputBegan, function(input, gpe)
									if gpe then return end
									--
									if input.KeyCode == Enum.KeyCode.LeftControl then
										Slider.LeftControlDown = true
									end
								end)
								--
								Library:Connection(UserInputService.InputChanged, function(input)
									if Library.UI.Dragging.GUI ~= Slider["b"] or Slider.LeftControlDown then return end
									--
									if not (UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)) then
										Library.UI.Dragging = {GUI = nil, True = false}
										return
									end
									--
									if Slider.MouseDown and input.UserInputType == Enum.UserInputType.MouseMovement then
										SlideBar(input)
									end
								end)
								--
								Library:Connection(UserInputService.InputEnded, function(input, gpe)
									if gpe then return end
									--
									if input.UserInputType == Enum.UserInputType.MouseButton1 then
										Slider.MouseDown = false
									end

									if input.KeyCode == Enum.KeyCode.LeftControl then
										Slider.LeftControlDown = false
									end
								end)
								--
								Library:Connection(Slider["b"].MouseButton1Click, function()
									if Slider.LeftControlDown then
										Slider["s1b"].Visible = true
										Slider["7fe"].Text = Slider:ReturnValue()
										Slider["27"].Visible = false
										Slider["7fe"]:CaptureFocus()
										Slider.LeftControlDown = false
									end
								end)

								Library:Connection(Slider["7fe"]:GetPropertyChangedSignal("Text"), function()
									local TextBoxText = Slider["7fe"].Text
									TextBoxText = TextBoxText:gsub('[^%d%.%-]+', '')
									Slider["7fe"].Text = TextBoxText .. Options.Ending
								end)

								Library:Connection(Slider["7fe"].FocusLost, function(EnterPressed)
									if EnterPressed then
										local TextBoxText = Slider["7fe"].Text:gsub(Options.Ending, "")
										local TextBoxNumber = tonumber(TextBoxText)

										if TextBoxNumber then
											SetValue(TextBoxNumber)
										end

										Slider["s1b"].Visible = false
										Slider["27"].Visible = true
										Slider["7fe"].Text = Slider["27"].Text
										Slider.LeftControlDown = false
									end
								end)
							end
							--
							return Slider
						end
						--
						function Sections:Label(Options)
							Options = Library:Validate({
								Message = "Preview Label",
								Side = "Left",
								Risky = false,
							}, Options or {})
							--
							local Label = {
								ColorPickers = {},
								KeybindState = false,
								State = true,
								Section = self,
							}
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Label
								Label["1d"] = Library:CreateObject("Frame", Label.Section.Elements.ContentHolder);
								Label["1d"]["BorderSizePixel"] = 0;
								Label["1d"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Label["1d"]["BackgroundTransparency"] = 1;
								Label["1d"]["Size"] = UDim2.new(1, -5, 0, 15);
								Label["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Label["1d"]["Position"] = UDim2.new(0, 5, 0, 0);
								Label["1d"]["Name"] = Options.Message;
								
								Library.Theme.Objects[Label["1d"]] = {
									Color = "LightContrast"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Label.LabelText
								Label["1e"] = Library:CreateObject("TextLabel", Label["1d"]);
								Label["1e"]["TextStrokeTransparency"] = 0;
								Label["1e"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Label["1e"]["BorderSizePixel"] = 0;
								Label["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Label["1e"]["TextXAlignment"] = Enum.TextXAlignment[Options.Side];
								Label["1e"]["FontFace"] = Library.UI.Font;
								Label["1e"]["TextSize"] = Library.UI.FontSize;
								Label["1e"]["TextColor3"] = Options.Risky and Library.Theme.Default.Risky or Library.Theme.Default.TextColor;
								Label["1e"]["Size"] = UDim2.new(1, 0, 1, 0);
								Label["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Label["1e"]["Text"] = Options.Message;
								Label["1e"]["Name"] = [[LabelText]];
								Label["1e"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[Label["1e"]] = {
									Color = Options.Risky and "Risky" or "TextColor"
								}
								
								Library.Theme.Objects[Label["1e"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Label.LabelText.UIPadding
								Label["1f"] = Library:CreateObject("UIPadding", Label["1e"]);
								Label["1f"]["PaddingLeft"] = UDim.new(0, -1);
							end
							--
							do -- Functions
								function Label:Update()
									Label["1e"].Size = UDim2.new(Label["1e"].Size.X.Scale, Label["1e"].Size.X.Offset, 0, math.huge)
									Label["1e"].Size = UDim2.new(Label["1e"].Size.X.Scale, Label["1e"].Size.X.Offset, 0, Label["1e"].TextBounds.Y)
									Label["1d"].Size = UDim2.new(Label["1d"].Size.X.Scale, Label["1d"].Size.X.Offset, 0, Label["1e"].TextBounds.Y)
								end
							end
							--
							Label:Update()
							--
							function Label:GetName()
								return Options.Message
							end

							function Label:GetState()
								return Label.State
							end

							function Label:GetCallback(b)
								Options.Callback(b)
							end
							--
							function Label:SetVisible(Bool)
								Label["1d"].Visible = Bool
							end
							--
							function Label:ColorPicker(Options)
								Options = Library:Validate({
									Name = "Preview Color Picker",
									Default = Color3.fromRGB(255, 0, 0),
									Flag = Library.NewFlag(),
									Alpha = 1,
									AlphaBar = true,
									Callback = function() end,
								}, Options or {})
								--
								local ColorPicker = {}
								--
								Label.ColorPickers[#Label.ColorPickers + 1] = ColorPicker
								--
								local ColorPickerFrame = Library:ColorPicker({
									Name = Options.Name,
									Default = Options.Default,
									Flag = Options.Flag,
									Alpha = Options.Alpha,
									AlphaBar = Options.AlphaBar,
									Callback = Options.Callback,
									Parent = Label["1d"],
									Keybind = Label.KeybindState,
									Count = #Label.ColorPickers,
									Object = Window["2"],
									GUI = GUI["1"],
									Scrolling = Toggle.Section.Elements.Scrolling,
								})
								--
								return ColorPickerFrame
							end
							--
							function Label:Keybind(Options)
								Options = Library:Validate({
									Default = Enum.KeyCode.Backspace,
									Mode = "Toggle",
									HideFromList = false,
									Blacklisted = {},
									Flag = Library.NewFlag(),
									Callback = function() end,
								}, Options or {})
								--
								local Keybind = {}
								--
								Label.KeybindState = true
								--
								Library:KeyBind({
									Default = Options.Default,
									Mode = Options.Mode,
									HideFromList = Options.HideFromList,
									Blacklisted = Options.Blacklisted,
									Parent = Label["1d"],
									Toggle = Label,
									Flag = Options.Flag,
									Callback = Options.Callback,
									Count = #Label.ColorPickers + 1,
								})
								--
								return Keybind
							end
							--
							return Label
						end
						--
						function Sections:Dropdown(Options)
							Options = Library:Validate({
								Default = "None",
								Name = "Preview Dropdown",
								Content = {},
								Risky = false,
								Flag = Library.NewFlag(),
								Callback = function() end
							}, Options or {})
							--
							local Dropdown = {
								Open = true,
								Active = false,
								CurrentItem = nil,
								Items = {},
								Section = self,
								Value = Options.Default,
							}
							--
							if not Options.Default then
								Library.Flags[Options.Flag] = Dropdown
								Options.Callback(Options.Default)
							end

							if table.find(Options.Content, Options.Default) then
								Library.Flags[Options.Flag] = Dropdown
								Options.Callback(Options.Default)
							end
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown
								Dropdown["28"] = Library:CreateObject("Frame", Dropdown.Section.Elements.ContentHolder);
								Dropdown["28"]["ZIndex"] = 2;
								Dropdown["28"]["BorderSizePixel"] = 0;
								Dropdown["28"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Dropdown["28"]["BackgroundTransparency"] = 1;
								Dropdown["28"]["Size"] = UDim2.new(1, -5, 0, 35);
								Dropdown["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["28"]["Position"] = UDim2.new(0, 5, 0, 0);
								Dropdown["28"]["Name"] = Options.Name;
								
								Library.Theme.Objects[Dropdown["28"]] = {
									Color = "LightContrast"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownText
								Dropdown["29"] = Library:CreateObject("TextLabel", Dropdown["28"]);
								Dropdown["29"]["TextStrokeTransparency"] = 0;
								Dropdown["29"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Dropdown["29"]["BorderSizePixel"] = 0;
								Dropdown["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Dropdown["29"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								Dropdown["29"]["FontFace"] = Library.UI.Font;
								Dropdown["29"]["TextSize"] = Library.UI.FontSize;
								Dropdown["29"]["TextColor3"] = Options.Risky and Library.Theme.Default.Risky or Library.Theme.Default.TextColor;
								Dropdown["29"]["Size"] = UDim2.new(1, 0, 0.5, -1);
								Dropdown["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["29"]["Text"] = Options.Name;
								Dropdown["29"]["Name"] = [[DropdownText]];
								Dropdown["29"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[Dropdown["29"]] = {
									Color = Options.Risky and "Risky" or "TextColor"
								}
								
								Library.Theme.Objects[Dropdown["29"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownText.UIPadding
								Dropdown["2a"] = Library:CreateObject("UIPadding", Dropdown["29"]);
								Dropdown["2a"]["PaddingLeft"] = UDim.new(0, -1);

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame
								Dropdown["2b"] = Library:CreateObject("Frame", Dropdown["28"]);
								Dropdown["2b"]["BorderSizePixel"] = 0;
								Dropdown["2b"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Dropdown["2b"]["Size"] = UDim2.new(1, 0, 0.5, 0);
								Dropdown["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["2b"]["Position"] = UDim2.new(0, 0, 0.5, 1);
								Dropdown["2b"]["Name"] = [[DropdownFrame]];
								
								Library.Theme.Objects[Dropdown["2b"]] = {
									Color = "LightContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
								Dropdown["8c"] = Library:CreateObject("ImageLabel", Dropdown["2b"]);
								Dropdown["8c"]["ZIndex"] = 0;
								Dropdown["8c"]["BorderSizePixel"] = 0;
								Dropdown["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Dropdown["8c"]["Image"] = [[rbxassetid://18520020007]];
								Dropdown["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
								Dropdown["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["8c"]["Name"] = [[Gradient]];
								Dropdown["8c"]["BackgroundTransparency"] = 1;
								
								-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
								Dropdown["b"] = Library:CreateObject("TextButton", Dropdown["2b"]);
								Dropdown["b"]["BorderSizePixel"] = 0;
								Dropdown["b"]["TextTransparency"] = 1;
								Dropdown["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Dropdown["b"]["TextSize"] = Library.UI.FontSize;
								Dropdown["b"]["FontFace"] = Library.UI.Font;
								Dropdown["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["b"]["Size"] = UDim2.new(1, 0, 1, 0);
								Dropdown["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["b"]["BackgroundTransparency"] = 1;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownValue
								Dropdown["2c"] = Library:CreateObject("TextLabel", Dropdown["2b"]);
								Dropdown["2c"]["TextStrokeTransparency"] = 0;
								Dropdown["2c"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Dropdown["2c"]["BorderSizePixel"] = 0;
								Dropdown["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Dropdown["2c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								Dropdown["2c"]["FontFace"] = Library.UI.Font;
								Dropdown["2c"]["TextSize"] = Library.UI.FontSize;
								Dropdown["2c"]["TextColor3"] = Library.Theme.Default.TextColor;
								Dropdown["2c"]["Size"] = UDim2.new(1, 0, 1, 0);
								Dropdown["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["2c"]["Text"] = Options.Default ~= "None" and table.find(Options.Content, Options.Default) and Options.Default or "None";
								Dropdown["2c"]["Name"] = [[DropdownValue]];
								Dropdown["2c"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[Dropdown["2c"]] = {
									Color = "TextColor"
								}
								
								Library.Theme.Objects[Dropdown["2c"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownValue.UIPadding
								Dropdown["2d"] = Library:CreateObject("UIPadding", Dropdown["2c"]);
								Dropdown["2d"]["PaddingLeft"] = UDim.new(0, 3);
                                Dropdown["2d"]["PaddingBottom"] = UDim.new(0, -1);
                                
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder
								Dropdown["2e"] = Library:CreateObject("ScrollingFrame", Dropdown["2b"]);
								Dropdown["2e"]["Active"] = true;
								Dropdown["2e"]["BorderSizePixel"] = 0;
								Dropdown["2e"]["MidImage"] = [[http://www.roblox.com/asset/?id=158362264]];
								Dropdown["2e"]["TopImage"] = [[http://www.roblox.com/asset/?id=158362264]];
								Dropdown["2e"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Dropdown["2e"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
								Dropdown["2e"]["Size"] = UDim2.new(1, 0, 0, 0);
								Dropdown["2e"]["ScrollBarImageColor3"] = Library.Theme.Default.Accent;
								Dropdown["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["2e"]["ScrollBarThickness"] = 2;
								Dropdown["2e"]["Position"] = UDim2.new(0, 0, 1, 0);
								Dropdown["2e"]["Visible"] = true;
								Dropdown["2e"]["Name"] = [[DropdownHolder]];
								Dropdown["2e"]["BottomImage"] = [[http://www.roblox.com/asset/?id=158362264]];
								
								Library.Theme.Objects[Dropdown["2e"]] = {
									Color = "Accent"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.ArrowIcon
								Dropdown["3e"] = Library:CreateObject("ImageLabel", Dropdown["2b"]);
								Dropdown["3e"]["BorderSizePixel"] = 0;
								Dropdown["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Dropdown["3e"]["Image"] = [[rbxassetid://18475684195]];
								Dropdown["3e"]["Rotation"] = 180;
								Dropdown["3e"]["Size"] = UDim2.new(0, 10, 0, 10);
								Dropdown["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["3e"]["Name"] = [[ArrowIcon]];
								Dropdown["3e"]["BackgroundTransparency"] = 1;
								Dropdown["3e"]["Position"] = UDim2.new(1, -13, 0, 2);
								
								Library.Theme.Objects[Dropdown["3e"]] = {
									Color = "ImageColor"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.UIListLayout
								Dropdown["2f"] = Library:CreateObject("UIListLayout", Dropdown["2e"]);
								Dropdown["2f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.UIStroke
								Dropdown["30"] = Library:CreateObject("UIStroke", Dropdown["2e"]);
								Dropdown["30"]["Color"] = Library.Theme.Default.Inline;
								Dropdown["30"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
								
								Library.Theme.Objects[Dropdown["30"]] = {
									Color = "Inline"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.UIStroke
								Dropdown["3d"] = Library:CreateObject("UIStroke", Dropdown["2b"]);
								Dropdown["3d"]["Color"] = Library.Theme.Default.Inline;
								
								Library.Theme.Objects[Dropdown["3d"]] = {
									Color = "Inline"
								}
							end
							--
							function Dropdown:Set(State)
								for Index, Value in Dropdown.Items do
									if Index == State then
										Value:Activate()
									end
								end
							end
							--
							function Dropdown:Get()
								return Dropdown.Value
							end
							--
							function Dropdown:SetVisible(Bool)
								Dropdown["28"].Visible = Bool
							end
                            --
                            function Dropdown:UpdateSizes()
                                for Index, Value in Dropdown["2e"]:GetChildren() do
                                    if #Options.Content > 6 then
                                        if table.find(Options.Content, Value.Name) then
                                            Value.Size = UDim2.new(1, -3, 0, 20)
                                        end
                                    end
                                end
                            end
                            --
                            Library:Connection(Dropdown["2e"].ChildAdded, Dropdown.UpdateSizes)
                            Library:Connection(Dropdown["2e"].ChildRemoved, Dropdown.UpdateSizes)
							--
							do -- Functions
								function Dropdown:AddValue(Index, Value)
									local Item = {
										Hovering = false,
										Active = false,
									}
									--
									if Item[Index] ~= nil then
										return
									end
									--
									Item[Index] = {
										instance = {},
										value = Value,
									}
									--
									Dropdown.Items[Value] = Item
									--
									do -- Rendering
										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.InactiveValue
										Item["39"] = Library:CreateObject("Frame", Dropdown["2e"]);
										Item["39"]["BorderSizePixel"] = 0;
										Item["39"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
										Item["39"]["Size"] = UDim2.new(1, 0, 0, 20);
										Item["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Item["39"]["Name"] = Value;
										
										Library.Theme.Objects[Item["39"]] = {
											Color = "LightContrast"
										}
										
										-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
										Item["b"] = Library:CreateObject("TextButton", Item["39"]);
										Item["b"]["BorderSizePixel"] = 0;
										Item["b"]["TextTransparency"] = 1;
										Item["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
										Item["b"]["TextSize"] = Library.UI.FontSize;
										Item["b"]["FontFace"] = Library.UI.Font;
										Item["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
										Item["b"]["Size"] = UDim2.new(1, 0, 1, 0);
										Item["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Item["b"]["BackgroundTransparency"] = 1;

										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.InactiveValue.Name
										Item["3a"] = Library:CreateObject("TextLabel", Item["39"]);
										Item["3a"]["TextStrokeTransparency"] = 0;
										Item["3a"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
										Item["3a"]["BorderSizePixel"] = 0;
										Item["3a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
										Item["3a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
										Item["3a"]["FontFace"] = Library.UI.Font;
										Item["3a"]["TextSize"] = Library.UI.FontSize;
										Item["3a"]["TextColor3"] = Color3.fromRGB(176, 176, 176);
										Item["3a"]["Size"] = UDim2.new(1, 0, 1, 0);
										Item["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Item["3a"]["Text"] = Value;
										Item["3a"]["Name"] = [[Name]];
										Item["3a"]["BackgroundTransparency"] = 1;
										
										Library.Theme.Objects[Item["3a"]] = {
											Color = "TextBorder"
										}

										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.InactiveValue.Name.UIPadding
										Item["3b"] = Library:CreateObject("UIPadding", Item["3a"]);
										Item["3b"]["PaddingLeft"] = UDim.new(0, 4);

										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.InactiveValue.UIStroke
										Item["3c"] = Library:CreateObject("UIStroke", Item["39"]);
										Item["3c"]["Color"] = Library.Theme.Default.Inline;
										Item["3c"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
										
										Library.Theme.Objects[Item["3c"]] = {
											Color = "Inline"
										}
									end
									--
									do -- Functions
										function Item:Activate()
											if not Item.Active then
												if Dropdown.CurrentItem ~= nil then
													Dropdown.CurrentItem:Deactivate()
												end

												Item.Active = true
												
												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
												Library:TweenObject(Item["3b"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {PaddingLeft = UDim.new(0, 7)})

												Library.Theme.Objects[Item["3a"]] = {
													Color = "Accent"
												}

												Dropdown.CurrentItem = Item
												--
												Dropdown.Value = Value
												Library.Flags[Options.Flag] = Dropdown
												Options.Callback(Value)
												Dropdown["2c"].Text = Value
											end
										end
										--
										function Item:Deactivate()
											if Item.Active and Dropdown.CurrentItem == Item then
												Item.Active = false
												Item.Hover = false

												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
												Library:TweenObject(Item["3b"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {PaddingLeft = UDim.new(0, 4)})
												
												Library.Theme.Objects[Item["3a"]] = {
													Color = "TextDark"
												}

												Dropdown.CurrentItem = nil
											end
										end
										--
										function Item:Toggle()
											if Item.Active then
												if Dropdown.CurrentItem ~= Item or Dropdown.CurrentItem == nil then
													Item:Deactivate()
												end
											else
												Item:Activate()
											end
										end
									end
									--
									do -- Connections
										Library:Connection(Item["39"].MouseEnter, function()
											if not Item.Active then
												Item.Hovering = true
												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
												
												Library.Theme.Objects[Item["3a"]] = {
													Color = "TextColor"
												}
											end
										end)
										--
										Library:Connection(Item["39"].MouseLeave, function()
											if not Item.Active then
												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
												
												Library.Theme.Objects[Item["3a"]] = {
													Color = "TextDark"
												}
											end
										end)
										--
										Library:Connection(Item["b"].MouseButton1Click, function()
											Item:Toggle()
											Dropdown:Toggle()
										end)
									end
									--
									if Value == Options.Default then
										Item:Activate()
									end
								end
								--
								function Dropdown:RemoveValue()
									
								end
								--
								function Dropdown:Toggle()
									if Dropdown.Open then
										Library:TweenObject(Dropdown["3e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Rotation = 0})
										Library:TweenObject(Dropdown["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, 0)}, function()
											Dropdown["28"].ZIndex = 1
											Library.UI.DropdownZIndex = Dropdown["28"].ZIndex
										end)
										--
										Library:TweenObject(Dropdown["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {ScrollBarImageTransparency = 1}, function()
											Dropdown["30"].Transparency = 1
										end)
									else
										if Library.UI.OpenColorFrames == 0 then
											Dropdown["28"].ZIndex = Library.UI.DropdownZIndex + 10
											Library.UI.DropdownZIndex = Dropdown["28"].ZIndex
										else
											Dropdown["28"].ZIndex = 2
										end
										--
										if Dropdown["2e"].AbsoluteCanvasSize.Y > 121 then
											Library:TweenObject(Dropdown["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {ScrollBarImageTransparency = 0})
										end
										--
										Dropdown["30"].Transparency = 0
										--
										Library:TweenObject(Dropdown["3e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Rotation = 180})
										--
										if #Options.Content < 6 then
											Library:TweenObject(Dropdown["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, #Options.Content * 20)})
										else
											Library:TweenObject(Dropdown["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, 120)})
										end
									end
									--
									Dropdown.Open = not Dropdown.Open
								end
							end
							--
							Dropdown:Toggle()
							--
							do -- Connections
								Library:Connection(Dropdown["b"].MouseButton1Click, function()
									if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) then
										Dropdown:Toggle()
									end
								end)
							end
							--
							for Index, Value in Options.Content do
								Dropdown:AddValue(Index, Value)
							end
							--
							return Dropdown
						end
						--
						function Sections:MultiBox(Options)
							Options = Library:Validate({
								Default = "None",
								Name = "Preview MultiBox",
								Content = {},
								Risky = false,
								Flag = Library.NewFlag(),
								Callback = function() end
							}, Options or {})
							--
							local MultiBox = {
								Open = true,
								Hover = false,
								Items = Options.Content,
								Value = {},
								SelectedOrder = {},
								AllItems = {},
								Section = self,
							}
							--
							if not Options.Default then
								Library.Flags[Options.Flag] = MultiBox
								Options.Callback(Options.Default)
							end
							--
							Library.Flags[Options.Flag] = MultiBox
							Options.Callback(Options.Default)
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox
								MultiBox["28"] = Library:CreateObject("Frame", MultiBox.Section.Elements.ContentHolder);
								MultiBox["28"]["ZIndex"] = 2;
								MultiBox["28"]["BorderSizePixel"] = 0;
								MultiBox["28"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								MultiBox["28"]["BackgroundTransparency"] = 1;
								MultiBox["28"]["Size"] = UDim2.new(1, -5, 0, 35);
								MultiBox["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiBox["28"]["Position"] = UDim2.new(0, 5, 0, 0);
								MultiBox["28"]["Name"] = Options.Name;
								
								Library.Theme.Objects[MultiBox["28"]] = {
									Color = "LightContrast"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxText
								MultiBox["29"] = Library:CreateObject("TextLabel", MultiBox["28"]);
								MultiBox["29"]["TextStrokeTransparency"] = 0;
								MultiBox["29"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								MultiBox["29"]["BorderSizePixel"] = 0;
								MultiBox["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								MultiBox["29"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								MultiBox["29"]["FontFace"] = Library.UI.Font;
								MultiBox["29"]["TextSize"] = Library.UI.FontSize;
								MultiBox["29"]["TextColor3"] = Options.Risky and Library.Theme.Default.Risky or Library.Theme.Default.TextColor;
								MultiBox["29"]["Size"] = UDim2.new(1, 0, 0.5, -1);
								MultiBox["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiBox["29"]["Text"] = Options.Name;
								MultiBox["29"]["Name"] = [[MultiBoxText]];
								MultiBox["29"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[MultiBox["29"]] = {
									Color = Options.Risky and "Risky" or "TextColor"
								}
								
								Library.Theme.Objects[MultiBox["29"]] = {
									Color = "TextBorder"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxText.UIPadding
								MultiBox["2a"] = Library:CreateObject("UIPadding", MultiBox["29"]);
								MultiBox["2a"]["PaddingLeft"] = UDim.new(0, -1);

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame
								MultiBox["2b"] = Library:CreateObject("Frame", MultiBox["28"]);
								MultiBox["2b"]["BorderSizePixel"] = 0;
								MultiBox["2b"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								MultiBox["2b"]["Size"] = UDim2.new(1, 0, 0.5, -1);
								MultiBox["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiBox["2b"]["Position"] = UDim2.new(0, 0, 0.5, 1);
								MultiBox["2b"]["Name"] = [[MultiBoxFrame]];
								
								Library.Theme.Objects[MultiBox["2b"]] = {
									Color = "LightContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
								MultiBox["8c"] = Library:CreateObject("ImageLabel", MultiBox["2b"]);
								MultiBox["8c"]["ZIndex"] = 0;
								MultiBox["8c"]["BorderSizePixel"] = 0;
								MultiBox["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								MultiBox["8c"]["Image"] = [[rbxassetid://18520020007]];
								MultiBox["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
								MultiBox["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiBox["8c"]["Name"] = [[Gradient]];
								MultiBox["8c"]["BackgroundTransparency"] = 1;

								-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
								MultiBox["b"] = Library:CreateObject("TextButton", MultiBox["2b"]);
								MultiBox["b"]["BorderSizePixel"] = 0;
								MultiBox["b"]["TextTransparency"] = 1;
								MultiBox["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								MultiBox["b"]["TextSize"] = Library.UI.FontSize;
								MultiBox["b"]["FontFace"] = Library.UI.Font;
								MultiBox["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
								MultiBox["b"]["Size"] = UDim2.new(1, 0, 1, 0);
								MultiBox["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiBox["b"]["BackgroundTransparency"] = 1;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.MultiBoxValue
								MultiBox["2c"] = Library:CreateObject("TextLabel", MultiBox["2b"]);
								MultiBox["2c"]["TextStrokeTransparency"] = 0;
								MultiBox["2c"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								MultiBox["2c"]["BorderSizePixel"] = 0;
								MultiBox["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								MultiBox["2c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								MultiBox["2c"]["FontFace"] = Library.UI.Font;
								MultiBox["2c"]["TextSize"] = Library.UI.FontSize;
								MultiBox["2c"]["TextColor3"] = Library.Theme.Default.TextColor;
								MultiBox["2c"]["Size"] = UDim2.new(1, 0, 1, 0);
								MultiBox["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiBox["2c"]["Text"] = Options.Default ~= "None" and table.concat(Options.Default, ", ") or "None";
								MultiBox["2c"]["Name"] = [[MultiBoxValue]];
								MultiBox["2c"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[MultiBox["2c"]] = {
									Color = "TextColor"
								}
								
								Library.Theme.Objects[MultiBox["2c"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.MultiBoxValue.UIPadding
								MultiBox["2d"] = Library:CreateObject("UIPadding", MultiBox["2c"]);
								MultiBox["2d"]["PaddingLeft"] = UDim.new(0, 3);
                                MultiBox["2d"]["PaddingBottom"] = UDim.new(0, -1);

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.MultiBoxHolder
								MultiBox["2e"] = Library:CreateObject("ScrollingFrame", MultiBox["2b"]);
								MultiBox["2e"]["Active"] = true;
								MultiBox["2e"]["BorderSizePixel"] = 0;
								MultiBox["2e"]["MidImage"] = [[http://www.roblox.com/asset/?id=158362264]];
								MultiBox["2e"]["TopImage"] = [[http://www.roblox.com/asset/?id=158362264]];
								MultiBox["2e"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								MultiBox["2e"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
								MultiBox["2e"]["Size"] = UDim2.new(1, 0, 0, 0);
								MultiBox["2e"]["ScrollBarImageColor3"] = Library.Theme.Default.Accent;
								MultiBox["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiBox["2e"]["ScrollBarThickness"] = 2;
								MultiBox["2e"]["Position"] = UDim2.new(0, 0, 1, 0);
								MultiBox["2e"]["Visible"] = true;
								MultiBox["2e"]["Name"] = [[MultiBoxHolder]];
								MultiBox["2e"]["BottomImage"] = [[http://www.roblox.com/asset/?id=158362264]];
								
								Library.Theme.Objects[MultiBox["2e"]] = {
									Color = "Accent"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.ArrowIcon
								MultiBox["3e"] = Library:CreateObject("ImageLabel", MultiBox["2b"]);
								MultiBox["3e"]["BorderSizePixel"] = 0;
								MultiBox["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								MultiBox["3e"]["Image"] = [[rbxassetid://18475684195]];
								MultiBox["3e"]["Rotation"] = 180;
								MultiBox["3e"]["Size"] = UDim2.new(0, 10, 0, 10);
								MultiBox["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								MultiBox["3e"]["Name"] = [[ArrowIcon]];
								MultiBox["3e"]["BackgroundTransparency"] = 1;
								MultiBox["3e"]["Position"] = UDim2.new(1, -13, 0, 2);
								
								Library.Theme.Objects[MultiBox["3e"]] = {
									Color = "ImageColor"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.MultiBoxHolder.UIListLayout
								MultiBox["2f"] = Library:CreateObject("UIListLayout", MultiBox["2e"]);
								MultiBox["2f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.MultiBoxHolder.UIStroke
								MultiBox["30"] = Library:CreateObject("UIStroke", MultiBox["2e"]);
								MultiBox["30"]["Color"] = Library.Theme.Default.Inline;
								MultiBox["30"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
								
								Library.Theme.Objects[MultiBox["30"]] = {
									Color = "Inline"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.UIStroke
								MultiBox["3d"] = Library:CreateObject("UIStroke", MultiBox["2b"]);
								MultiBox["3d"]["Color"] = Library.Theme.Default.Inline;
								
								Library.Theme.Objects[MultiBox["3d"]] = {
									Color = "Inline"
								}
							end
							--
							function MultiBox:Set(State)
								for Index, Value in MultiBox.AllItems do
									if table.find(State, Index) then
										Value:Activate()
									end
								end
							end
                            --
                            function MultiBox:GetName()
                                return Options.Name
                            end
							--
							function MultiBox:Get()
								return MultiBox.Value
							end
							--
							function MultiBox:SetVisible(Bool)
								MultiBox["28"].Visible = Bool
							end
                            --
                            function MultiBox:UpdateSizes()
                                for Index, Value in MultiBox["2e"]:GetChildren() do
                                    if #Options.Content > 6 then
                                        if table.find(Options.Content, Value.Name) then
                                            Value.Size = UDim2.new(1, -3, 0, 20)
                                        end
                                    end
                                end
                            end
                            --
                            Library:Connection(MultiBox["2e"].ChildAdded, MultiBox.UpdateSizes)
                            Library:Connection(MultiBox["2e"].ChildRemoved, MultiBox.UpdateSizes)
							--
							do -- Functions
								function MultiBox:AddValue(Index, Value)
									if typeof(Value) == "boolean" then return end
									--
									local Item = {
										Hovering = false,
										Active = false,
									}
									--
									if Item[Index] ~= nil then
										return
									end
									--
									Item[Index] = {
										instance = {},
										value = Value,
									}
									--
									MultiBox.AllItems[Value] = Item
									--
									do -- Rendering
										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.MultiBoxHolder.InactiveValue
										Item["39"] = Library:CreateObject("Frame", MultiBox["2e"]);
										Item["39"]["BorderSizePixel"] = 0;
										Item["39"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
										Item["39"]["Size"] = UDim2.new(1, 0, 0, 20);
										Item["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Item["39"]["Name"] = Value;
										
										Library.Theme.Objects[Item["39"]] = {
											Color = "LightContrast"
										}

										-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
										Item["b"] = Library:CreateObject("TextButton", Item["39"]);
										Item["b"]["BorderSizePixel"] = 0;
										Item["b"]["TextTransparency"] = 1;
										Item["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
										Item["b"]["TextSize"] = Library.UI.FontSize;
										Item["b"]["FontFace"] = Library.UI.Font;
										Item["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
										Item["b"]["Size"] = UDim2.new(1, 0, 1, 0);
										Item["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Item["b"]["BackgroundTransparency"] = 1;

										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.MultiBoxHolder.InactiveValue.Name
										Item["3a"] = Library:CreateObject("TextLabel", Item["39"]);
										Item["3a"]["TextStrokeTransparency"] = 0;
										Item["3a"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
										Item["3a"]["BorderSizePixel"] = 0;
										Item["3a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
										Item["3a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
										Item["3a"]["FontFace"] = Library.UI.Font;
										Item["3a"]["TextSize"] = Library.UI.FontSize;
										Item["3a"]["TextColor3"] = Library.Theme.Default.TextDark;
										Item["3a"]["Size"] = UDim2.new(1, 0, 1, 0);
										Item["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Item["3a"]["Text"] = Value;
										Item["3a"]["Name"] = [[Name]];
										Item["3a"]["BackgroundTransparency"] = 1;
										
										Library.Theme.Objects[Item["3a"]] = {
											Color = "TextDark"
										}
										
										Library.Theme.Objects[Item["3a"]] = {
											Color = "TextBorder"
										}

										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.MultiBoxHolder.InactiveValue.Name.UIPadding
										Item["3b"] = Library:CreateObject("UIPadding", Item["3a"]);
										Item["3b"]["PaddingLeft"] = UDim.new(0, 4);

										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.MultiBox.MultiBoxFrame.MultiBoxHolder.InactiveValue.UIStroke
										Item["3c"] = Library:CreateObject("UIStroke", Item["39"]);
										Item["3c"]["Color"] = Library.Theme.Default.Inline;
										Item["3c"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
										
										Library.Theme.Objects[Item["3c"]] = {
											Color = "Inline"
										}
									end
									--
									do -- Functions
										function MultiBox:UpdateValue()
											MultiBox.Value = Item:GetSelectedItems()
											--
											if #MultiBox.Value > 4 then
												local Options = {}
												--
												for i = 1, 4 do
													table.insert(Options, MultiBox.Value[i])
												end
												--
												MultiBox["2c"].Text = table.concat(Options, ", ").." ..."
											else
												MultiBox["2c"].Text = #MultiBox.Value > 0 and table.concat(MultiBox.Value, ", ") or "None"
											end
										end
										--
										function Item:SelectItem(Item)
											if not table.find(MultiBox.SelectedOrder, Item) then
												table.insert(MultiBox.SelectedOrder, Item)
											end
											--
											MultiBox:UpdateValue()
										end
	
										function Item:DeselectItem(Item)
											for Index, Value in MultiBox.SelectedOrder do
												if Value == Item then
													table.remove(MultiBox.SelectedOrder, Index)
													break
												end
											end
											--
											MultiBox:UpdateValue()
										end
										--
										function Item:Activate()
											if not Item.Active then
												Item.Active = true
												--
												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
												Library:TweenObject(Item["3b"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {PaddingLeft = UDim.new(0, 7)})
												--
												Library.Theme.Objects[Item["3a"]] = {
													Color = "Accent"
												}
												--
												MultiBox.CurrentItem = Item
												MultiBox.Items[Value] = true
												Library.Flags[Options.Flag] = MultiBox
												Options.Callback(MultiBox.Value)
												Item:SelectItem(Value)
											end
										end
										--
										function Item:Deactivate()
											if Item.Active then
												Item.Active = false
												Item.Hover = false
												--
												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
												Library:TweenObject(Item["3b"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {PaddingLeft = UDim.new(0, 4)})
												--
												Library.Theme.Objects[Item["3a"]] = {
													Color = "TextDark"
												}
												--
												MultiBox.CurrentItem = nil
												Library.Flags[Options.Flag] = MultiBox
												Options.Callback(MultiBox.Value)
												Item:DeselectItem(Value)
											end
										end
									end
									--
									function Item:GetSelectedItems()
										local SelectedItems = {}
										--
										for _, Item in MultiBox.SelectedOrder do
											if MultiBox.Items[Item] then
												table.insert(SelectedItems, Item)
											end
										end
										--
										return SelectedItems
									end
									--
									if typeof(Options.Default) == "table" then
										for _, v in Options.Default do
											if not MultiBox.Items[v] then
												MultiBox.Items[v] = true
												Item:SelectItem(v)
											end
										end
									end
									--
									function Item:Toggle()
										if MultiBox.Items[Value] then
											Item:Activate()
										else
											Item:Deactivate()
										end
									end
									--
									do -- Connections
										Library:Connection(Item["39"].MouseEnter, function()
											if not Item.Active then
												Item.Hovering = true
												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
												
												if Library.Theme.Objects[Item["31"]] then
													Library.Theme.Objects[Item["31"]].Color = "TextColor"
												end
											end
										end)
										--
										Library:Connection(Item["39"].MouseLeave, function()
											if not Item.Active then
												Item.Hovering = false
												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Color3.fromRGB(176, 176, 176)})
												
												if Library.Theme.Objects[Item["31"]] then
													Library.Theme.Objects[Item["31"]].Color = "TextDark"
												end
											end
										end)
										--
										Library:Connection(Item["b"].MouseButton1Click, function()
											MultiBox.Items[Value] = not MultiBox.Items[Value]
											Item:Toggle()
										end)
									end
									--
									if typeof(Options.Default) == "table" and table.find(Options.Default, Value) then
										Item:Activate()
										Item:SelectItem(Value)
									end
								end
								--
								function MultiBox:Toggle()
									if MultiBox.Open then
										Library:TweenObject(MultiBox["3e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Rotation = 0})
										Library:TweenObject(MultiBox["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, 0)}, function()
											MultiBox["28"].ZIndex = 1
										end)
										--
										Library:TweenObject(MultiBox["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {ScrollBarImageTransparency = 1}, function()
											MultiBox["30"].Transparency = 1
										end)
									else
										if Library.UI.OpenColorFrames == 0 then
											MultiBox["28"].ZIndex = Library.UI.DropdownZIndex + 9
											Library.UI.DropdownZIndex = MultiBox["28"].ZIndex
										else
											MultiBox["28"].ZIndex = 2
										end
										--
										MultiBox["30"].Transparency = 0
										--
										if MultiBox["2e"].AbsoluteCanvasSize.Y > 121 then
											Library:TweenObject(MultiBox["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {ScrollBarImageTransparency = 0})
										end
										--
										Library:TweenObject(MultiBox["3e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Rotation = 180})
										--
										if #Options.Content < 6 then
											Library:TweenObject(MultiBox["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, #Options.Content * 20)})
										else
											Library:TweenObject(MultiBox["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, 120)})
										end	
									end
									--
									MultiBox.Open = not MultiBox.Open
								end
							end
							--
							MultiBox:Toggle()
							--
							do -- Connections
								Library:Connection(MultiBox["b"].MouseButton1Click, function()
									if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) then
										MultiBox:Toggle()
									end
								end)
							end
							--
							for Index, Value in Options.Content do
								MultiBox:AddValue(Index, Value)
							end
							--
							return MultiBox
						end
						--
						return WindowTab
					end
					--
					return Window
				end
			end
			--
			if Options.PlayerList then
				local PlayerList = {
					CurrentPlayer = nil,
					Open = false,
					CurrentFlag = nil,
				}
				--
				local Window = Tab.GUI
				--
				do -- Rendering
					-- StarterGui.PlayerList.MainFrame
					Window["2"] = Library:CreateObject("Frame", GUI["1"]);
					Window["2"]["BorderSizePixel"] = 0;
					Window["2"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["2"]["Size"] = UDim2.new(0, 566, 0, 432);
					Window["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
					Window["2"]["Name"] = [[Player List]];
					Window["2"]["Visible"] = false;
					
					Library.Theme.Objects[Window["2"]] = {
						Color = "DarkContrast"
					}

					-- StarterGui.PlayerList.MainFrame.DropShadowHolder
					Window["3"] = Library:CreateObject("Frame", GUI["1"]);
					Window["3"]["ZIndex"] = 0;
					Window["3"]["BorderSizePixel"] = 0;
					Window["3"]["BackgroundTransparency"] = 1;
					Window["3"]["Size"] = Window["2"].Size;
					Window["3"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
					Window["3"]["Name"] = [[DropShadowHolder]];
					Window["3"]["Visible"] = false;
					
					-- StarterGui.MainUI.MainFrameBack
					Window["bdf3"] = Library:CreateObject("Frame", GUI["1"]);
					Window["bdf3"]["BorderSizePixel"] = 0;
					Window["bdf3"]["BackgroundColor3"] = Library.Theme.Default.Outline;
					Window["bdf3"]["Size"] = Window["2"].Size + UDim2.new(0, 4, 0, 4);
					Window["bdf3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["bdf3"]["Position"] = Window["2"].Position + UDim2.new(0, -2, 0, -2);
					Window["bdf3"]["Name"] = [[MainFrameBack]];
					Window["bdf3"]["Visible"] = false;

					Library.Theme.Objects[Window["bdf3"]] = {
						Color = "Outline"
					}

					-- StarterGui.MainUI.MainFrameBack
					Window["bdf36"] = Library:CreateObject("Frame", GUI["1"]);
					Window["bdf36"]["BorderSizePixel"] = 0;
					Window["bdf36"]["BackgroundColor3"] = Library.Theme.Default.Outline;
					Window["bdf36"]["BackgroundTransparency"] = 1;
					Window["bdf36"]["Size"] = Window["2"].Size;
					Window["bdf36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["bdf36"]["Position"] = Window["2"].Position;
					Window["bdf36"]["Name"] = [[MainFrameBack]];
					Window["bdf36"]["Visible"] = false;

					-- StartingPositionerGui.MainUI.MainFrame.UIStroke
					Window["5fd"] = Library:CreateObject("UIStroke", Window["bdf36"]);
					Window["5fd"]["Color"] = Library.Theme.Default.Accent;
					Window["5fd"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					Window["5fd"]["Thickness"] = 1;

					Library.Theme.Objects[Window["5fd"]] = {
						Color = "Accent"
					}

					-- StarterGui.PlayerList.MainFrame.DropShadowHolder.DropShadow
					Window["4"] = Library:CreateObject("ImageLabel", Window["3"]);
					Window["4"]["ZIndex"] = 0;
					Window["4"]["BorderSizePixel"] = 0;
					Window["4"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
					Window["4"]["ScaleType"] = Enum.ScaleType.Slice;
					Window["4"]["ImageColor3"] = Library.Theme.Default.Glow;
					Window["4"]["ImageTransparency"] = 0.5;
					Window["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
					Window["4"]["Image"] = [[rbxassetid://6015897843]];
					Window["4"]["Size"] = UDim2.new(1, 47, 1, 47);
					Window["4"]["Name"] = [[DropShadow]];
					Window["4"]["BackgroundTransparency"] = 1;
					Window["4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
					
					Library.Theme.Objects[Window["4"]] = {
						Color = "Glow"
					}

					-- StarterGui.PlayerList.MainFrame.UIStroke
					Window["5"] = Library:CreateObject("UIStroke", Window["2"]);
					Window["5"]["Color"] = Library.Theme.Default.Accent;
					Window["5"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					Window["5"]["Thickness"] = 1;

					Library.Theme.Objects[Window["5"]] = {
						Color = "Accent"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame
					Window["6"] = Library:CreateObject("Frame", Window["2"]);
					Window["6"]["BorderSizePixel"] = 0;
					Window["6"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["6"]["Size"] = UDim2.new(1, -14, 1, -27);
					Window["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["6"]["Position"] = UDim2.new(0, 7, 0, 20);
					Window["6"]["Name"] = [[InnerFrame]];
					
					Library.Theme.Objects[Window["6"]] = {
						Color = "DarkContrast"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.UIStroke
					Window["7"] = Library:CreateObject("UIStroke", Window["6"]);
					Window["7"]["Color"] = Library.Theme.Default.Inline;
					Window["7"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["7"]] = {
						Color = "Inline"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation
					Window["8"] = Library:CreateObject("Frame", Window["6"]);
					Window["8"]["BorderSizePixel"] = 0;
					Window["8"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["8"]["Size"] = UDim2.new(1, -10, 1, -10);
					Window["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["8"]["Name"] = [[Navigation]];
					
					Library.Theme.Objects[Window["8"]] = {
						Color = "LightContrast"
					}
					
					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.TopBar
					Window["22"] = Library:CreateObject("Frame", Window["8"]);
					Window["22"]["BorderSizePixel"] = 0;
					Window["22"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["22"]["BackgroundTransparency"] = 1;
					Window["22"]["Size"] = UDim2.new(1, -10, 0, 15);
					Window["22"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["22"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["22"]["Name"] = [[TopBar]];

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.TopBar.SearchBar
					Window["24"] = Library:CreateObject("Frame", Window["22"]);
					Window["24"]["BorderSizePixel"] = 0;
					Window["24"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["24"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["24"]["Name"] = [[SearchBar]];
					
					Library.Theme.Objects[Window["24"]] = {
						Color = "DarkContrast"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.TopBar.SearchBar.UIStroke
					Window["25"] = Library:CreateObject("UIStroke", Window["24"]);
					Window["25"]["Color"] = Library.Theme.Default.Inline;
					Window["25"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["25"]] = {
						Color = "Inline"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.TopBar.SearchBar.SearchIcon
					Window["26"] = Library:CreateObject("ImageLabel", Window["24"]);
					Window["26"]["BorderSizePixel"] = 0;
					Window["26"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["26"]["ImageColor3"] = Library.Theme.Default.ImageColor;
					Window["26"]["Image"] = [[rbxassetid://18504898468]];
					Window["26"]["Size"] = UDim2.new(0, 12, 1, -3);
					Window["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["26"]["Name"] = [[SearchIcon]];
					Window["26"]["BackgroundTransparency"] = 1;
					Window["26"]["Position"] = UDim2.new(0, 3, 0, 2);
					
					Library.Theme.Objects[Window["26"]] = {
						ImageColor3 = "ImageColor"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.TopBar.SearchBar.Playersearch
					Window["27d"] = Library:CreateObject("TextBox", Window["24"]);
					Window["27d"]["CursorPosition"] = -1;
					Window["27d"]["TextStrokeTransparency"] = 0;
					Window["27d"]["PlaceholderColor3"] = Library.Theme.Default.TextDark;
					Window["27d"]["BorderSizePixel"] = 0;
					Window["27d"]["TextSize"] = Library.UI.FontSize;
					Window["27d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
					Window["27d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["27d"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["27d"]["FontFace"] = Library.UI.Font;
					Window["27d"]["BackgroundTransparency"] = 1;
					Window["27d"]["PlaceholderText"] = [[Search for a player]];
					Window["27d"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["27d"]["BorderColor3"] = Library.Theme.Default.TextBorder;
					Window["27d"]["Text"] = [[]];
					Window["27d"]["Name"] = [[Playersearch]];
					
					Library.Theme.Objects[Window["27d"]] = {
						PlaceholderColor3 = "TextDark",
						TextColor3 = "TextColor",
						TextStrokeColor3 = "TextBorder"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.TopBar.SearchBar.Playersearch.UIPadding
					Window["28"] = Library:CreateObject("UIPadding", Window["27d"]);
					Window["28"]["PaddingLeft"] = UDim.new(0, 17);
					Window["28"]["PaddingTop"] = UDim.new(0, -1);

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.TopBar.UIListLayout
					Window["26"] = Library:CreateObject("UIListLayout", Window["22"]);
					Window["26"]["FillDirection"] = Enum.FillDirection.Horizontal;
					Window["26"]["Padding"] = UDim.new(0, 2);
					Window["26"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.UIStroke
					Window["9"] = Library:CreateObject("UIStroke", Window["8"]);
					Window["9"]["Color"] = Library.Theme.Default.Inline;
					Window["9"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["9"]] = {
						Color = "Inline"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList
					Window["a"] = Library:CreateObject("Frame", Window["8"]);
					Window["a"]["BorderSizePixel"] = 0;
					Window["a"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["a"]["Size"] = UDim2.new(1, -10, 1, -115);
					Window["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["a"]["Position"] = UDim2.new(0, 5, 0, 25);
					Window["a"]["Name"] = [[PlayerList]];
					
					Library.Theme.Objects[Window["a"]] = {
						Color = "DarkContrast"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.UIStroke
					Window["b"] = Library:CreateObject("UIStroke", Window["a"]);
					Window["b"]["Color"] = Library.Theme.Default.Inline;
					Window["b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["b"]] = {
						Color = "Inline"
					}
					
					Window["2d"] = Library:CreateObject("Frame", Window["2"]);
					Window["2d"]["BorderSizePixel"] = 0;
					Window["2d"]["BackgroundTransparency"] = 1;
					Window["2d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["2d"]["Size"] = UDim2.new(0, 20, 0, 20);
					Window["2d"]["AnchorPoint"] = Vector2.new(1, 1)
					Window["2d"]["Name"] = [[ResizableCorner]];
					Window["2d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2d"]["Position"] = UDim2.new(1, 0, 1, 0);

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder
					Window["c"] = Library:CreateObject("ScrollingFrame", Window["a"]);
					Window["c"]["Active"] = true;
					Window["c"]["ZIndex"] = 2;
					Window["c"]["BorderSizePixel"] = 0;
					Window["c"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
					Window["c"]["CanvasSize"] = UDim2.new(0, 0, 0, 0)
					Window["c"]["MidImage"] = [[http://www.roblox.com/asset/?id=158362264]];
					Window["c"]["TopImage"] = [[http://www.roblox.com/asset/?id=158362264]];
					Window["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["c"]["BackgroundTransparency"] = 1;
					Window["c"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["c"]["ScrollBarImageColor3"] = Library.Theme.Default.Accent;
					Window["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["c"]["ScrollBarThickness"] = 2;
					Window["c"]["Name"] = [[PlayerHolder]];
					Window["c"]["BottomImage"] = [[http://www.roblox.com/asset/?id=158362264]];
					
					Library.Theme.Objects[Window["c"]] = {
						Color = "Accent"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.UIListLayout
					Window["d"] = Library:CreateObject("UIListLayout", Window["c"]);
					Window["d"]["Padding"] = UDim.new(0, 1);
					Window["d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.UIPadding
					Window["e"] = Library:CreateObject("UIPadding", Window["c"]);
					Window["e"]["PaddingRight"] = UDim.new(0, 1);
					Window["e"]["PaddingBottom"] = UDim.new(0, 1);

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.ScrollingBack
					Window["19"] = Library:CreateObject("Frame", Window["a"]);
					Window["19"]["BorderSizePixel"] = 0;
					Window["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["19"]["BackgroundTransparency"] = 1;
					Window["19"]["Size"] = UDim2.new(0, 2, 1, 0);
					Window["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["19"]["Position"] = UDim2.new(1, -2, 0, 0);
					Window["19"]["Name"] = [[ScrollingBack]];

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.ScrollingBack.UIStroke
					Window["1a"] = Library:CreateObject("UIStroke", Window["19"]);
					Window["1a"]["Color"] = Library.Theme.Default.Inline;
					Window["1a"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["1a"]] = {
						Color = "Inline"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo
					Window["1b"] = Library:CreateObject("Frame", Window["8"]);
					Window["1b"]["BorderSizePixel"] = 0;
					Window["1b"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["1b"]["AnchorPoint"] = Vector2.new(0, 1);
					Window["1b"]["Size"] = UDim2.new(1, -10, 0, 80);
					Window["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1b"]["Position"] = UDim2.new(0, 5, 1, -5);
					Window["1b"]["Name"] = [[PlayerInfo]];
					
					Library.Theme.Objects[Window["1b"]] = {
						Color = "DarkContrast"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.PlayerImage
					Window["1c"] = Library:CreateObject("Frame", Window["1b"]);
					Window["1c"]["BorderSizePixel"] = 0;
					Window["1c"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["1c"]["Size"] = UDim2.new(0, 70, 1, -10);
					Window["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1c"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["1c"]["Name"] = [[PlayerImage]];
					
					Library.Theme.Objects[Window["1c"]] = {
						Color = "LightContrast"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.PlayerImage.LoadingText
					Window["1d"] = Library:CreateObject("TextLabel", Window["1c"]);
					Window["1d"]["TextStrokeTransparency"] = 0;
					Window["1d"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["1d"]["BorderSizePixel"] = 0;
					Window["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["1d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
					Window["1d"]["TextSize"] = 20;
					Window["1d"]["TextColor3"] = Library.Theme.Default.TextDark;
					Window["1d"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1d"]["Text"] = [[. . ?]];
					Window["1d"]["Name"] = [[LoadingText]];
					Window["1d"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["1d"]] = {
						Color = "TextDark"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.PlayerImage.Image
					Window["1e"] = Library:CreateObject("ImageLabel", Window["1c"]);
					Window["1e"]["BorderSizePixel"] = 0;
					Window["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["1e"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1e"]["Name"] = [[Image]];
					Window["1e"]["BackgroundTransparency"] = 1;

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.PlayerImage.UIStroke
					Window["1f"] = Library:CreateObject("UIStroke", Window["1c"]);
					Window["1f"]["Color"] = Library.Theme.Default.Inline;
					Window["1f"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["1f"]] = {
						Color = "Inline"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.UIStroke
					Window["20"] = Library:CreateObject("UIStroke", Window["1b"]);
					Window["20"]["Color"] = Library.Theme.Default.Inline;
					Window["20"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["20"]] = {
						Color = "Inline"
					}

					-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.TextInfo
					Window["21"] = Library:CreateObject("TextLabel", Window["1b"]);
					Window["21"]["TextStrokeTransparency"] = 0;
					Window["21"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["21"]["BorderSizePixel"] = 0;
					Window["21"]["TextYAlignment"] = Enum.TextYAlignment.Top;
					Window["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["21"]["TextXAlignment"] = Enum.TextXAlignment.Left;
					Window["21"]["FontFace"] = Library.UI.Font;
					Window["21"]["TextSize"] = Library.UI.FontSize;
					Window["21"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["21"]["Size"] = UDim2.new(1, -85, 1, -10);
					Window["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["21"]["Text"] = [[Unknown Player]];
					Window["21"]["Name"] = [[TextInfo]];
					Window["21"]["BackgroundTransparency"] = 1;
					Window["21"]["Position"] = UDim2.new(0, 80, 0, 5);
					
					Library.Theme.Objects[Window["21"]] = {
						Color = "TextColor"
					}
					
					Library.Theme.Objects[Window["21"]] = {
						Color = "TextBorder"
					}

					-- StarterGui.PlayerList.MainFrame.TopBar
					Window["22"] = Library:CreateObject("Frame", Window["2"]);
					Window["22"]["BorderSizePixel"] = 0;
					Window["22"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["22"]["BackgroundTransparency"] = 1;
					Window["22"]["Size"] = UDim2.new(1, 0, 0, 20);
					Window["22"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["22"]["Name"] = [[TopBar]];
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.TextButton
					Window["1dfb"] = Library:CreateObject("TextButton",Window["22"]);
					Window["1dfb"]["BorderSizePixel"] = 0;
					Window["1dfb"]["TextTransparency"] = 1;
					Window["1dfb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["1dfb"]["TextSize"] = Library.UI.FontSize;
					Window["1dfb"]["FontFace"] = Library.UI.Font;
					Window["1dfb"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1dfb"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["1dfb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1dfb"]["BackgroundTransparency"] = 1;

					-- StarterGui.PlayerList.MainFrame.TopBar.TextLabel
					Window["23"] = Library:CreateObject("TextLabel", Window["22"]);
					Window["23"]["TextStrokeTransparency"] = 0;
					Window["23"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["23"]["BorderSizePixel"] = 0;
					Window["23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["23"]["TextXAlignment"] = Enum.TextXAlignment.Left;
					Window["23"]["FontFace"] = Library.UI.Font;
					Window["23"]["TextSize"] = Library.UI.FontSize;
					Window["23"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["23"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["23"]["Text"] = [[Player List - 0 Players]];
					Window["23"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["23"]] = {
						TextStrokeColor3 = "TextBorder",
						TextColor3 = "TextColor"
					}

					-- StarterGui.PlayerList.MainFrame.TopBar.TextLabel.UIPadding
					Window["24"] = Library:CreateObject("UIPadding", Window["23"]);
					Window["24"]["PaddingLeft"] = UDim.new(0, 6);
					
					-- StarterGui.Settings.MainFrame.TopBar.CloseButton
					Window["19d"] = Library:CreateObject("ImageButton", Window["22"]);
					Window["19d"]["BorderSizePixel"] = 0;
					Window["19d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["19d"]["Image"] = [[rbxassetid://18491059927]];
					Window["19d"]["Size"] = UDim2.new(0, 10, 1, -10);
					Window["19d"]["Name"] = [[CloseButton]];
					Window["19d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["19d"]["Position"] = UDim2.new(1, -15, 0, 5);
					Window["19d"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["19d"]] = {
						ImageColor3 = "ImageColor"
					}
				end
				--
				do -- Connections
					Library:Connection(Window["19d"].MouseButton1Click, function()
						Tab:Toggle()
					end)
					--
					Library:Connection(Window["27d"]:GetPropertyChangedSignal("Text"), function()
						local InputText = (Window["27d"].Text):lower()
						--
						Window["27d"].Text = Window["27d"].Text:sub(1, 20)
						--
						for _, Frame in Window["c"]:GetChildren() do
							if Frame:IsA("Frame") then
								Frame.Visible = string.find(Frame.Name, (InputText):lower()) and true or false
							end
						end
					end)
				end
				--
				do -- Functions
					function Window:PlayerNumber()
						if #Players:GetPlayers() == 1 then
							Window["23"].Text = ("Player List - %s Player"):format(#Players:GetPlayers())
						else
							Window["23"].Text = ("Player List - %s Players"):format(#Players:GetPlayers())
						end
					end
					--
					function Window:AddPlayer(Player)
						if Library == nil or Library.CreateObject == nil then return end
						--
						Window:PlayerNumber()
						--
						local PlayerItem = {
							Active = false,
							Hovering = false,
							Open = false,
						}
						--
						do -- Rendering
							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.PlayerFrame
							PlayerItem["f"] = Library:CreateObject("Frame", Window["c"]);
							PlayerItem["f"]["BorderSizePixel"] = 0;
							PlayerItem["f"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
							PlayerItem["f"]["BackgroundTransparency"] = 1;
							PlayerItem["f"]["Size"] = UDim2.new(1, 1, 0, 20);
							PlayerItem["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["f"]["Name"] = Player.Name;
							
							Library.Theme.Objects[PlayerItem["f"]] = {
								Color = "LightContrast"
							}
							
							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown
							PlayerItem["2d2"] = Instance.new("Frame", Window["1b"]);
							PlayerItem["2d2"]["ZIndex"] = 2;
							PlayerItem["2d2"]["BorderSizePixel"] = 0;
							PlayerItem["2d2"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
							PlayerItem["2d2"]["AnchorPoint"] = Vector2.new(1, 0);
							PlayerItem["2d2"]["BackgroundTransparency"] = 1;
							PlayerItem["2d2"]["Size"] = UDim2.new(0, 160, 0, 16);
							PlayerItem["2d2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["2d2"]["Position"] = UDim2.new(1, -5, 0, 5);
							PlayerItem["2d2"]["Name"] = [[FlagDropdown]];
							PlayerItem["2d2"]["Visible"] = false;

							Library.Theme.Objects[PlayerItem["2d2"]] = {
								Color = "LightContrast"
							}

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame
							PlayerItem["2d3"] = Instance.new("Frame", PlayerItem["2d2"]);
							PlayerItem["2d3"]["BorderSizePixel"] = 0;
							PlayerItem["2d3"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
							PlayerItem["2d3"]["Size"] = UDim2.new(1, 0, 1, 0);
							PlayerItem["2d3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["2d3"]["Name"] = [[DropdownFrame]];

							Library.Theme.Objects[PlayerItem["2d3"]] = {
								Color = "LightContrast"
							}

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.DropdownHolder.UIStroke
							PlayerItem["2d10"] = Instance.new("UIStroke", PlayerItem["2d3"]);
							PlayerItem["2d10"]["Color"] = Library.Theme.Default.Inline;
							PlayerItem["2d10"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

							Library.Theme.Objects[PlayerItem["2d10"]] = {
								Color = "Inline"
							}

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.ArrowIcon
							PlayerItem["3d6"] = Instance.new("ImageLabel", PlayerItem["2d3"]);
							PlayerItem["3d6"]["BorderSizePixel"] = 0;
							PlayerItem["3d6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							PlayerItem["3d6"]["AnchorPoint"] = Vector2.new(0, 0.5);
							PlayerItem["3d6"]["Image"] = [[rbxassetid://18475684195]];
							PlayerItem["3d6"]["Size"] = UDim2.new(0, 10, 0, 10);
							PlayerItem["3d6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["3d6"]["Name"] = [[ArrowIcon]];
							PlayerItem["3d6"]["BackgroundTransparency"] = 1;
							PlayerItem["3d6"]["Position"] = UDim2.new(1, -13, 0.5, 0);

							-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
							PlayerItem["3d8"] = Library:CreateObject("ImageLabel", PlayerItem["2d3"]);
							PlayerItem["3d8"]["ZIndex"] = 0;
							PlayerItem["3d8"]["BorderSizePixel"] = 0;
							PlayerItem["3d8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							PlayerItem["3d8"]["Image"] = [[rbxassetid://18520020007]];
							PlayerItem["3d8"]["Size"] = UDim2.new(1, 0, 1, 0);
							PlayerItem["3d8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["3d8"]["Name"] = [[Gradient]];
							PlayerItem["3d8"]["BackgroundTransparency"] = 1;

							-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
							PlayerItem["3d7"] = Library:CreateObject("TextButton", PlayerItem["2d3"]);
							PlayerItem["3d7"]["BorderSizePixel"] = 0;
							PlayerItem["3d7"]["TextTransparency"] = 1;
							PlayerItem["3d7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							PlayerItem["3d7"]["TextSize"] = Library.UI.FontSize;
							PlayerItem["3d7"]["FontFace"] = Library.UI.Font;
							PlayerItem["3d7"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["3d7"]["Size"] = UDim2.new(1, 0, 1, 0);
							PlayerItem["3d7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["3d7"]["BackgroundTransparency"] = 1;

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.DropdownValue
							PlayerItem["2d4"] = Instance.new("TextLabel", PlayerItem["2d3"]);
							PlayerItem["2d4"]["BorderSizePixel"] = 0;
							PlayerItem["2d4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							PlayerItem["2d4"]["FontFace"] = Library.UI.Font;
							PlayerItem["2d4"]["TextSize"] = Library.UI.FontSize;
							PlayerItem["2d4"]["TextColor3"] = Library.Theme.Default.TextColor;
							PlayerItem["2d4"]["Size"] = UDim2.new(1, 0, 1, 0);
							PlayerItem["2d4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["2d4"]["Text"] = [[None]];
							PlayerItem["2d4"]["Name"] = [[DropdownValue]];
							PlayerItem["2d4"]["BackgroundTransparency"] = 1;

							Library.Theme.Objects[PlayerItem["2d4"]] = {
								TextColor3 = "TextColor"
							}

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.DropdownValue.UIPadding
							PlayerItem["2d5"] = Instance.new("UIPadding", PlayerItem["2d4"]);
							PlayerItem["2d5"]["PaddingLeft"] = UDim.new(0, 2);

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.DropdownHolder
							PlayerItem["2d6"] = Instance.new("ScrollingFrame", PlayerItem["2d3"]);
							PlayerItem["2d6"]["Active"] = true;
							PlayerItem["2d6"]["BorderSizePixel"] = 0;
							PlayerItem["2d6"]["MidImage"] = [[http://www.roblox.com/asset/?id=158362264]];
							PlayerItem["2d6"]["TopImage"] = [[http://www.roblox.com/asset/?id=158362264]];
							PlayerItem["2d6"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
							PlayerItem["2d6"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
							PlayerItem["2d6"]["Size"] = UDim2.new(1, 0, 0, 0);
							PlayerItem["2d6"]["ScrollBarImageColor3"] = Color3.fromRGB(155, 130, 180);
							PlayerItem["2d6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["2d6"]["ScrollBarThickness"] = 2;
							PlayerItem["2d6"]["Position"] = UDim2.new(0, 0, 1, 0);
							PlayerItem["2d6"]["Visible"] = true;
							PlayerItem["2d6"]["Name"] = [[DropdownHolder]];
							PlayerItem["2d6"]["ScrollBarImageTransparency"] = 1;
							PlayerItem["2d6"]["BottomImage"] = [[http://www.roblox.com/asset/?id=158362264]];

							Library.Theme.Objects[PlayerItem["2d6"]] = {
								Color = "LightContrast"
							}

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.DropdownHolder.UIListLayout
							PlayerItem["2d7"] = Instance.new("UIListLayout", PlayerItem["2d6"]);
							PlayerItem["2d7"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.DropdownHolder.UIStroke
							PlayerItem["2d8"] = Instance.new("UIStroke", PlayerItem["2d6"]);
							PlayerItem["2d8"]["Color"] = Library.Theme.Default.Inline;
							PlayerItem["2d8"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
							PlayerItem["2d8"]["Transparency"] = 1;

							Library.Theme.Objects[PlayerItem["2d8"]] = {
								Color = "Inline"
							}

							-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
							PlayerItem["b"] = Library:CreateObject("TextButton", PlayerItem["f"]);
							PlayerItem["b"]["BorderSizePixel"] = 0;
							PlayerItem["b"]["TextTransparency"] = 1;
							PlayerItem["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							PlayerItem["b"]["TextSize"] = Library.UI.FontSize;
							PlayerItem["b"]["FontFace"] = Library.UI.Font;
							PlayerItem["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["b"]["Size"] = UDim2.new(1, 0, 1, 0);
							PlayerItem["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["b"]["BackgroundTransparency"] = 1;

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.PlayerFrame.FirstSeperator
							PlayerItem["10"] = Library:CreateObject("Frame", PlayerItem["f"]);
							PlayerItem["10"]["BorderSizePixel"] = 0;
							PlayerItem["10"]["BackgroundColor3"] = Library.Theme.Default.Inline;
							PlayerItem["10"]["Size"] = UDim2.new(0, 1, 1, 0);
							PlayerItem["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["10"]["Position"] = UDim2.new(0.33000001311302185, 0, 0, 0);
							PlayerItem["10"]["Name"] = [[FirstSeperator]];
							
							Library.Theme.Objects[PlayerItem["10"]] = {
								Color = "Inline"
							}

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.PlayerFrame.SecondSeperator
							PlayerItem["11"] = Library:CreateObject("Frame", PlayerItem["f"]);
							PlayerItem["11"]["BorderSizePixel"] = 0;
							PlayerItem["11"]["BackgroundColor3"] = Library.Theme.Default.Inline;
							PlayerItem["11"]["Size"] = UDim2.new(0, 1, 1, 0);
							PlayerItem["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["11"]["Position"] = UDim2.new(0.6600000262260437, 0, 0, 0);
							PlayerItem["11"]["Name"] = [[SecondSeperator]];
							
							Library.Theme.Objects[PlayerItem["11"]] = {
								Color = "Inline"
							}

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.PlayerFrame.Flags
							PlayerItem["12"] = Library:CreateObject("TextLabel", PlayerItem["f"]);
							PlayerItem["12"]["TextStrokeTransparency"] = 0;
							PlayerItem["12"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
							PlayerItem["12"]["BorderSizePixel"] = 0;
							PlayerItem["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							PlayerItem["12"]["TextXAlignment"] = Enum.TextXAlignment.Left;
							PlayerItem["12"]["FontFace"] = Library.UI.Font;
							PlayerItem["12"]["TextSize"] = Library.UI.FontSize;
							PlayerItem["12"]["TextColor3"] = Player == Players.LocalPlayer and Color3.fromRGB(255, 0, 255) or Library.Theme.Default.TextDark;
							PlayerItem["12"]["Size"] = UDim2.new(0.33000001311302185, 0, 1, 0);
							PlayerItem["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["12"]["Text"] = Player == Players.LocalPlayer and "Local Player" or "None";
							PlayerItem["12"]["Name"] = [[Flags]];
							PlayerItem["12"]["BackgroundTransparency"] = 1;
							PlayerItem["12"]["Position"] = UDim2.new(0.6600000262260437, 0, 0, 0);
							
							if Player ~= Players.LocalPlayer then
								Library.Theme.Objects[PlayerItem["12"]] = {
									Color = "TextDark"
								}
							end
							
							Library.Theme.Objects[PlayerItem["12"]] = {
								Color = "TextBorder"
							}

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.PlayerFrame.Flags.UIPadding
							PlayerItem["13"] = Library:CreateObject("UIPadding", PlayerItem["12"]);
							PlayerItem["13"]["PaddingLeft"] = UDim.new(0, 5);

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.PlayerFrame.PlayerName
							PlayerItem["14"] = Library:CreateObject("TextLabel", PlayerItem["f"]);
							PlayerItem["14"]["TextStrokeTransparency"] = 0;
							PlayerItem["14"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
							PlayerItem["14"]["BorderSizePixel"] = 0;
							PlayerItem["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							PlayerItem["14"]["TextXAlignment"] = Enum.TextXAlignment.Left;
							PlayerItem["14"]["FontFace"] = Library.UI.Font;
							PlayerItem["14"]["TextSize"] = Library.UI.FontSize;
							PlayerItem["14"]["TextColor3"] = Library.Theme.Default.TextDark;
							PlayerItem["14"]["Size"] = UDim2.new(0.33000001311302185, 0, 1, 0);
							PlayerItem["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["14"]["Text"] = Player.Name;
							PlayerItem["14"]["Name"] = [[PlayerName]];
							PlayerItem["14"]["BackgroundTransparency"] = 1;
							
							Library.Theme.Objects[PlayerItem["14"]] = {
								Color = "TextDark"
							}
							
							Library.Theme.Objects[PlayerItem["14"]] = {
								Color = "TextBorder"
							}

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.PlayerFrame.PlayerName.UIPadding
							PlayerItem["15"] = Library:CreateObject("UIPadding", PlayerItem["14"]);
							PlayerItem["15"]["PaddingLeft"] = UDim.new(0, 3);

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.PlayerFrame.Team
							PlayerItem["16"] = Library:CreateObject("TextLabel", PlayerItem["f"]);
							PlayerItem["16"]["TextStrokeTransparency"] = 0;
							PlayerItem["16"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
							PlayerItem["16"]["BorderSizePixel"] = 0;
							PlayerItem["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							PlayerItem["16"]["TextXAlignment"] = Enum.TextXAlignment.Left;
							PlayerItem["16"]["FontFace"] = Library.UI.Font;
							PlayerItem["16"]["TextSize"] = Library.UI.FontSize;
							PlayerItem["16"]["TextColor3"] = Player.Team and Player.Team.TeamColor.Color or Library.Theme.Default.TextDark;
							PlayerItem["16"]["Size"] = UDim2.new(0.33000001311302185, 0, 1, 0);
							PlayerItem["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							PlayerItem["16"]["Text"] = Player.Team and tostring(Player.Team) or "Neutral";
							PlayerItem["16"]["Name"] = [[Team]];
							PlayerItem["16"]["BackgroundTransparency"] = 1;
							PlayerItem["16"]["Position"] = UDim2.new(0.33000001311302185, 0, 0, 0);
							
							Library.Theme.Objects[PlayerItem["16"]] = {
								Color = "TextDark"
							}
							
							Library.Theme.Objects[PlayerItem["16"]] = {
								Color = "TextBorder"
							}

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.PlayerFrame.Team.UIPadding
							PlayerItem["17"] = Library:CreateObject("UIPadding", PlayerItem["16"]);
							PlayerItem["17"]["PaddingLeft"] = UDim.new(0, 4);

							-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerList.PlayerHolder.PlayerFrame.UIStroke
							PlayerItem["18"] = Library:CreateObject("UIStroke", PlayerItem["f"]);
							PlayerItem["18"]["Color"] = Library.Theme.Default.Inline;
							PlayerItem["18"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
							
							Library.Theme.Objects[PlayerItem["18"]] = {
								Color = "Inline"
							}
						end
						--
						do -- Functions
							function PlayerItem:Activate()
								if not PlayerItem.Active then

									if PlayerList.CurrentPlayer ~= nil then
										PlayerList.CurrentPlayer:Deactivate()
									end

									PlayerItem.Active = true

									Library:TweenObject(PlayerItem["14"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
									
									Library.Theme.Objects[PlayerItem["14"]] = {
										Color = "Accent"
									}

									if PlayerItem["12"].Text == "None" then
										Library:TweenObject(PlayerItem["12"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
										
										Library.Theme.Objects[PlayerItem["12"]] = {
											Color = "TextColor"
										}
									end

									Library:TweenObject(PlayerItem["16"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
									
									Library.Theme.Objects[PlayerItem["16"]] = {
										Color = "TextColor"
									}

									PlayerList.CurrentPlayer = PlayerItem
									PlayerItem["2d2"].Visible = Player ~= Players.LocalPlayer and true or false
									Window:UpdatePlayerInfo()
								end
							end
							--
							function PlayerItem:Deactivate()
								if PlayerItem.Active then
									PlayerItem.Active = false
									PlayerItem.Hovering = false

									Library:TweenObject(PlayerItem["14"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
									
									Library.Theme.Objects[PlayerItem["14"]] = {
										Color = "TextDark"
									}

									if PlayerItem["12"].Text == "None" then
										Library:TweenObject(PlayerItem["12"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
										
										Library.Theme.Objects[PlayerItem["12"]] = {
											Color = "TextDark"
										}
									end

									Library:TweenObject(PlayerItem["16"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
									
									Library.Theme.Objects[PlayerItem["16"]] = {
										Color = "TextDark"
									}
									
									PlayerItem["2d2"].Visible = false
								end
							end
							--
							function PlayerItem:ToggleFlags()
								if PlayerItem.Open then
									Library:TweenObject(PlayerItem["3d6"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Rotation = 0})
									Library:TweenObject(PlayerItem["2d6"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, 0)})
									--
									Library:TweenObject(PlayerItem["2d6"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {ScrollBarImageTransparency = 1}, function()
										PlayerItem["2d8"].Transparency = 1
									end)
								else
									PlayerItem["2d8"].Transparency = 0
									--
									Library:TweenObject(PlayerItem["3d6"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Rotation = 180})
									Library:TweenObject(PlayerItem["2d6"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, 100)})
								end
								--
								PlayerItem.Open = not PlayerItem.Open
							end
						end
						--
						for Index, Value in {"None", "Priority", "Friend", "Resolve", "Target"} do
							local Item = {
								Active = false,
								Hovering = false,
							}
							--
							do -- Rendering
								-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.DropdownHolder.ActiveValue
								Item["2d9"] = Instance.new("Frame", PlayerItem["2d6"]);
								Item["2d9"]["BorderSizePixel"] = 0;
								Item["2d9"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Item["2d9"]["Size"] = UDim2.new(1, 0, 0, 20);
								Item["2d9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Item["2d9"]["Name"] = Value;

								Library.Theme.Objects[Item["2d9"]] = {
									Color = "LightContrast"
								}

								-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
								Item["3d12"] = Library:CreateObject("TextButton", Item["2d9"]);
								Item["3d12"]["BorderSizePixel"] = 0;
								Item["3d12"]["TextTransparency"] = 1;
								Item["3d12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Item["3d12"]["TextSize"] = Library.UI.FontSize;
								Item["3d12"]["FontFace"] = Library.UI.Font;
								Item["3d12"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
								Item["3d12"]["Size"] = UDim2.new(1, 0, 1, 0);
								Item["3d12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Item["3d12"]["BackgroundTransparency"] = 1;

								-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.DropdownHolder.ActiveValue.Name
								Item["2da"] = Instance.new("TextLabel", Item["2d9"]);
								Item["2da"]["BorderSizePixel"] = 0;
								Item["2da"]["TextStrokeTransparency"] = 0;
								Item["2da"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Item["2da"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Item["2da"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								Item["2da"]["FontFace"] = Library.UI.Font;
								Item["2da"]["TextSize"] = Library.UI.FontSize;
								Item["2da"]["TextColor3"] = Library.Theme.Default.TextDark;
								Item["2da"]["Size"] = UDim2.new(1, 0, 1, 0);
								Item["2da"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Item["2da"]["Text"] = Value;
								Item["2da"]["Name"] = Value;
								Item["2da"]["BackgroundTransparency"] = 1;

								Library.Theme.Objects[Item["2da"]] = {
									TextStrokeColor3 = "TextBorder",
									TextColor3 = "TextDark"
								}

								-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.DropdownHolder.ActiveValue.Name.UIPadding
								Item["2db"] = Instance.new("UIPadding", Item["2da"]);
								Item["2db"]["PaddingLeft"] = UDim.new(0, 4);

								-- StarterGui.PlayerList.MainFrame.InnerFrame.Navigation.PlayerInfo.FlagDropdown.DropdownFrame.DropdownHolder.ActiveValue.UIStroke
								Item["2dc"] = Instance.new("UIStroke", Item["2d9"]);
								Item["2dc"]["Color"] = Library.Theme.Default.Inline;
								Item["2dc"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

								Library.Theme.Objects[Item["2dc"]] = {
									Color = "Inline"
								}
							end
							--
							do -- Functions
								function Item:Activate()
									if not Item.Active then
										if PlayerList.CurrentFlag ~= nil then
											PlayerList.CurrentFlag:Deactivate()
										end
										--
										print('s')
										--
										Item.Active = true
										--
										Library:TweenObject(Item["2da"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
										Library:TweenObject(Item["2db"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {PaddingLeft = UDim.new(0, 7)})
										--
										Library.Theme.Objects[Item["2da"]] = {
											Color = "Accent"
										}
										--
										PlayerList.CurrentFlag = Item
                                        PlayerItem["2d4"].Text = Value
                                        PlayerItem["12"].Text = Value
                                        PlayerItem["12"].TextColor3 = Value == "Friend" and Color3.fromRGB(0, 255, 0) or Value == "Priority" and Color3.fromRGB(255, 255, 0) or Value == "Resolve" and Color3.fromRGB(255, 119, 0) or Value == "Target" and Color3.fromRGB(255, 0, 0) or Library.Theme.Default.TextColor
									end
								end
								--
								function Item:Deactivate()
									if Item.Active and PlayerList.CurrentFlag == Item then
										Item.Active = false
										Item.Hover = false
										--
										Library:TweenObject(Item["2da"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
										Library:TweenObject(Item["2db"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {PaddingLeft = UDim.new(0, 4)})
										--
										Library.Theme.Objects[Item["2da"]] = {
											Color = "TextDark"
										}
										--
										PlayerList.CurrentFlag = nil
									end
								end
								--
								function Item:Toggle()
									if Item.Active then
										if PlayerList.CurrentFlag ~= Item or PlayerList.CurrentFlag == nil then
											Item:Deactivate()
										end
									else
										Item:Activate()
									end
								end
								--
								function Window:UpdateFlagText(Player, NewFlag)
									if Player == nil then return end
									--
									for Index, Value in Window["c"]:GetChildren() do
										if Value:IsA("Frame") and Value.Name == Player.Name then
											local Flag = Value:FindFirstChild("Flags")
											--
											Flag.Text = NewFlag
										end
									end
								end
							end
							--
							do -- Connections
								Library:Connection(Item["2d9"].MouseEnter, function()
									if not Item.Active then
										Item.Hovering = true
										--
										Library:TweenObject(Item["2da"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
									end
								end)
								--
								Library:Connection(Item["2d9"].MouseLeave, function()
									if not Item.Active then
										Item.Hovering = false
										--
										Library:TweenObject(Item["2da"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
									end
								end)
								--
								Library:Connection(Item["3d12"].MouseButton1Click, function()
									Item:Toggle()
									PlayerItem:ToggleFlags()
								end)
							end
						end
						--
						do -- Connections
							Library:Connection(PlayerItem["f"].MouseEnter, function()
								if not PlayerItem.Active then
									Library:TweenObject(PlayerItem["14"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
									--
									Library.Theme.Objects[PlayerItem["14"]] = {
										Color = "TextColor"
									}
									--
									if PlayerItem["12"].Text == "None" then
										Library:TweenObject(PlayerItem["12"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
										--
										Library.Theme.Objects[PlayerItem["12"]] = {
											Color = "TextColor"
										}
									end
									--
									Library:TweenObject(PlayerItem["16"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
									--
									Library.Theme.Objects[PlayerItem["16"]] = {
										Color = "TextColor"
									}
									--
									PlayerItem.Hovering = true
								end
							end)
							--
							Library:Connection(PlayerItem["f"].MouseLeave, function()
								if PlayerItem.Hovering and not PlayerItem.Active then
									Library:TweenObject(PlayerItem["14"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
									--
									Library.Theme.Objects[PlayerItem["14"]] = {
										Color = "TextDark"
									}
									--
									if PlayerItem["12"].Text == "None" then
										Library:TweenObject(PlayerItem["12"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
										--
										Library.Theme.Objects[PlayerItem["12"]] = {
											Color = "TextDark"
										}
									end
									--
									Library:TweenObject(PlayerItem["16"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
									--
									Library.Theme.Objects[PlayerItem["16"]] = {
										Color = "TextDark"
									}
									--
									PlayerItem.Hovering = false
								end
							end)
							--
							Library:Connection(PlayerItem["b"].MouseButton1Down, function()
								PlayerItem:Activate()
							end)
							--
							Library:Connection(PlayerItem["3d7"].MouseButton1Click, function()
								if PlayerItem["12"].Text ~= "Local Player" then
									PlayerItem:ToggleFlags()
								end
							end)
						end
						--
						return PlayerItem
					end
					--
					function Window:RemovePlayer(Player)
						for Index, Value in Window["c"]:GetChildren() do
							if Value:IsA("Frame") and Value.Name == Player.Name then
								Value:Destroy()
							end
						end
					end
					--
					function Library:GetFlag(Player)
						if Player == nil then return end
						--
						for Index, Value in Window["c"]:GetChildren() do
							if Value:IsA("Frame") and Value.Name == Player.Name then
								local Flag = Value:FindFirstChild("Flags")
								--
								return Flag.Text
							end
						end
					end
					--
					function Library:SetFlag(Player, Flag)
						if Player == nil then return end
						--
						Window:UpdateFlagText(Player, Flag)
					end
					--
					function Window:UpdatePlayerInfo()
						if PlayerList.CurrentPlayer ~= nil and Players:FindFirstChild(PlayerList.CurrentPlayer["f"].Name) then
							local CurrentPlayer = Players:FindFirstChild(PlayerList.CurrentPlayer["f"].Name)
							local Humanoid = CurrentPlayer.Character:FindFirstChildWhichIsA("Humanoid")
							--
							Window["21"].Text = ("User ID : %s\nDisplay Name : %s\nName : %s\nAccount Age : %s Days\nHealth : %s/%s"):format(CurrentPlayer.UserId, CurrentPlayer.DisplayName ~= "" and CurrentPlayer.DisplayName or CurrentPlayer.Name, CurrentPlayer.Name, CurrentPlayer.AccountAge, Humanoid.Health, Humanoid.MaxHealth)
							--
							local PlayerIcon = Players:GetUserThumbnailAsync(CurrentPlayer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
							--
							Window["1d"].Visible = false
							Window["1e"].Image = PlayerIcon
						end
					end
					--
					function Window:UpdateFrameSizes(Size)
						for Index, Value in Window["c"]:GetChildren() do
							if Value:IsA("Frame") then
								Value.Size = Size
							end
						end
					end
					--
					function Window:UpdateCanvasSize()
						if Window["c"].AbsoluteCanvasSize.Y > Window["a"].AbsoluteSize.Y then
							Window:UpdateFrameSizes(UDim2.new(1, -2, 0, 20))
							Window["19"].Visible = true
						else
							Window:UpdateFrameSizes(UDim2.new(1, 1, 0, 20))
							Window["19"].Visible = false
						end
					end
				end
				--
				do -- Logic
					for _, Player in Players:GetPlayers() do
						Window:AddPlayer(Player)
					end
					--
					Library:Connection(Players.PlayerAdded, function(Player)
						Window:AddPlayer(Player)
                        --
                        Window:UpdateCanvasSize()
					end)
					--
					Library:Connection(Players.PlayerRemoving, function(Player)
						Window:RemovePlayer(Player)
                        --
                        Window:UpdateCanvasSize()
					end)
					--
					Window:UpdateCanvasSize()
				end
				--
				do -- Dragging
					Library:Draggable(Window["2"], Window["1dfb"], Window["bdf36"], Window["bdf3"], Window["3"])
					Library:Resizable(Window["2"], Window["2d"], UDim2.new(0, 500, 0, 366), UDim2.new(0, 632, 0, 498), Window["bdf36"], Window["3"], Window["bdf3"])
				end
				--
				return PlayerList
			end
			--
			if Options.ESPPreview then
				local Window = Tab.GUI
				--
				function Tab:ESPPreview(Options)
					Options = Library:Validate({
						Name = "ESP Preview",
						Flag = Library:NewFlag(),
						Callback = function() end,
					}, Options or {})
					--
					local ESPPreview = {
						Previewing = false,
						Connection = nil,
						HealthColor1 = Color3.fromRGB(0, 255, 0),
						HealthColor2 = Color3.fromRGB(255, 0, 0),
						CurrentTab = nil,
					}
					--
					do -- Rendering
						-- StarterGui.ESPPreview.MainFrame
						Window["2"] = Library:CreateObject("Frame", GUI["1"]);
						Window["2"]["BorderSizePixel"] = 0;
						Window["2"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
						Window["2"]["Size"] = UDim2.new(0, 327, 0, 398);
						Window["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["2"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
						Window["2"]["Name"] = Options.Name;
						Window["2"]["Visible"] = false;
						
						Library.Theme.Objects[Window["2"]] = {
							Color = "DarkContrast"
						}

						-- StarterGui.ESPPreview.MainFrame.DropShadowHolder
						Window["3"] = Library:CreateObject("Frame", GUI["1"]);
						Window["3"]["ZIndex"] = 0;
						Window["3"]["BorderSizePixel"] = 0;
						Window["3"]["BackgroundTransparency"] = 1;
						Window["3"]["Size"] = Window["2"].Size;
						Window["3"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
						Window["3"]["Name"] = [[DropShadowHolder]];
						Window["3"]["Visible"] = false;
						
						-- StarterGui.MainUI.MainFrameBack
						Window["bdf3"] = Library:CreateObject("Frame", GUI["1"]);
						Window["bdf3"]["BorderSizePixel"] = 0;
						Window["bdf3"]["BackgroundColor3"] = Library.Theme.Default.Outline;
						Window["bdf3"]["Size"] = Window["2"].Size + UDim2.new(0, 4, 0, 4);
						Window["bdf3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["bdf3"]["Position"] = Window["2"].Position + UDim2.new(0, -2, 0, -2);
						Window["bdf3"]["Name"] = [[MainFrameBack]];
						Window["bdf3"]["Visible"] = false;
						
						Library.Theme.Objects[Window["bdf3"]] = {
							Color = "Outline"
						}

						-- StarterGui.MainUI.MainFrameBack
						Window["bdf36"] = Library:CreateObject("Frame", GUI["1"]);
						Window["bdf36"]["BorderSizePixel"] = 0;
						Window["bdf36"]["BackgroundColor3"] = Library.Theme.Default.Outline;
						Window["bdf36"]["BackgroundTransparency"] = 1;
						Window["bdf36"]["Size"] = Window["2"].Size;
						Window["bdf36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["bdf36"]["Position"] = Window["2"].Position;
						Window["bdf36"]["Name"] = [[MainFrameBack]];
						Window["bdf36"]["Visible"] = false;

						-- StartingPositionerGui.MainUI.MainFrame.UIStroke
						Window["5fd"] = Library:CreateObject("UIStroke", Window["bdf36"]);
						Window["5fd"]["Color"] = Library.Theme.Default.Accent;
						Window["5fd"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						Window["5fd"]["Thickness"] = 1;

						Library.Theme.Objects[Window["5fd"]] = {
							Color = "Accent"
						}
						
						-- StarterGui.ESPPreview.MainFrame.DropShadowHolder.DropShadow
						Window["4"] = Library:CreateObject("ImageLabel", Window["3"]);
						Window["4"]["ZIndex"] = 0;
						Window["4"]["BorderSizePixel"] = 0;
						Window["4"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
						Window["4"]["ScaleType"] = Enum.ScaleType.Slice;
						Window["4"]["ImageColor3"] = Library.Theme.Default.Glow;
						Window["4"]["ImageTransparency"] = 0.5;
						Window["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
						Window["4"]["Image"] = [[rbxassetid://6015897843]];
						Window["4"]["Size"] = UDim2.new(1, 47, 1, 47);
						Window["4"]["Name"] = [[DropShadow]];
						Window["4"]["BackgroundTransparency"] = 1;
						Window["4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
						
						Library.Theme.Objects[Window["4"]] = {
							Color = "Glow"
						}

						-- StarterGui.ESPPreview.MainFrame.UIStroke
						Window["5"] = Library:CreateObject("UIStroke", Window["2"]);
						Window["5"]["Color"] = Library.Theme.Default.Accent;
						Window["5"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						Window["5"]["Thickness"] = 1;
						
						Library.Theme.Objects[Window["5"]] = {
							Color = "Accent"
						}

						-- StarterGui.ESPPreview.MainFrame.InnerFrame
						Window["6"] = Library:CreateObject("Frame", Window["2"]);
						Window["6"]["BorderSizePixel"] = 0;
						Window["6"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
						Window["6"]["Size"] = UDim2.new(1, -14, 1, -27);
						Window["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["6"]["Position"] = UDim2.new(0, 7, 0, 20);
						Window["6"]["Name"] = [[InnerFrame]];
						
						Library.Theme.Objects[Window["6"]] = {
							Color = "DarkContrast"
						}

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.UIStroke
						Window["7"] = Library:CreateObject("UIStroke", Window["6"]);
						Window["7"]["Color"] = Library.Theme.Default.Inline;
						Window["7"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						
						Library.Theme.Objects[Window["7"]] = {
							Color = "Inline"
						}

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation
						Window["8"] = Library:CreateObject("Frame", Window["6"]);
						Window["8"]["BorderSizePixel"] = 0;
						Window["8"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
						Window["8"]["Size"] = UDim2.new(1, -10, 1, -10);
						Window["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["8"]["Position"] = UDim2.new(0, 5, 0, 5);
						Window["8"]["Name"] = [[Navigation]];
						
						Library.Theme.Objects[Window["8"]] = {
							Color = "LightContrast"
						}

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.UIStroke
						Window["9"] = Library:CreateObject("UIStroke", Window["8"]);
						Window["9"]["Color"] = Library.Theme.Default.Inline;
						Window["9"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						
						Library.Theme.Objects[Window["9"]] = {
							Color = "Inline"
						}

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder
						Window["a"] = Library:CreateObject("Frame", Window["8"]);
						Window["a"]["BorderSizePixel"] = 0;
						Window["a"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
						Window["a"]["Size"] = UDim2.new(1, -10, 1, -40);
						Window["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["a"]["Position"] = UDim2.new(0, 5, 0, 5);
						Window["a"]["Name"] = [[Holder]];
						
						Library.Theme.Objects[Window["a"]] = {
							Color = "DarkContrast"
						}

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.UIStroke
						Window["b"] = Library:CreateObject("UIStroke", Window["a"]);
						Window["b"]["Color"] = Library.Theme.Default.Inline;
						Window["b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						
						Library.Theme.Objects[Window["b"]] = {
							Color = "Inline"
						}

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Box
						Window["e"] = Library:CreateObject("Frame", Window["a"]);
						Window["e"]["ZIndex"] = 2;
						Window["e"]["BorderSizePixel"] = 0;
						Window["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["e"]["BackgroundTransparency"] = 1;
						Window["e"]["Size"] = UDim2.new(0, 204, 0, 250);
						Window["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["e"]["Position"] = UDim2.new(0, 46, 0, 30);
						Window["e"]["Visible"] = true;
						Window["e"]["Name"] = [[Box]];
						
						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox.Fill
						Window["203d"] = Library:CreateObject("Frame", Window["e"]);
						Window["203d"]["ZIndex"] = 2;
						Window["203d"]["BorderSizePixel"] = 0;
						Window["203d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["203d"]["BackgroundTransparency"] = 0.800000011920929;
						Window["203d"]["Size"] = UDim2.new(1, -2, 1, -2);
						Window["203d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["203d"]["Position"] = UDim2.new(0, 1, 0, 1);
						Window["203d"]["Name"] = [[Fill]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Box.UIStroke
						Window["f"] = Library:CreateObject("UIStroke", Window["e"]);
						Window["f"]["Color"] = Color3.fromRGB(255, 255, 255);
						Window["f"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						Window["f"]["Name"] = [[BoxOutline]]

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.ChamsHolder
						Window["10"] = Library:CreateObject("Frame", Window["a"]);
						Window["10"]["BorderSizePixel"] = 0;
						Window["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["10"]["BackgroundTransparency"] = 1;
						Window["10"]["Size"] = UDim2.new(0, 204, 0, 250);
						Window["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["10"]["Position"] = UDim2.new(0, 46, 0, 30);
						Window["10"]["Name"] = [[Chams]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.ChamsHolder.Head
						Window["11"] = Library:CreateObject("Frame", Window["10"]);
						Window["11"]["ZIndex"] = 2;
						Window["11"]["BorderSizePixel"] = 0;
						Window["11"]["BackgroundColor3"] = Color3.fromRGB(80, 21, 158);
						Window["11"]["AnchorPoint"] = Vector2.new(0.5, 0);
						Window["11"]["BackgroundTransparency"] = 0.5;
						Window["11"]["Size"] = UDim2.new(0, 50, 0, 50);
						Window["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["11"]["Position"] = UDim2.new(0.5, 0, 0, 18);
						Window["11"]["Name"] = [[Head]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.ChamsHolder.Head.UIStroke
						Window["12"] = Library:CreateObject("UIStroke", Window["11"]);
						Window["12"]["Color"] = Color3.fromRGB(255, 255, 255);
						Window["12"]["Thickness"] = 2;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.ChamsHolder.Torso
						Window["13"] = Library:CreateObject("Frame", Window["10"]);
						Window["13"]["BorderSizePixel"] = 0;
						Window["13"]["BackgroundColor3"] = Color3.fromRGB(80, 21, 158);
						Window["13"]["AnchorPoint"] = Vector2.new(0.5, 0);
						Window["13"]["BackgroundTransparency"] = 0.5;
						Window["13"]["Size"] = UDim2.new(0, 150, 0, 80);
						Window["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["13"]["Position"] = UDim2.new(0.5, 0, 0, 70);
						Window["13"]["Name"] = [[Torso]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.ChamsHolder.Torso.UIStroke
						Window["14"] = Library:CreateObject("UIStroke", Window["13"]);
						Window["14"]["Color"] = Color3.fromRGB(255, 255, 255);
						Window["14"]["Thickness"] = 2;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.ChamsHolder.Legs
						Window["15"] = Library:CreateObject("Frame", Window["10"]);
						Window["15"]["BorderSizePixel"] = 0;
						Window["15"]["BackgroundColor3"] = Color3.fromRGB(80, 21, 158);
						Window["15"]["AnchorPoint"] = Vector2.new(0.5, 0);
						Window["15"]["BackgroundTransparency"] = 0.5;
						Window["15"]["Size"] = UDim2.new(0, 80, 0, 80);
						Window["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["15"]["Position"] = UDim2.new(0.5, 0, 0, 152);
						Window["15"]["Name"] = [[Legs]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.ChamsHolder.Legs.UIStroke
						Window["16"] = Library:CreateObject("UIStroke", Window["15"]);
						Window["16"]["Color"] = Color3.fromRGB(255, 255, 255);
						Window["16"]["Thickness"] = 2;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox
						Window["17"] = Library:CreateObject("Frame", Window["a"]);
						Window["17"]["BorderSizePixel"] = 0;
						Window["17"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["17"]["BackgroundTransparency"] = 1;
						Window["17"]["Size"] = UDim2.new(0, 204, 0, 250);
						Window["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["17"]["Position"] = UDim2.new(0, 46, 0, 30);
						Window["17"]["Name"] = [[CornerBox]];
						Window["17"]["Visible"] = false;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox.LeftTop
						Window["18"] = Library:CreateObject("Frame", Window["17"]);
						Window["18"]["BorderSizePixel"] = 0;
						Window["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["18"]["Size"] = UDim2.new(0, 1, 0, 70);
						Window["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["18"]["Name"] = [[LeftTop]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox.RightBottom
						Window["19"] = Library:CreateObject("Frame", Window["17"]);
						Window["19"]["BorderSizePixel"] = 0;
						Window["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["19"]["Size"] = UDim2.new(0, 1, 0, 70);
						Window["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["19"]["Position"] = UDim2.new(1, 0, 1, -70);
						Window["19"]["Name"] = [[RightBottom]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox.LeftBottom
						Window["1a"] = Library:CreateObject("Frame", Window["17"]);
						Window["1a"]["BorderSizePixel"] = 0;
						Window["1a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["1a"]["Size"] = UDim2.new(0, 1, 0, 70);
						Window["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1a"]["Position"] = UDim2.new(0, 0, 1, -70);
						Window["1a"]["Name"] = [[LeftBottom]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox.RightTop
						Window["1b"] = Library:CreateObject("Frame", Window["17"]);
						Window["1b"]["BorderSizePixel"] = 0;
						Window["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["1b"]["Size"] = UDim2.new(0, 1, 0, 70);
						Window["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1b"]["Position"] = UDim2.new(1, 0, 0, 0);
						Window["1b"]["Name"] = [[RightTop]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox.TopLeft
						Window["1c"] = Library:CreateObject("Frame", Window["17"]);
						Window["1c"]["BorderSizePixel"] = 0;
						Window["1c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["1c"]["Size"] = UDim2.new(0, 70, 0, 1);
						Window["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1c"]["Name"] = [[TopLeft]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox.BottomLeft
						Window["1d"] = Library:CreateObject("Frame", Window["17"]);
						Window["1d"]["BorderSizePixel"] = 0;
						Window["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["1d"]["Size"] = UDim2.new(0, 70, 0, 1);
						Window["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1d"]["Position"] = UDim2.new(0, 0, 1, 0);
						Window["1d"]["Name"] = [[BottomLeft]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox.BottomRight
						Window["1e"] = Library:CreateObject("Frame", Window["17"]);
						Window["1e"]["BorderSizePixel"] = 0;
						Window["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["1e"]["Size"] = UDim2.new(0, 70, 0, 1);
						Window["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1e"]["Position"] = UDim2.new(1, -70, 1, 0);
						Window["1e"]["Name"] = [[BottomRight]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox.TopRight
						Window["1f"] = Library:CreateObject("Frame", Window["17"]);
						Window["1f"]["BorderSizePixel"] = 0;
						Window["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["1f"]["Size"] = UDim2.new(0, 70, 0, 1);
						Window["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1f"]["Position"] = UDim2.new(1, -70, 0, 0);
						Window["1f"]["Name"] = [[TopRight]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.CornerBox.Fill
						Window["20"] = Library:CreateObject("Frame", Window["17"]);
						Window["20"]["ZIndex"] = 2;
						Window["20"]["BorderSizePixel"] = 0;
						Window["20"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["20"]["BackgroundTransparency"] = 0.800000011920929;
						Window["20"]["Size"] = UDim2.new(1, -2, 1, -2);
						Window["20"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["20"]["Position"] = UDim2.new(0, 1, 0, 1);
						Window["20"]["Name"] = [[Fill]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Distance
						Window["21"] = Library:CreateObject("Frame", Window["a"]);
						Window["21"]["BorderSizePixel"] = 0;
						Window["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["21"]["BackgroundTransparency"] = 1;
						Window["21"]["Size"] = UDim2.new(0, 204, 0, 20);
						Window["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["21"]["Position"] = UDim2.new(0, 46, 1, -38);  
						Window["21"]["Name"] = [[Distance]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Distance.DistanceText
						Window["22"] = Library:CreateObject("TextLabel", Window["21"]);
						Window["22"]["TextStrokeTransparency"] = 0;
						Window["22"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
						Window["22"]["BorderSizePixel"] = 0;
						Window["22"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["22"]["FontFace"] = Library.UI.Font;
						Window["22"]["TextSize"] = Library.UI.FontSize;
						Window["22"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
						Window["22"]["Size"] = UDim2.new(1, 0, 1, 0);
						Window["22"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["22"]["Text"] = [[50s]];
						Window["22"]["Name"] = [[Distance]];
						Window["22"]["BackgroundTransparency"] = 1;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Distance.DistanceText.UIPadding
						Window["23"] = Library:CreateObject("UIPadding", Window["22"]);


						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.HealthBar
						Window["24"] = Library:CreateObject("Frame", Window["a"]);
						Window["24"]["BorderSizePixel"] = 0;
						Window["24"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
						Window["24"]["Size"] = UDim2.new(0, 3, 0, 250);
						Window["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["24"]["Position"] = UDim2.new(0, 36, 0, 30);
						Window["24"]["Name"] = [[HealthBar]];
						
						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.HealthBar
						Window["24d"] = Library:CreateObject("Frame", Window["24"]);
						Window["24d"]["BorderSizePixel"] = 0;
						Window["24d"]["AnchorPoint"] = Vector2.new(0, 1);
						Window["24d"]["BackgroundColor3"] = ESPPreview.HealthColor1;
						Window["24d"]["Size"] = UDim2.new(1, 0, 1, 0);
						Window["24d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["24d"]["Position"] = UDim2.new(0, 0, 1, 0);
						Window["24d"]["Name"] = [[Bar]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.HealthBar.UIStroke
						Window["25"] = Library:CreateObject("UIStroke", Window["24"]);
						Window["25"]["Thickness"] = 2;
						Window["25"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Name
						Window["26"] = Library:CreateObject("Frame", Window["a"]);
						Window["26"]["BorderSizePixel"] = 0;
						Window["26"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["26"]["BackgroundTransparency"] = 1;
						Window["26"]["Size"] = UDim2.new(0, 204, 0, 25);
						Window["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["26"]["Position"] = UDim2.new(0, 46, 0, 5);
						Window["26"]["Name"] = [[Name]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Name.NameText
						Window["27"] = Library:CreateObject("TextLabel", Window["26"]);
						Window["27"]["TextStrokeTransparency"] = 0;
						Window["27"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
						Window["27"]["BorderSizePixel"] = 0;
						Window["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["27"]["FontFace"] = Library.UI.Font;
						Window["27"]["TextSize"] = Library.UI.FontSize;
						Window["27"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
						Window["27"]["Size"] = UDim2.new(1, 0, 1, 0);
						Window["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["27"]["Text"] = [[Username]];
						Window["27"]["Name"] = [[Name]];
						Window["27"]["BackgroundTransparency"] = 1;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Name.NameText.UIPadding
						Window["28"] = Library:CreateObject("UIPadding", Window["27"]);
						Window["28"]["PaddingBottom"] = UDim.new(0, 5);

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons
						Window["29"] = Library:CreateObject("Frame", Window["a"]);
						Window["29"]["BorderSizePixel"] = 0;
						Window["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["29"]["BackgroundTransparency"] = 1;
						Window["29"]["Size"] = UDim2.new(0, 204, 0, 250);
						Window["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["29"]["Position"] = UDim2.new(0, 46, 0, 30);
						Window["29"]["Name"] = [[Skeletons]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.Torso
						Window["2a"] = Library:CreateObject("Frame", Window["29"]);
						Window["2a"]["BorderSizePixel"] = 0;
						Window["2a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["2a"]["Size"] = UDim2.new(0, 1, 0, 100);
						Window["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["2a"]["Position"] = UDim2.new(0.5, 0, 0, 55);
						Window["2a"]["Name"] = [[Torso]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.Torso.UIStroke
						Window["2b"] = Library:CreateObject("UIStroke", Window["2a"]);
						Window["2b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.Shoulders
						Window["2c"] = Library:CreateObject("Frame", Window["29"]);
						Window["2c"]["BorderSizePixel"] = 0;
						Window["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["2c"]["Size"] = UDim2.new(0, 120, 0, 1);
						Window["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["2c"]["Position"] = UDim2.new(0, 42, 0, 80);
						Window["2c"]["Name"] = [[Shoulders]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.Shoulders.UIStroke
						Window["2d"] = Library:CreateObject("UIStroke", Window["2c"]);
						Window["2d"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.LeftArm
						Window["2e"] = Library:CreateObject("Frame", Window["29"]);
						Window["2e"]["BorderSizePixel"] = 0;
						Window["2e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["2e"]["Size"] = UDim2.new(0, 1, 0, 60);
						Window["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["2e"]["Position"] = UDim2.new(0, 41, 0, 80);
						Window["2e"]["Name"] = [[LeftArm]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.LeftArm.UIStroke
						Window["2f"] = Library:CreateObject("UIStroke", Window["2e"]);
						Window["2f"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.RightArm
						Window["30"] = Library:CreateObject("Frame", Window["29"]);
						Window["30"]["BorderSizePixel"] = 0;
						Window["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["30"]["Size"] = UDim2.new(0, 1, 0, 60);
						Window["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["30"]["Position"] = UDim2.new(0, 161, 0, 80);
						Window["30"]["Name"] = [[RightArm]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.RightArm.UIStroke
						Window["31"] = Library:CreateObject("UIStroke", Window["30"]);
						Window["31"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.Pelvis
						Window["32"] = Library:CreateObject("Frame", Window["29"]);
						Window["32"]["BorderSizePixel"] = 0;
						Window["32"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["32"]["Size"] = UDim2.new(0, 40, 0, 1);
						Window["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["32"]["Position"] = UDim2.new(0, 82, 0, 155);
						Window["32"]["Name"] = [[Pelvis]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.Pelvis.UIStroke
						Window["33"] = Library:CreateObject("UIStroke", Window["32"]);
						Window["33"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.LeftLeg
						Window["34"] = Library:CreateObject("Frame", Window["29"]);
						Window["34"]["BorderSizePixel"] = 0;
						Window["34"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["34"]["Size"] = UDim2.new(0, 1, 0, 65);
						Window["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["34"]["Position"] = UDim2.new(0, 81, 0, 155);
						Window["34"]["Name"] = [[LeftLeg]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.LeftLeg.UIStroke
						Window["35"] = Library:CreateObject("UIStroke", Window["34"]);
						Window["35"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.RightLeg
						Window["36"] = Library:CreateObject("Frame", Window["29"]);
						Window["36"]["BorderSizePixel"] = 0;
						Window["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["36"]["Size"] = UDim2.new(0, 1, 0, 65);
						Window["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["36"]["Position"] = UDim2.new(0, 122, 0, 155);
						Window["36"]["Name"] = [[RightLeg]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Skeletons.RightLeg.UIStroke
						Window["37"] = Library:CreateObject("UIStroke", Window["36"]);
						Window["37"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Weapon
						Window["38"] = Library:CreateObject("Frame", Window["a"]);
						Window["38"]["BorderSizePixel"] = 0;
						Window["38"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["38"]["BackgroundTransparency"] = 1;
						Window["38"]["Size"] = UDim2.new(0, 204, 0, 20);
						Window["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["38"]["Position"] = UDim2.new(0, 46, 1, -24);
						Window["38"]["Name"] = [[Weapon]];

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Weapon.WeaponText
						Window["39"] = Library:CreateObject("TextLabel", Window["38"]);
						Window["39"]["TextStrokeTransparency"] = 0;
						Window["39"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
						Window["39"]["BorderSizePixel"] = 0;
						Window["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["39"]["FontFace"] = Library.UI.Font;
						Window["39"]["TextSize"] = Library.UI.FontSize;
						Window["39"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
						Window["39"]["Size"] = UDim2.new(1, 0, 1, 0);
						Window["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["39"]["Text"] = [[Weapon]];
						Window["39"]["Name"] = [[Weapon]];
						Window["39"]["BackgroundTransparency"] = 1;

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.Weapon.WeaponText.UIPadding
						Window["3a"] = Library:CreateObject("UIPadding", Window["39"]);
						Window["3a"]["PaddingBottom"] = UDim.new(0, 5);
						Window["3a"]["PaddingLeft"] = UDim.new(0, 2);

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.FlagsText
						Window["3d"] = Library:CreateObject("TextLabel", Window["a"]);
						Window["3d"]["TextStrokeTransparency"] = 0;
						Window["3d"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
						Window["3d"]["BorderSizePixel"] = 0;
						Window["3d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["3d"]["FontFace"] = Library.UI.Font;
						Window["3d"]["TextSize"] = Library.UI.FontSize;
						Window["3d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
						Window["3d"]["Size"] = UDim2.new(0, 20, 0, 20);
						Window["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["3d"]["Text"] = [[Flags]];
						Window["3d"]["Name"] = [[Flags]];
						Window["3d"]["BackgroundTransparency"] = 1;
						Window["3d"]["Position"] = UDim2.new(1, -32, 0, 24);

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.FlagsText.UIStroke
						Window["3e"] = Library:CreateObject("UIStroke", Window["3d"]);


						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.HealthText
						Window["3f"] = Library:CreateObject("TextLabel", Window["a"]);
						Window["3f"]["TextStrokeTransparency"] = 0;
						Window["3f"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
						Window["3f"]["BorderSizePixel"] = 0;
						Window["3f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["3f"]["FontFace"] = Library.UI.Font;
						Window["3f"]["TextSize"] = Library.UI.FontSize;
						Window["3f"]["TextColor3"] = ESPPreview.HealthColor1;
						Window["3f"]["Size"] = UDim2.new(0, 20, 0, 20);
						Window["3f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["3f"]["Text"] = [[100]];
						Window["3f"]["Name"] = [[HealthText]];
						Window["3f"]["BackgroundTransparency"] = 1;
						Window["3f"]["Position"] = UDim2.new(0, 12, 0, 24);

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.Holder.HealthText.UIStroke
						Window["40"] = Library:CreateObject("UIStroke", Window["3f"]);


						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.ESPOption
						Window["41"] = Library:CreateObject("Frame", Window["8"]);
						Window["41"]["BorderSizePixel"] = 0;
						Window["41"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
						Window["41"]["Size"] = UDim2.new(1, -10, 0, 25);
						Window["41"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["41"]["Position"] = UDim2.new(0, 5, 1, -30);
						Window["41"]["Name"] = [[ESPOption]];
						
						Library.Theme.Objects[Window["41"]] = {
							Color = "DarkContrast"
						}

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.ESPOption.UIStroke
						Window["42"] = Library:CreateObject("UIStroke", Window["41"]);
						Window["42"]["Color"] = Library.Theme.Default.Inline;
						Window["42"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						
						Library.Theme.Objects[Window["42"]] = {
							Color = "Inline"
						}

						-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.ESPOption.UIListLayout
						Window["47"] = Library:CreateObject("UIListLayout", Window["41"]);
						Window["47"]["FillDirection"] = Enum.FillDirection.Horizontal;
						Window["47"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

						-- StarterGui.ESPPreview.MainFrame.TopBar
						Window["50"] = Library:CreateObject("Frame", Window["2"]);
						Window["50"]["BorderSizePixel"] = 0;
						Window["50"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["50"]["BackgroundTransparency"] = 1;
						Window["50"]["Size"] = UDim2.new(1, 0, 0, 20);
						Window["50"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["50"]["Name"] = [[TopBar]];
						
						-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.TextButton
						Window["1dfb"] = Library:CreateObject("TextButton",Window["50"]);
						Window["1dfb"]["BorderSizePixel"] = 0;
						Window["1dfb"]["TextTransparency"] = 1;
						Window["1dfb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["1dfb"]["TextSize"] = Library.UI.FontSize;
						Window["1dfb"]["FontFace"] = Library.UI.Font;
						Window["1dfb"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1dfb"]["Size"] = UDim2.new(1, 0, 1, 0);
						Window["1dfb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1dfb"]["BackgroundTransparency"] = 1;

						-- StarterGui.ESPPreview.MainFrame.TopBar.TextLabel
						Window["51"] = Library:CreateObject("TextLabel", Window["50"]);
						Window["51"]["TextStrokeTransparency"] = 0;
						Window["51"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
						Window["51"]["BorderSizePixel"] = 0;
						Window["51"]["BackgroundColor3"] = Library.Theme.Default.TextColor;
						Window["51"]["TextXAlignment"] = Enum.TextXAlignment.Left;
						Window["51"]["FontFace"] = Library.UI.Font;
						Window["51"]["TextSize"] = Library.UI.FontSize;
						Window["51"]["TextColor3"] = Library.Theme.Default.TextColor;
						Window["51"]["Size"] = UDim2.new(1, 0, 1, 0);
						Window["51"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["51"]["Text"] = Options.Name;
						Window["51"]["BackgroundTransparency"] = 1;
						
						Library.Theme.Objects[Window["51"]] = {
							Color = "TextColor"
						}
						
						Library.Theme.Objects[Window["51"]] = {
							Color = "TextBorder"
						}

						-- StarterGui.ESPPreview.MainFrame.TopBar.TextLabel.UIPadding
						Window["52"] = Library:CreateObject("UIPadding", Window["51"]);
						Window["52"]["PaddingLeft"] = UDim.new(0, 6);

						-- StarterGui.Settings.MainFrame.TopBar.CloseButton
						Window["19d"] = Library:CreateObject("ImageButton", Window["50"]);
						Window["19d"]["BorderSizePixel"] = 0;
						Window["19d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["19d"]["Image"] = [[rbxassetid://18491059927]];
						Window["19d"]["Size"] = UDim2.new(0, 10, 1, -10);
						Window["19d"]["Name"] = [[CloseButton]];
						Window["19d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["19d"]["Position"] = UDim2.new(1, -15, 0, 5);
						Window["19d"]["BackgroundTransparency"] = 1;
						
						Library.Theme.Objects[Window["19d"]] = {
							ImageColor3 = "ImageColor"
						}
						
						-- StarterGui.Settings.MainFrame.TopBar.CloseButton
						Window["19df"] = Library:CreateObject("ImageButton", Window["50"]);
						Window["19df"]["BorderSizePixel"] = 0;
						Window["19df"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["19df"]["Image"] = [[rbxassetid://18522653411]];
						Window["19df"]["Size"] = UDim2.new(0, 10, 1, -10);
						Window["19df"]["Name"] = [[CloseButton]];
						Window["19df"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["19df"]["Position"] = UDim2.new(1, -30, 0, 5);
						Window["19df"]["BackgroundTransparency"] = 1;
						
						Library.Theme.Objects[Window["19df"]] = {
							ImageColor3 = "ImageColor"
						}
					end
					--
					do -- Functions
						local HealthFade = 0
						-- // preview handler // UPDATE
						function Library:ChangePreview(Object, Property, State, Object2)
							for _, Value in Window["a"]:GetChildren() do
								if Value.Name == tostring(Object) then
									if Object == "CornerBox" or Object == "Chams" or Object == "Skeletons" then
										for Index, Value2 in Value:GetChildren() do
											if Object == "Chams" then
												if Object2 == "Outer" then
													local Outline = Value2:FindFirstChildWhichIsA("UIStroke")
													--
													Outline[Property] = State
												else
													Value2[Property] = State
												end
											else
												if Object == "CornerBox" then
													Window["e"].Visible = false
													Window["17"].Visible = true
													--
													if Property == "Color" then
														Value2["BackgroundColor3"] = State
													elseif Property == "Transparency" then
														Value2["BackgroundTransparency"] = State
													end
													--
													if Object2 and Object2 == "Fill" then
														Value:FindFirstChild("Fill")[Property] = State
													end
												else
													Value2[Property] = State
												end
											end
										end
									else
										if Object == "HealthBar" then
											if Object2 and Object2 == "Full" then
												ESPPreview.HealthColor1 = State
												--
												if not ESPPreview.Previewing then
													Value:FindFirstChild("Bar")[Property] = State
													Window["3f"].TextColor3 = State
												end
											elseif Object2 and Object2 == "Empty" then
												ESPPreview.HealthColor2 = State
											elseif not Object2 then
												Value[Property] = State
												--
												Window["3f"].Position = State == true and UDim2.new(0, 12, 0, 24) or UDim2.new(0, 23, 0, 24)
											end
										elseif Object == "HealthText" then
											Value[Property] = State
										elseif Object == "Box" then
											Window["17"].Visible = false
											Window["e"].Visible = true
											--
											if Object2 and Object2 == "Fill" then
												Value:FindFirstChild("Fill")[Property] = State
											else
												local Box = Property == "Visible" and Value or Value:FindFirstChild("BoxOutline")
												--
												Box[Property] = State
											end
										elseif Object == "Name" or Object == "Weapon" or Object == "Distance" then
											local Object3 = (Property == "TextColor3" or Property == "TextTransparency") and Value:FindFirstChild(Object) or Value
											--
											Object3[Property] = State
											--
											if Object == "Weapon" and Property == "Visible" then
												Window["21"].Position = State == true and UDim2.new(0, 46, 1, -24) or UDim2.new(0, 46, 1, -38)
											end
										else
											if Value then
												Value[Property] = State
											end
										end
									end
								end
							end
						end
						--
						function Library:VisualHealthBar(State, HealthColor1, HealthColor2, Speed)
							if State then
								HealthFade = HealthFade + Speed
								--
								local Smoothened = (math.acos(math.cos(HealthFade * math.pi)) / math.pi)
								local HealthColor = Library:ColorLerp(Smoothened, HealthColor1, HealthColor2)
								--
								Window["3f"].Text = math.round(Smoothened * 100)
								Window["3f"].TextColor3 = HealthColor
								Window["24d"].BackgroundColor3 = HealthColor
								Window["24d"].Size = UDim2.new(1, 0, Smoothened, 0)
							else
								Window["3f"].Text = "100"
								Window["3f"].TextColor3 = HealthColor1
							end
						end
						--
						function Library:ResetBar(HealthColor)
							Window["3f"].Text = "100"
							Window["3f"].TextColor3 = HealthColor
							Window["24d"].BackgroundColor3 = HealthColor
							Window["24d"].Size = UDim2.new(1, 0, 1, 0)
							--
							HealthFade = 0
						end
					end
					--
					do -- Connections
						Library:Connection(Window["19d"].MouseButton1Click, function()
							Tab:Toggle()
						end)
						--
						Library:Connection(Window["19df"].MouseButton1Click, function()
							ESPPreview.Previewing = not ESPPreview.Previewing
							--
							if ESPPreview.Previewing then
								Window["19df"].Image = "rbxassetid://18522655409"
								--
								if not ESPPreview.Connection then
									ESPPreview.Connection = Library:Connection(RunService.Heartbeat, function()
										Library:VisualHealthBar(true, ESPPreview.HealthColor1, ESPPreview.HealthColor2, 0.007)
									end)
								end
							else
								Window["19df"].Image = "rbxassetid://18522653411"
								--
								if ESPPreview.Connection then ESPPreview.Connection:Disconnect() Library:ResetBar(ESPPreview.HealthColor1, Color3.fromRGB(0, 136, 194)) ESPPreview.Connection = nil end
							end
						end)
					end
					--
					do -- Functions
						function Window:AddESPTab(List)
							for Index, Value in List do
								local Item = {
									Active = false,
									Hovering = false,
								}
								--
								do -- Rendering
									-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.ESPOption.Local Player
									Item["43"] = Library:CreateObject("Frame", Window["41"]);
									Item["43"]["BorderSizePixel"] = 0;
									Item["43"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
									Item["43"]["BackgroundTransparency"] = 1;
									Item["43"]["Size"] = UDim2.new(1 / #List, 0, 1, 0);
									Item["43"]["Position"] = UDim2.new((Index - 1) * 1 / #List, 0, 0, 0);
									Item["43"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									Item["43"]["Name"] = Value;

									-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.ESPOption.Local Player.UIStroke
									Item["44"] = Library:CreateObject("UIStroke", Item["43"]);
									Item["44"]["Color"] = Library.Theme.Default.Inline;
									Item["44"]["Thickness"] = 0.5;
									Item["44"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
									
									Library.Theme.Objects[Item["44"]] = {
										Color = "Inline"
									}

									-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.ESPOption.Local Player.TextLabel
									Item["45"] = Library:CreateObject("TextLabel", Item["43"]);
									Item["45"]["TextStrokeTransparency"] = 0;
									Item["45"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
									Item["45"]["BorderSizePixel"] = 0;
									Item["45"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
									Item["45"]["FontFace"] = Library.UI.Font;
									Item["45"]["TextSize"] = Library.UI.FontSize;
									Item["45"]["TextColor3"] = Library.Theme.Default.TextDark;
									Item["45"]["Size"] = UDim2.new(1, 0, 1, 0);
									Item["45"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									Item["45"]["Text"] = Value;
									Item["45"]["BackgroundTransparency"] = 1;
									
									Library.Theme.Objects[Item["45"]] = {
										TextStrokeColor3 = "TextBorder",
										TextColor3 = "TextDark"
									}

									-- StarterGui.ESPPreview.MainFrame.InnerFrame.Navigation.ESPOption.Local Player.TextButton
									Item["46"] = Library:CreateObject("TextButton", Item["43"]);
									Item["46"]["BorderSizePixel"] = 0;
									Item["46"]["TextTransparency"] = 1;
									Item["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
									Item["46"]["TextSize"] = Library.UI.FontSize;
									Item["46"]["FontFace"] = Library.UI.Font;
									Item["46"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
									Item["46"]["Size"] = UDim2.new(1, 0, 1, 0);
									Item["46"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
									Item["46"]["BackgroundTransparency"] = 1;
								end
								--
								do -- Functions
									function Item:Get()
										return Value
									end
									--
									function Item:Set(State)
										if Value == State then
											Item:Activate()
										end
									end
									--
									function Item:Activate()
										if not Item.Active then
											if ESPPreview.CurrentTab ~= nil then
												ESPPreview.CurrentTab:Deactivate()
											end
											--
											Item.Active = true
											--
											Library:TweenObject(Item["45"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
											Library.Flags[Options.Flag] = Item
											Options.Callback(Value)
											--
											Library.Theme.Objects[Item["45"]] = {
												TextColor3 = "Accent"
											}

											--
											ESPPreview.CurrentTab = Item
										end
									end
									--
									function Item:Deactivate()
										if Item.Active then
											Item.Active = false
											Item.Hovering = false
											--
											Library:TweenObject(Item["45"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
											--
											Library.Theme.Objects[Item["45"]] = {
												TextColor3 = "TextDark"
											}
										end
									end
								end
								--
								do -- Connections
									Library:Connection(Item["43"].MouseEnter, function()
										if not Item.Active then
											Item.Hovering = true
											Library:TweenObject(Item["45"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
											
											Library.Theme.Objects[Item["45"]] = {
												Color = "TextColor"
											}
										end
									end)
									--
									Library:Connection(Item["43"].MouseLeave, function()
										if not Item.Active then
											Item.Hovering = false
											Library:TweenObject(Item["45"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
											
											Library.Theme.Objects[Item["45"]] = {
												Color = "TextDark"
											}
										end
									end)
									--
									Library:Connection(Item["46"].MouseButton1Click, function()
										Item:Activate()
									end)
								end
								--
								if ESPPreview.CurrentTab == nil then
									Item:Activate()
								end
							end
						end
						--
						Window:AddESPTab({"Local Player", "Friendlies", "Enemies"})
					end
					--
					do -- Dragging
						Library:Draggable(Window["2"], Window["1dfb"], Window["bdf36"], Window["bdf3"], Window["3"])
					end
				end
			end
			--
			if Options.HitPoints then
				local HitParts = {
					Type = "R6",
					List = {},
				}
				--
				local Window = Tab.GUI
				--
				do -- Rendering
					-- StarterGui.HitPoints.MainFrame
					Window["2"] = Library:CreateObject("Frame", GUI["1"]);
					Window["2"]["BorderSizePixel"] = 0;
					Window["2"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["2"]["Size"] = UDim2.new(0, 268, 0, 326);
					Window["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
					Window["2"]["Name"] = [[Hit Points]];
					Window["2"]["Visible"] = false;
					
					Library.Theme.Objects[Window["2"]] = {
						Color = "DarkContrast"
					}
					
					-- StarterGui.MainUI.MainFrameBack
					Window["bdf3"] = Library:CreateObject("Frame", GUI["1"]);
					Window["bdf3"]["BorderSizePixel"] = 0;
					Window["bdf3"]["BackgroundColor3"] = Library.Theme.Default.Outline;
					Window["bdf3"]["Size"] = Window["2"].Size + UDim2.new(0, 4, 0, 4);
					Window["bdf3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["bdf3"]["Position"] = Window["2"].Position + UDim2.new(0, -2, 0, -2);
					Window["bdf3"]["Name"] = [[MainFrameBack]];
					Window["bdf3"]["Visible"] = false;
	
					Library.Theme.Objects[Window["bdf3"]] = {
						Color = "Outline"
					}

					-- StarterGui.MainUI.MainFrameBack
					Window["bdf36"] = Library:CreateObject("Frame", GUI["1"]);
					Window["bdf36"]["BorderSizePixel"] = 0;
					Window["bdf36"]["BackgroundColor3"] = Library.Theme.Default.Outline;
					Window["bdf36"]["BackgroundTransparency"] = 1;
					Window["bdf36"]["Size"] = Window["2"].Size;
					Window["bdf36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["bdf36"]["Position"] = Window["2"].Position;
					Window["bdf36"]["Name"] = [[MainFrameBack]];
					Window["bdf36"]["Visible"] = false;

					-- StartingPositionerGui.MainUI.MainFrame.UIStroke
					Window["5fd"] = Library:CreateObject("UIStroke", Window["bdf36"]);
					Window["5fd"]["Color"] = Library.Theme.Default.Accent;
					Window["5fd"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					Window["5fd"]["Thickness"] = 1;

					Library.Theme.Objects[Window["5fd"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.DropShadowHolder
					Window["3"] = Library:CreateObject("Frame", GUI["1"]);
					Window["3"]["ZIndex"] = 0;
					Window["3"]["BorderSizePixel"] = 0;
					Window["3"]["BackgroundTransparency"] = 1;
					Window["3"]["Size"] = Window["2"].Size;
					Window["3"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
					Window["3"]["Name"] = [[DropShadowHolder]];
					Window["3"]["Visible"] = false;
	
					-- StarterGui.HitPoints.MainFrame.DropShadowHolder.DropShadow
					Window["4"] = Library:CreateObject("ImageLabel", Window["3"]);
					Window["4"]["ZIndex"] = 0;
					Window["4"]["BorderSizePixel"] = 0;
					Window["4"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
					Window["4"]["ScaleType"] = Enum.ScaleType.Slice;
					Window["4"]["ImageColor3"] = Library.Theme.Default.Glow;
					Window["4"]["ImageTransparency"] = 0.5;
					Window["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
					Window["4"]["Image"] = [[rbxassetid://6015897843]];
					Window["4"]["Size"] = UDim2.new(1, 47, 1, 47);
					Window["4"]["Name"] = [[DropShadow]];
					Window["4"]["BackgroundTransparency"] = 1;
					Window["4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
					
					Library.Theme.Objects[Window["4"]] = {
						Color = "Glow"
					}
	
					-- StarterGui.HitPoints.MainFrame.UIStroke
					Window["5"] = Library:CreateObject("UIStroke", Window["2"]);
					Window["5"]["Color"] = Library.Theme.Default.Accent;
					Window["5"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					Window["5"]["Thickness"] = 1;
					
					Library.Theme.Objects[Window["5"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame
					Window["6"] = Library:CreateObject("Frame", Window["2"]);
					Window["6"]["BorderSizePixel"] = 0;
					Window["6"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["6"]["Size"] = UDim2.new(1, -14, 1, -27);
					Window["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["6"]["Position"] = UDim2.new(0, 7, 0, 20);
					Window["6"]["Name"] = [[InnerFrame]];
					
					Library.Theme.Objects[Window["6"]] = {
						Color = "DarkContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.UIStroke
					Window["7"] = Library:CreateObject("UIStroke", Window["6"]);
					Window["7"]["Color"] = Library.Theme.Default.Inline;
					Window["7"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["7"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation
					Window["8"] = Library:CreateObject("Frame", Window["6"]);
					Window["8"]["BorderSizePixel"] = 0;
					Window["8"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["8"]["Size"] = UDim2.new(1, -10, 1, -10);
					Window["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["8"]["Name"] = [[Navigation]];
					
					Library.Theme.Objects[Window["8"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.UIStroke
					Window["9"] = Library:CreateObject("UIStroke", Window["8"]);
					Window["9"]["Color"] = Library.Theme.Default.Inline;
					Window["9"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["9"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder
					Window["a"] = Library:CreateObject("Frame", Window["8"]);
					Window["a"]["BorderSizePixel"] = 0;
					Window["a"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["a"]["Size"] = UDim2.new(1, -10, 1, -10);
					Window["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["a"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["a"]["Name"] = [[Holder]];
					
					Library.Theme.Objects[Window["a"]] = {
						Color = "DarkContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.UIStroke
					Window["b"] = Library:CreateObject("UIStroke", Window["a"]);
					Window["b"]["Color"] = Library.Theme.Default.Inline;
					Window["b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["b"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts
					Window["c"] = Instance.new("Frame", Window["a"]);
					Window["c"]["BorderSizePixel"] = 0;
					Window["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["c"]["BackgroundTransparency"] = 1;
					Window["c"]["Size"] = UDim2.new(0, 204, 0, 250);
					Window["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["c"]["Position"] = UDim2.new(0, 15, 0, 10);
					Window["c"]["Name"] = [[R15BodyParts]];
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.Head
					Window["d"] = Instance.new("Frame", Window["c"]);
					Window["d"]["ZIndex"] = 2;
					Window["d"]["BorderSizePixel"] = 0;
					Window["d"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["d"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["d"]["Size"] = UDim2.new(0, 50, 0, 50);
					Window["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["d"]["Position"] = UDim2.new(0.5, 0, 0, 17);
					Window["d"]["Name"] = [[Head]];
					
					Library.Theme.Objects[Window["d"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.Head.TextButton
					Window["e"] = Instance.new("TextButton", Window["d"]);
					Window["e"]["BorderSizePixel"] = 0;
					Window["e"]["TextTransparency"] = 1;
					Window["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["e"]["TextSize"] = Library.UI.FontSize;
					Window["e"]["FontFace"] = Library.UI.Font;
					Window["e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["e"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["e"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.Head.UIStroke
					Window["f"] = Instance.new("UIStroke", Window["d"]);
					Window["f"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["f"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.UpperTorso
					Window["10"] = Instance.new("Frame", Window["c"]);
					Window["10"]["BorderSizePixel"] = 0;
					Window["10"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["10"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["10"]["Size"] = UDim2.new(0, 80, 0, 45);
					Window["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["10"]["Position"] = UDim2.new(0.5, 0, 0, 68);
					Window["10"]["Name"] = [[UpperTorso]];
					
					Library.Theme.Objects[Window["10"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.UpperTorso.TextButton
					Window["11"] = Instance.new("TextButton", Window["10"]);
					Window["11"]["BorderSizePixel"] = 0;
					Window["11"]["TextTransparency"] = 1;
					Window["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["11"]["TextSize"] = Library.UI.FontSize;
					Window["11"]["FontFace"] = Library.UI.Font;
					Window["11"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["11"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["11"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.UpperTorso.UIStroke
					Window["12"] = Instance.new("UIStroke", Window["10"]);
					Window["12"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["12"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftUpperLeg
					Window["13"] = Instance.new("Frame", Window["c"]);
					Window["13"]["BorderSizePixel"] = 0;
					Window["13"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["13"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["13"]["Size"] = UDim2.new(0, 39, 0, 55);
					Window["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["13"]["Position"] = UDim2.new(0, 81, 0, 160);
					Window["13"]["Name"] = [[LeftUpperLeg]];
					
					Library.Theme.Objects[Window["13"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftUpperLeg.TextButton
					Window["14"] = Instance.new("TextButton", Window["13"]);
					Window["14"]["BorderSizePixel"] = 0;
					Window["14"]["TextTransparency"] = 1;
					Window["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["14"]["TextSize"] = Library.UI.FontSize;
					Window["14"]["FontFace"] = Library.UI.Font;
					Window["14"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["14"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["14"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftUpperLeg.UIStroke
					Window["15"] = Instance.new("UIStroke", Window["13"]);
					Window["15"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["15"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.HumanoidRootPart
					Window["16"] = Instance.new("Frame", Window["c"]);
					Window["16"]["ZIndex"] = 2;
					Window["16"]["BorderSizePixel"] = 0;
					Window["16"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["16"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["16"]["Size"] = UDim2.new(0, 25, 0, 21);
					Window["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["16"]["Position"] = UDim2.new(0.5, 0, 0, 104);
					Window["16"]["Name"] = [[HumanoidRootPart]];
					
					Library.Theme.Objects[Window["16"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.HumanoidRootPart.TextButton
					Window["17"] = Instance.new("TextButton", Window["16"]);
					Window["17"]["BorderSizePixel"] = 0;
					Window["17"]["TextTransparency"] = 1;
					Window["17"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["17"]["TextSize"] = Library.UI.FontSize;
					Window["17"]["FontFace"] = Library.UI.Font;
					Window["17"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["17"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["17"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.HumanoidRootPart.UIStroke
					Window["18"] = Instance.new("UIStroke", Window["16"]);
					Window["18"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["18"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LowerTorso
					Window["19"] = Instance.new("Frame", Window["c"]);
					Window["19"]["BorderSizePixel"] = 0;
					Window["19"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["19"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["19"]["Size"] = UDim2.new(0, 80, 0, 45);
					Window["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["19"]["Position"] = UDim2.new(0.5, 0, 0, 114);
					Window["19"]["Name"] = [[LowerTorso]];
					
					Library.Theme.Objects[Window["19"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LowerTorso.TextButton
					Window["1a"] = Instance.new("TextButton", Window["19"]);
					Window["1a"]["BorderSizePixel"] = 0;
					Window["1a"]["TextTransparency"] = 1;
					Window["1a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["1a"]["TextSize"] = Library.UI.FontSize;
					Window["1a"]["FontFace"] = Library.UI.Font;
					Window["1a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1a"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1a"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LowerTorso.UIStroke
					Window["1b"] = Instance.new("UIStroke", Window["19"]);
					Window["1b"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["1b"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightUpperLeg
					Window["1c"] = Instance.new("Frame", Window["c"]);
					Window["1c"]["BorderSizePixel"] = 0;
					Window["1c"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["1c"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["1c"]["Size"] = UDim2.new(0, 40, 0, 55);
					Window["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1c"]["Position"] = UDim2.new(0, 122, 0, 160);
					Window["1c"]["Name"] = [[RightUpperLeg]];
					
					Library.Theme.Objects[Window["1c"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightUpperLeg.TextButton
					Window["1d"] = Instance.new("TextButton", Window["1c"]);
					Window["1d"]["BorderSizePixel"] = 0;
					Window["1d"]["TextTransparency"] = 1;
					Window["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["1d"]["TextSize"] = Library.UI.FontSize;
					Window["1d"]["FontFace"] = Library.UI.Font;
					Window["1d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1d"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1d"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightUpperLeg.UIStroke
					Window["1e"] = Instance.new("UIStroke", Window["1c"]);
					Window["1e"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["1e"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightUpperArm
					Window["1f"] = Instance.new("Frame", Window["c"]);
					Window["1f"]["BorderSizePixel"] = 0;
					Window["1f"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["1f"]["Size"] = UDim2.new(0, 40, 0, 30);
					Window["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1f"]["Position"] = UDim2.new(1, -61, 0, 68);
					Window["1f"]["Name"] = [[RightUpperArm]];
					
					Library.Theme.Objects[Window["1f"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightUpperArm.TextButton
					Window["20"] = Instance.new("TextButton", Window["1f"]);
					Window["20"]["BorderSizePixel"] = 0;
					Window["20"]["TextTransparency"] = 1;
					Window["20"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["20"]["TextSize"] = Library.UI.FontSize;
					Window["20"]["FontFace"] = Library.UI.Font;
					Window["20"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["20"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["20"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["20"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightUpperArm.UIStroke
					Window["21"] = Instance.new("UIStroke", Window["1f"]);
					Window["21"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["21"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftLowerArm
					Window["22"] = Instance.new("Frame", Window["c"]);
					Window["22"]["BorderSizePixel"] = 0;
					Window["22"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["22"]["Size"] = UDim2.new(0, 40, 0, 45);
					Window["22"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["22"]["Position"] = UDim2.new(0, 21, 0, 99);
					Window["22"]["Name"] = [[LeftLowerArm]];
					
					Library.Theme.Objects[Window["22"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftLowerArm.TextButton
					Window["23"] = Instance.new("TextButton", Window["22"]);
					Window["23"]["BorderSizePixel"] = 0;
					Window["23"]["TextTransparency"] = 1;
					Window["23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["23"]["TextSize"] = Library.UI.FontSize;
					Window["23"]["FontFace"] = Library.UI.Font;
					Window["23"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["23"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["23"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftLowerArm.UIStroke
					Window["24"] = Instance.new("UIStroke", Window["22"]);
					Window["24"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["24"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightHand
					Window["25"] = Instance.new("Frame", Window["c"]);
					Window["25"]["BorderSizePixel"] = 0;
					Window["25"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["25"]["Size"] = UDim2.new(0, 40, 0, 13);
					Window["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["25"]["Position"] = UDim2.new(1, -61, 0, 144);
					Window["25"]["Name"] = [[RightHand]];
					
					Library.Theme.Objects[Window["25"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightHand.TextButton
					Window["26"] = Instance.new("TextButton", Window["25"]);
					Window["26"]["BorderSizePixel"] = 0;
					Window["26"]["TextTransparency"] = 1;
					Window["26"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["26"]["TextSize"] = Library.UI.FontSize;
					Window["26"]["FontFace"] = Library.UI.Font;
					Window["26"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["26"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["26"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightHand.UIStroke
					Window["27"] = Instance.new("UIStroke", Window["25"]);
					Window["27"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["27"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightLowerArm
					Window["28"] = Instance.new("Frame", Window["c"]);
					Window["28"]["BorderSizePixel"] = 0;
					Window["28"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["28"]["Size"] = UDim2.new(0, 40, 0, 45);
					Window["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["28"]["Position"] = UDim2.new(1, -61, 0, 99);
					Window["28"]["Name"] = [[RightLowerArm]];
					
					Library.Theme.Objects[Window["28"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightLowerArm.TextButton
					Window["29"] = Instance.new("TextButton", Window["28"]);
					Window["29"]["BorderSizePixel"] = 0;
					Window["29"]["TextTransparency"] = 1;
					Window["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["29"]["TextSize"] = Library.UI.FontSize;
					Window["29"]["FontFace"] = Library.UI.Font;
					Window["29"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["29"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["29"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightLowerArm.UIStroke
					Window["2a"] = Instance.new("UIStroke", Window["28"]);
					Window["2a"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["2a"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftUpperArm
					Window["2b"] = Instance.new("Frame", Window["c"]);
					Window["2b"]["BorderSizePixel"] = 0;
					Window["2b"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["2b"]["Size"] = UDim2.new(0, 40, 0, 30);
					Window["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2b"]["Position"] = UDim2.new(0, 21, 0, 68);
					Window["2b"]["Name"] = [[LeftUpperArm]];
					
					Library.Theme.Objects[Window["2b"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftUpperArm.TextButton
					Window["2c"] = Instance.new("TextButton", Window["2b"]);
					Window["2c"]["BorderSizePixel"] = 0;
					Window["2c"]["TextTransparency"] = 1;
					Window["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["2c"]["TextSize"] = Library.UI.FontSize;
					Window["2c"]["FontFace"] = Library.UI.Font;
					Window["2c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2c"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2c"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftUpperArm.UIStroke
					Window["2d"] = Instance.new("UIStroke", Window["2b"]);
					Window["2d"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["2d"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftHand
					Window["2e"] = Instance.new("Frame", Window["c"]);
					Window["2e"]["BorderSizePixel"] = 0;
					Window["2e"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["2e"]["Size"] = UDim2.new(0, 40, 0, 13);
					Window["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2e"]["Position"] = UDim2.new(0, 21, 0, 144);
					Window["2e"]["Name"] = [[LeftHand]];
					
					Library.Theme.Objects[Window["2e"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftHand.TextButton
					Window["2f"] = Instance.new("TextButton", Window["2e"]);
					Window["2f"]["BorderSizePixel"] = 0;
					Window["2f"]["TextTransparency"] = 1;
					Window["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["2f"]["TextSize"] = Library.UI.FontSize;
					Window["2f"]["FontFace"] = Library.UI.Font;
					Window["2f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2f"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["2f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2f"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftHand.UIStroke
					Window["30"] = Instance.new("UIStroke", Window["2e"]);
					Window["30"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["30"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftLowerLeg
					Window["31"] = Instance.new("Frame", Window["c"]);
					Window["31"]["BorderSizePixel"] = 0;
					Window["31"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["31"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["31"]["Size"] = UDim2.new(0, 39, 0, 20);
					Window["31"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["31"]["Position"] = UDim2.new(0, 81, 0, 215);
					Window["31"]["Name"] = [[LeftLowerLeg]];
					
					Library.Theme.Objects[Window["31"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftLowerLeg.TextButton
					Window["32"] = Instance.new("TextButton", Window["31"]);
					Window["32"]["BorderSizePixel"] = 0;
					Window["32"]["TextTransparency"] = 1;
					Window["32"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["32"]["TextSize"] = Library.UI.FontSize;
					Window["32"]["FontFace"] = Library.UI.Font;
					Window["32"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["32"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["32"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftLowerLeg.UIStroke
					Window["33"] = Instance.new("UIStroke", Window["31"]);
					Window["33"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["33"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftFoot
					Window["34"] = Instance.new("Frame", Window["c"]);
					Window["34"]["BorderSizePixel"] = 0;
					Window["34"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["34"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["34"]["Size"] = UDim2.new(0, 39, 0, 10);
					Window["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["34"]["Position"] = UDim2.new(0, 81, 0, 235);
					Window["34"]["Name"] = [[LeftFoot]];
					
					Library.Theme.Objects[Window["34"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftFoot.TextButton
					Window["35"] = Instance.new("TextButton", Window["34"]);
					Window["35"]["BorderSizePixel"] = 0;
					Window["35"]["TextTransparency"] = 1;
					Window["35"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["35"]["TextSize"] = Library.UI.FontSize;
					Window["35"]["FontFace"] = Library.UI.Font;
					Window["35"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["35"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["35"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["35"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.LeftFoot.UIStroke
					Window["36"] = Instance.new("UIStroke", Window["34"]);
					Window["36"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["36"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightLowerLeg
					Window["37"] = Instance.new("Frame", Window["c"]);
					Window["37"]["BorderSizePixel"] = 0;
					Window["37"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["37"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["37"]["Size"] = UDim2.new(0, 40, 0, 20);
					Window["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["37"]["Position"] = UDim2.new(0, 122, 0, 215);
					Window["37"]["Name"] = [[RightLowerLeg]];
					
					Library.Theme.Objects[Window["37"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightLowerLeg.TextButton
					Window["38"] = Instance.new("TextButton", Window["37"]);
					Window["38"]["BorderSizePixel"] = 0;
					Window["38"]["TextTransparency"] = 1;
					Window["38"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["38"]["TextSize"] = Library.UI.FontSize;
					Window["38"]["FontFace"] = Library.UI.Font;
					Window["38"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["38"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["38"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightLowerLeg.UIStroke
					Window["39"] = Instance.new("UIStroke", Window["37"]);
					Window["39"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["39"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightFoot
					Window["3a"] = Instance.new("Frame", Window["c"]);
					Window["3a"]["BorderSizePixel"] = 0;
					Window["3a"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["3a"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["3a"]["Size"] = UDim2.new(0, 40, 0, 10);
					Window["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["3a"]["Position"] = UDim2.new(0, 122, 0, 235);
					Window["3a"]["Name"] = [[RightFoot]];
					
					Library.Theme.Objects[Window["3a"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightFoot.TextButton
					Window["3b"] = Instance.new("TextButton", Window["3a"]);
					Window["3b"]["BorderSizePixel"] = 0;
					Window["3b"]["TextTransparency"] = 1;
					Window["3b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["3b"]["TextSize"] = Library.UI.FontSize;
					Window["3b"]["FontFace"] = Library.UI.Font;
					Window["3b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["3b"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["3b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["3b"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R15BodyParts.RightFoot.UIStroke
					Window["3c"] = Instance.new("UIStroke", Window["3a"]);
					Window["3c"]["Color"] = Library.Theme.Default.Inline;
					
					Library.Theme.Objects[Window["3c"]] = {
						Color = "Inline"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts
					Window["6d"] = Library:CreateObject("Frame", Window["a"]);
					Window["6d"]["BorderSizePixel"] = 0;
					Window["6d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["6d"]["BackgroundTransparency"] = 1;
					Window["6d"]["Size"] = UDim2.new(0, 204, 0, 250);
					Window["6d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["6d"]["Position"] = UDim2.new(0, 15, 0, 10);
					Window["6d"]["Name"] = [[R6BodyParts]];
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Head
					Window["6e"] = Library:CreateObject("Frame", Window["6d"]);
					Window["6e"]["ZIndex"] = 2;
					Window["6e"]["BorderSizePixel"] = 0;
					Window["6e"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["6e"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["6e"]["Size"] = UDim2.new(0, 50, 0, 50);
					Window["6e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["6e"]["Position"] = UDim2.new(0.5, 0, 0, 17);
					Window["6e"]["Name"] = [[Head]];
					
					Library.Theme.Objects[Window["6e"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Head.UIStroke
					Window["6f"] = Library:CreateObject("UIStroke", Window["6e"]);
					Window["6f"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["6f"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Head.TextButton
					Window["70"] = Library:CreateObject("TextButton", Window["6e"]);
					Window["70"]["BorderSizePixel"] = 0;
					Window["70"]["TextTransparency"] = 1;
					Window["70"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["70"]["TextSize"] = Library.UI.FontSize;
					Window["70"]["FontFace"] = Library.UI.Font;
					Window["70"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["70"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["70"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["70"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Head.InfoCircle
					Window["71"] = Library:CreateObject("Frame", Window["6e"]);
					Window["71"]["BorderSizePixel"] = 0;
					Window["71"]["BackgroundColor3"] = Color3.fromRGB(49, 48, 56);
					Window["71"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
					Window["71"]["Size"] = UDim2.new(0, 7, 0, 7);
					Window["71"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["71"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
					Window["71"]["Name"] = [[InfoCircle]];
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Head.InfoCircle.UICorner
					Window["72"] = Library:CreateObject("UICorner", Window["71"]);
					Window["72"]["CornerRadius"] = UDim.new(1, 0);
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Head.InfoCircle.UIStroke
					Window["73"] = Library:CreateObject("UIStroke", Window["71"]);
					Window["73"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["73"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Torso
					Window["74"] = Library:CreateObject("Frame", Window["6d"]);
					Window["74"]["BorderSizePixel"] = 0;
					Window["74"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["74"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["74"]["Size"] = UDim2.new(0, 80, 0, 90);
					Window["74"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["74"]["Position"] = UDim2.new(0.5, 0, 0, 68);
					Window["74"]["Name"] = [[Torso]];
					
					Library.Theme.Objects[Window["74"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Torso.UIStroke
					Window["75"] = Library:CreateObject("UIStroke", Window["74"]);
					Window["75"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["75"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Torso.TextButton
					Window["76"] = Library:CreateObject("TextButton", Window["74"]);
					Window["76"]["BorderSizePixel"] = 0;
					Window["76"]["TextTransparency"] = 1;
					Window["76"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["76"]["TextSize"] = Library.UI.FontSize;
					Window["76"]["FontFace"] = Library.UI.Font;
					Window["76"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["76"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["76"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["76"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Torso.InfoCircle
					Window["77"] = Library:CreateObject("Frame", Window["74"]);
					Window["77"]["BorderSizePixel"] = 0;
					Window["77"]["BackgroundColor3"] = Color3.fromRGB(49, 48, 56);
					Window["77"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
					Window["77"]["Size"] = UDim2.new(0, 7, 0, 7);
					Window["77"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["77"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
					Window["77"]["Name"] = [[InfoCircle]];
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Torso.InfoCircle.UICorner
					Window["78"] = Library:CreateObject("UICorner", Window["77"]);
					Window["78"]["CornerRadius"] = UDim.new(1, 0);
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Torso.InfoCircle.UIStroke
					Window["79"] = Library:CreateObject("UIStroke", Window["77"]);
					Window["79"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["79"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Leg
					Window["7a"] = Library:CreateObject("Frame", Window["6d"]);
					Window["7a"]["BorderSizePixel"] = 0;
					Window["7a"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["7a"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["7a"]["Size"] = UDim2.new(0, 39, 0, 85);
					Window["7a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["7a"]["Position"] = UDim2.new(0, 82, 0, 159);
					Window["7a"]["Name"] = [[Left Leg]];
					
					Library.Theme.Objects[Window["7a"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Leg.UIStroke
					Window["7b"] = Library:CreateObject("UIStroke", Window["7a"]);
					Window["7b"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["7b"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Leg.TextButton
					Window["7c"] = Library:CreateObject("TextButton", Window["7a"]);
					Window["7c"]["BorderSizePixel"] = 0;
					Window["7c"]["TextTransparency"] = 1;
					Window["7c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["7c"]["TextSize"] = Library.UI.FontSize;
					Window["7c"]["FontFace"] = Library.UI.Font;
					Window["7c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["7c"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["7c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["7c"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Leg.InfoCircle
					Window["7d"] = Library:CreateObject("Frame", Window["7a"]);
					Window["7d"]["BorderSizePixel"] = 0;
					Window["7d"]["BackgroundColor3"] = Color3.fromRGB(49, 48, 56);
					Window["7d"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
					Window["7d"]["Size"] = UDim2.new(0, 7, 0, 7);
					Window["7d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["7d"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
					Window["7d"]["Name"] = [[InfoCircle]];
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Leg.InfoCircle.UICorner
					Window["7e"] = Library:CreateObject("UICorner", Window["7d"]);
					Window["7e"]["CornerRadius"] = UDim.new(1, 0);
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Leg.InfoCircle.UIStroke
					Window["7f"] = Library:CreateObject("UIStroke", Window["7d"]);
					Window["7f"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["7f"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Leg
					Window["80"] = Library:CreateObject("Frame", Window["6d"]);
					Window["80"]["BorderSizePixel"] = 0;
					Window["80"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["80"]["AnchorPoint"] = Vector2.new(0.5, 0);
					Window["80"]["Size"] = UDim2.new(0, 40, 0, 85);
					Window["80"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["80"]["Position"] = UDim2.new(0, 122, 0, 159);
					Window["80"]["Name"] = [[Right Leg]];
					
					Library.Theme.Objects[Window["80"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Leg.UIStroke
					Window["81"] = Library:CreateObject("UIStroke", Window["80"]);
					Window["81"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["81"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Leg.TextButton
					Window["82"] = Library:CreateObject("TextButton", Window["80"]);
					Window["82"]["BorderSizePixel"] = 0;
					Window["82"]["TextTransparency"] = 1;
					Window["82"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["82"]["TextSize"] = Library.UI.FontSize;
					Window["82"]["FontFace"] = Library.UI.Font;
					Window["82"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["82"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["82"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["82"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Leg.InfoCircle
					Window["83"] = Library:CreateObject("Frame", Window["80"]);
					Window["83"]["BorderSizePixel"] = 0;
					Window["83"]["BackgroundColor3"] = Color3.fromRGB(49, 48, 56);
					Window["83"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
					Window["83"]["Size"] = UDim2.new(0, 7, 0, 7);
					Window["83"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["83"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
					Window["83"]["Name"] = [[InfoCircle]];
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Leg.InfoCircle.UICorner
					Window["84"] = Library:CreateObject("UICorner", Window["83"]);
					Window["84"]["CornerRadius"] = UDim.new(1, 0);
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Leg.InfoCircle.UIStroke
					Window["85"] = Library:CreateObject("UIStroke", Window["83"]);
					Window["85"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["85"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Arm
					Window["86"] = Library:CreateObject("Frame", Window["6d"]);
					Window["86"]["BorderSizePixel"] = 0;
					Window["86"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["86"]["Size"] = UDim2.new(0, 40, 0, 90);
					Window["86"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["86"]["Position"] = UDim2.new(1, -61, 0, 68);
					Window["86"]["Name"] = [[Right Arm]];
					
					Library.Theme.Objects[Window["86"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Arm.UIStroke
					Window["87"] = Library:CreateObject("UIStroke", Window["86"]);
					Window["87"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["87"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Arm.TextButton
					Window["88"] = Library:CreateObject("TextButton", Window["86"]);
					Window["88"]["BorderSizePixel"] = 0;
					Window["88"]["TextTransparency"] = 1;
					Window["88"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["88"]["TextSize"] = Library.UI.FontSize;
					Window["88"]["FontFace"] = Library.UI.Font;
					Window["88"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["88"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["88"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["88"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Arm.InfoCircle
					Window["89"] = Library:CreateObject("Frame", Window["86"]);
					Window["89"]["BorderSizePixel"] = 0;
					Window["89"]["BackgroundColor3"] = Color3.fromRGB(49, 48, 56);
					Window["89"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
					Window["89"]["Size"] = UDim2.new(0, 7, 0, 7);
					Window["89"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["89"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
					Window["89"]["Name"] = [[InfoCircle]];
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Arm.InfoCircle.UICorner
					Window["8a"] = Library:CreateObject("UICorner", Window["89"]);
					Window["8a"]["CornerRadius"] = UDim.new(1, 0);
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Right Arm.InfoCircle.UIStroke
					Window["8b"] = Library:CreateObject("UIStroke", Window["89"]);
					Window["8b"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["8b"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Arm
					Window["8c"] = Library:CreateObject("Frame", Window["6d"]);
					Window["8c"]["BorderSizePixel"] = 0;
					Window["8c"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["8c"]["Size"] = UDim2.new(0, 40, 0, 90);
					Window["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8c"]["Position"] = UDim2.new(0, 22, 0, 68);
					Window["8c"]["Name"] = [[Left Arm]];
					
					Library.Theme.Objects[Window["8c"]] = {
						Color = "LightContrast"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Arm.UIStroke
					Window["8d"] = Library:CreateObject("UIStroke", Window["8c"]);
					Window["8d"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["8d"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Arm.TextButton
					Window["8e"] = Library:CreateObject("TextButton", Window["8c"]);
					Window["8e"]["BorderSizePixel"] = 0;
					Window["8e"]["TextTransparency"] = 1;
					Window["8e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["8e"]["TextSize"] = Library.UI.FontSize;
					Window["8e"]["FontFace"] = Library.UI.Font;
					Window["8e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8e"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["8e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8e"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Arm.InfoCircle
					Window["8f"] = Library:CreateObject("Frame", Window["8c"]);
					Window["8f"]["BorderSizePixel"] = 0;
					Window["8f"]["BackgroundColor3"] = Color3.fromRGB(49, 48, 56);
					Window["8f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
					Window["8f"]["Size"] = UDim2.new(0, 7, 0, 7);
					Window["8f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8f"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
					Window["8f"]["Name"] = [[InfoCircle]];
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Arm.InfoCircle.UICorner
					Window["90"] = Library:CreateObject("UICorner", Window["8f"]);
					Window["90"]["CornerRadius"] = UDim.new(1, 0);
	
					-- StarterGui.HitPoints.MainFrame.InnerFrame.Navigation.Holder.R6BodyParts.Left Arm.InfoCircle.UIStroke
					Window["91"] = Library:CreateObject("UIStroke", Window["8f"]);
					Window["91"]["Color"] = Library.Theme.Default.Accent;
					
					Library.Theme.Objects[Window["91"]] = {
						Color = "Accent"
					}
	
					-- StarterGui.HitPoints.MainFrame.TopBar
					Window["92"] = Library:CreateObject("Frame", Window["2"]);
					Window["92"]["BorderSizePixel"] = 0;
					Window["92"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["92"]["BackgroundTransparency"] = 1;
					Window["92"]["Size"] = UDim2.new(1, 0, 0, 20);
					Window["92"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["92"]["Name"] = [[TopBar]];
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.TextButton
					Window["1dfb"] = Library:CreateObject("TextButton",Window["92"]);
					Window["1dfb"]["BorderSizePixel"] = 0;
					Window["1dfb"]["TextTransparency"] = 1;
					Window["1dfb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["1dfb"]["TextSize"] = Library.UI.FontSize;
					Window["1dfb"]["FontFace"] = Library.UI.Font;
					Window["1dfb"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1dfb"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["1dfb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1dfb"]["BackgroundTransparency"] = 1;
	
					-- StarterGui.HitPoints.MainFrame.TopBar.TextLabel
					Window["93"] = Library:CreateObject("TextLabel", Window["92"]);
					Window["93"]["TextStrokeTransparency"] = 0;
					Window["93"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["93"]["BorderSizePixel"] = 0;
					Window["93"]["BackgroundColor3"] = Library.Theme.Default.TextColor;
					Window["93"]["TextXAlignment"] = Enum.TextXAlignment.Left;
					Window["93"]["FontFace"] = Library.UI.Font;
					Window["93"]["TextSize"] = Library.UI.FontSize;
					Window["93"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["93"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["93"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["93"]["Text"] = ("Hit Points - %s"):format(HitParts.Type);
					Window["93"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["93"]] = {
						Color = "TextColor"
					}
					
					Library.Theme.Objects[Window["93"]] = {
						Color = "TextBorder"
					}
					
					-- StarterGui.HitPoints.MainFrame.TopBar.TextLabel.UIPadding
					Window["94d"] = Library:CreateObject("UIPadding", Window["93d"]);
					Window["94d"]["PaddingRight"] = UDim.new(0, 6);
	
					-- StarterGui.HitPoints.MainFrame.TopBar.TextLabel.UIPadding
					Window["94"] = Library:CreateObject("UIPadding", Window["93"]);
					Window["94"]["PaddingLeft"] = UDim.new(0, 6);
	
					-- StarterGui.Settings.MainFrame.TopBar.CloseButton
					Window["19d"] = Library:CreateObject("ImageButton", Window["92"]);
					Window["19d"]["BorderSizePixel"] = 0;
					Window["19d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["19d"]["Image"] = [[rbxassetid://18491059927]];
					Window["19d"]["Size"] = UDim2.new(0, 10, 1, -10);
					Window["19d"]["Name"] = [[CloseButton]];
					Window["19d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["19d"]["Position"] = UDim2.new(1, -15, 0, 5);
					Window["19d"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["19d"]] = {
						ImageColor3 = "ImageColor"
					}
				end
				--
				for Index, Value in Window["2"]:GetDescendants() do
					if Value:IsA("TextButton") then
						local Frame = Value.Parent
						--
						Library:Connection(Value.MouseButton1Click, function()
							local Circle = Frame:FindFirstChild("InfoCircle")
							--
							if Frame and Frame.BackgroundColor3 ~= Library.Theme.Default.Accent then
								Library:TweenObject(Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {BackgroundColor3 = Library.Theme.Default.Accent})
								
								Library.Theme.Objects[Frame] = {
									Color = "Accent"
								}
								
								table.insert(HitParts.List, Frame.Name)
								--
								if HitParts.Type == "R6" and Frame.Name == "Torso" then
									table.insert(HitParts.List, "HumanoidRootPart")
								end
							else
								Library:TweenObject(Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {BackgroundColor3 = Library.Theme.Default.LightContrast})
								
								Library.Theme.Objects[Frame] = {
									Color = "LightContrast"
								}
								--
								table.remove(HitParts.List, table.find(HitParts.List, Frame.Name))
							end
						end)
					end
				end
				--
				function Library:HitPoints(Type)
					Window["c"].Visible = Type == "R15" and true or false
					Window["6d"].Visible = Type == "R6" and true or false
					
					table.clear(HitParts.List)
	
					if Type == "R15" then
						for Index, Value in Window["c"]:GetChildren() do
							if Value.Name == "HumanoidRootPart" or Value.Name == "Head" or Value.Name == "UpperTorso" then
								--
								Library:TweenObject(Value, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {BackgroundColor3 = Library.Theme.Default.Accent})
								--
								Library.Theme.Objects[Value] = {
									Color = "Accent"
								}
								--
								table.insert(HitParts.List, Value.Name)
							end
						end
					else
						for Index, Value in Window["6d"]:GetChildren() do
							if Value.Name == "Torso" or Value.Name == "Head" then
								local Circle = Value:FindFirstChild("InfoCircle")
								Library:TweenObject(Circle, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {BackgroundColor3 = Library.Theme.Default.Accent})
	
								Library.Theme.Objects[Circle] = {
									Color = "Accent"
								}
									
								table.insert(HitParts.List, "HumanoidRootPart")
							end
						end
					end
	
					HitParts.Type = Type
					
					Window["93"].Text = ("Hit Points - %s"):format(HitParts.Type)
				end
				--
				function Library:GetHitParts()
					return HitParts.List
				end
				--
				do -- Connections
					Library:Connection(Window["19d"].MouseButton1Click, function()
						Tab:Toggle()
					end)
				end
				--
				do -- Dragging
					Library:Draggable(Window["2"], Window["1dfb"], Window["bdf36"], Window["bdf3"], Window["3"])
				end
				--
				return HitParts
			end
			--
			if Options.Configs then
				local Window = Tab.GUI
				--
				local Configs = {
					CurrentConfig = nil,
					Amount = 0,
				}
				--
				do -- Rendering
					-- StarterGui.Configuration.MainFrame
					Window["2"] = Library:CreateObject("Frame", GUI["1"]);
					Window["2"]["BorderSizePixel"] = 0;
					Window["2"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["2"]["Size"] = UDim2.new(0, 305, 0, 356);
					Window["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
					Window["2"]["Name"] = [[Configuration]];
					Window["2"]["Visible"] = false;
					
					Library.Theme.Objects[Window["2"]] = {
						Color = "DarkContrast"
					}
					
					-- StarterGui.MainUI.MainFrameBack
					Window["bdf3"] = Library:CreateObject("Frame", GUI["1"]);
					Window["bdf3"]["BorderSizePixel"] = 0;
					Window["bdf3"]["BackgroundColor3"] = Library.Theme.Default.Outline;
					Window["bdf3"]["Size"] = Window["2"].Size + UDim2.new(0, 4, 0, 4);
					Window["bdf3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["bdf3"]["Position"] = Window["2"].Position + UDim2.new(0, -2, 0, -2);
					Window["bdf3"]["Name"] = [[MainFrameBack]];
					Window["bdf3"]["Visible"] = false;

					Library.Theme.Objects[Window["bdf3"]] = {
						Color = "Outline"
					}

					-- StarterGui.MainUI.MainFrameBack
					Window["bdf36"] = Library:CreateObject("Frame", GUI["1"]);
					Window["bdf36"]["BorderSizePixel"] = 0;
					Window["bdf36"]["BackgroundColor3"] = Library.Theme.Default.Outline;
					Window["bdf36"]["BackgroundTransparency"] = 1;
					Window["bdf36"]["Size"] = Window["2"].Size;
					Window["bdf36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["bdf36"]["Position"] = Window["2"].Position;
					Window["bdf36"]["Name"] = [[MainFrameBack]];
					Window["bdf36"]["Visible"] = false;

					-- StartingPositionerGui.MainUI.MainFrame.UIStroke
					Window["5fd"] = Library:CreateObject("UIStroke", Window["bdf36"]);
					Window["5fd"]["Color"] = Library.Theme.Default.Accent;
					Window["5fd"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					Window["5fd"]["Thickness"] = 1;

					Library.Theme.Objects[Window["5fd"]] = {
						Color = "Accent"
					}

					-- StarterGui.Configuration.MainFrame.DropShadowHolder
					Window["3"] = Library:CreateObject("Frame", GUI["1"]);
					Window["3"]["ZIndex"] = 0;
					Window["3"]["BorderSizePixel"] = 0;
					Window["3"]["BackgroundTransparency"] = 1;
					Window["3"]["Size"] = Window["2"].Size;
					Window["3"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
					Window["3"]["Name"] = [[DropShadowHolder]];
					Window["3"]["Visible"] = false;

					-- StarterGui.Configuration.MainFrame.DropShadowHolder.DropShadow
					Window["4"] = Library:CreateObject("ImageLabel", Window["3"]);
					Window["4"]["ZIndex"] = 0;
					Window["4"]["BorderSizePixel"] = 0;
					Window["4"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
					Window["4"]["ScaleType"] = Enum.ScaleType.Slice;
					Window["4"]["ImageColor3"] = Library.Theme.Default.Glow;
					Window["4"]["ImageTransparency"] = 0.5;
					Window["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
					Window["4"]["Image"] = [[rbxassetid://6015897843]];
					Window["4"]["Size"] = UDim2.new(1, 47, 1, 47);
					Window["4"]["Name"] = [[DropShadow]];
					Window["4"]["BackgroundTransparency"] = 1;
					Window["4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
					
					Library.Theme.Objects[Window["4"]] = {
						Color = "Glow"
					}

					-- StarterGui.Configuration.MainFrame.UIStroke
					Window["5"] = Library:CreateObject("UIStroke", Window["2"]);
					Window["5"]["Color"] = Library.Theme.Default.Accent;
					Window["5"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					Window["5"]["Thickness"] = 1;
					
					Library.Theme.Objects[Window["5"]] = {
						Color = "Accent"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame
					Window["6"] = Library:CreateObject("Frame", Window["2"]);
					Window["6"]["BorderSizePixel"] = 0;
					Window["6"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["6"]["Size"] = UDim2.new(1, -14, 1, -27);
					Window["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["6"]["Position"] = UDim2.new(0, 7, 0, 20);
					Window["6"]["Name"] = [[InnerFrame]];
					
					Library.Theme.Objects[Window["6"]] = {
						Color = "DarkContrast"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.UIStroke
					Window["7"] = Library:CreateObject("UIStroke", Window["6"]);
					Window["7"]["Color"] = Library.Theme.Default.Inline;
					Window["7"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["7"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation
					Window["8"] = Library:CreateObject("Frame", Window["6"]);
					Window["8"]["BorderSizePixel"] = 0;
					Window["8"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["8"]["Size"] = UDim2.new(1, -10, 1, -10);
					Window["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["8"]["Name"] = [[Navigation]];
					
					Library.Theme.Objects[Window["8"]] = {
						Color = "LightContrast"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.UIStroke
					Window["9"] = Library:CreateObject("UIStroke", Window["8"]);
					Window["9"]["Color"] = Library.Theme.Default.Inline;
					Window["9"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["9"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection
					Window["a"] = Library:CreateObject("Frame", Window["8"]);
					Window["a"]["BorderSizePixel"] = 0;
					Window["a"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["a"]["Size"] = UDim2.new(1, -10, 1, -118);
					Window["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["a"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["a"]["Name"] = [[ListSection]];
					
					
					Library.Theme.Objects[Window["a"]] = {
						Color = "DarkContrast"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.UIStroke
					Window["b"] = Library:CreateObject("UIStroke", Window["a"]);
					Window["b"]["Color"] = Library.Theme.Default.Inline;
					Window["b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["b"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.TopBar
					Window["c"] = Library:CreateObject("Frame", Window["a"]);
					Window["c"]["BorderSizePixel"] = 0;
					Window["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["c"]["BackgroundTransparency"] = 1;
					Window["c"]["Size"] = UDim2.new(1, 0, 0, 20);
					Window["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["c"]["Name"] = [[TopBar]];

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.TopBar.Bar
					Window["d"] = Library:CreateObject("Frame", Window["c"]);
					Window["d"]["BorderSizePixel"] = 0;
					Window["d"]["BackgroundColor3"] = Library.Theme.Default.Accent;
					Window["d"]["Size"] = UDim2.new(1, 0, 0, 2);
					Window["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["d"]["Name"] = [[Bar]];
					
					Library.Theme.Objects[Window["d"]] = {
						Color = "Accent"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.TopBar.Name
					Window["e"] = Library:CreateObject("TextLabel", Window["c"]);
					Window["e"]["TextStrokeTransparency"] = 0;
					Window["e"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["e"]["BorderSizePixel"] = 0;
					Window["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
					Window["e"]["FontFace"] = Library.UI.Font;
					Window["e"]["TextSize"] = Library.UI.FontSize;
					Window["e"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["e"]["Size"] = UDim2.new(1, 0, 1, -4);
					Window["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["e"]["Text"] = ("Config List - %s Configs"):format(Configs.Amount);
					Window["e"]["Name"] = [[Name]];
					Window["e"]["BackgroundTransparency"] = 1;
					Window["e"]["Position"] = UDim2.new(0, 0, 0, 2);
					
					Library.Theme.Objects[Window["e"]] = {
						Color = "TextColor"
					}
					
					Library.Theme.Objects[Window["e"]] = {
						Color = "TextBorder"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.TopBar.Name.UIPadding
					Window["f"] = Library:CreateObject("UIPadding", Window["e"]);
					Window["f"]["PaddingLeft"] = UDim.new(0, 3);

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.List
					Window["10"] = Library:CreateObject("ScrollingFrame", Window["a"]);
					Window["10"]["Active"] = true;
					Window["10"]["BorderSizePixel"] = 0;
					Window["10"]["MidImage"] = [[http://www.roblox.com/asset/?id=158362264]];
					Window["10"]["TopImage"] = [[http://www.roblox.com/asset/?id=158362264]];
					Window["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["10"]["BackgroundTransparency"] = 1;
					Window["10"]["Size"] = UDim2.new(1, 0, 1, -16);
					Window["10"]["ScrollBarImageColor3"] = Library.Theme.Default.Accent;
					Window["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["10"]["ScrollBarThickness"] = 2;
					Window["10"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
					Window["10"]["CanvasSize"] = UDim2.new(0, 0, 0, 0)
					Window["10"]["Position"] = UDim2.new(0, 0, 0, 16);
					Window["10"]["Name"] = [[List]];
					Window["10"]["BottomImage"] = [[http://www.roblox.com/asset/?id=158362264]];
					
					Library.Theme.Objects[Window["10"]] = {
						Color = "Accent"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.List.UIListLayout
					Window["11"] = Library:CreateObject("UIListLayout", Window["10"]);
					Window["11"]["Padding"] = UDim.new(0, 7);
					Window["11"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.List.UIPadding
					Window["12"] = Library:CreateObject("UIPadding", Window["10"]);
					Window["12"]["PaddingTop"] = UDim.new(0, 1);
					Window["12"]["PaddingRight"] = UDim.new(0, 1);
					Window["12"]["PaddingBottom"] = UDim.new(0, 5);
					Window["12"]["PaddingLeft"] = UDim.new(0, 1);

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection
					Window["15"] = Library:CreateObject("Frame", Window["8"]);
					Window["15"]["BorderSizePixel"] = 0;
					Window["15"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["15"]["AnchorPoint"] = Vector2.new(0, 1);
					Window["15"]["Size"] = UDim2.new(1, -10, 0, 102);
					Window["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["15"]["Position"] = UDim2.new(0, 5, 1, -5);
					Window["15"]["Name"] = [[ButtonSection]];
					
					Library.Theme.Objects[Window["15"]] = {
						Color = "DarkContrast"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.UIStroke
					Window["16"] = Library:CreateObject("UIStroke", Window["15"]);
					Window["16"]["Color"] = Library.Theme.Default.Inline;
					Window["16"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["16"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.TextBox
					Window["17"] = Library:CreateObject("Frame", Window["15"]);
					Window["17"]["BorderSizePixel"] = 0;
					Window["17"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["17"]["Size"] = UDim2.new(1, -10, 0, 13);
					Window["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["17"]["Position"] = UDim2.new(0, 5, 0, 10);
					Window["17"]["Name"] = [[TextBox]];
					
					Library.Theme.Objects[Window["17"]] = {
						Color = "LightContrast"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.TextBox.UIStroke
					Window["18"] = Library:CreateObject("UIStroke", Window["17"]);
					Window["18"]["Color"] = Library.Theme.Default.Inline;
					Window["18"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["18"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.TextBox.ConfigName
					Window["19"] = Library:CreateObject("TextBox", Window["17"]);
					Window["19"]["PlaceholderColor3"] = Library.Theme.Default.TextDark;
					Window["19"]["BorderSizePixel"] = 0;
					Window["19"]["TextStrokeTransparency"] = 0;
					Window["19"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["19"]["TextSize"] = Library.UI.FontSize;
					Window["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["19"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["19"]["FontFace"] = Library.UI.Font;
					Window["19"]["BackgroundTransparency"] = 1;
					Window["19"]["ClipsDescendants"] = true;
					Window["19"]["PlaceholderText"] = [[Config Name]];
					Window["19"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["19"]["Text"] = [[]];
					Window["19"]["Name"] = [[ConfigName]];
					Window["19"]["ClearTextOnFocus"] = false;
					Window["19"]["SelectionStart"] = 1;
					
					Library.Theme.Objects[Window["19"]] = {
						PlaceholderColor3 = "TextDark",
						TextColor3 = "TextColor",
						TextStrokeColor3 = "TextBorder"
					}
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
					Window["8c1"] = Library:CreateObject("ImageLabel", Window["17"]);
					Window["8c1"]["ZIndex"] = 0;
					Window["8c1"]["BorderSizePixel"] = 0;
					Window["8c1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["8c1"]["Image"] = [[rbxassetid://18520020007]];
					Window["8c1"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["8c1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8c1"]["Name"] = [[Gradient]];
					Window["8c1"]["BackgroundTransparency"] = 1;

					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Toggle.ToggleText.UIPadding
					Window["1cr"] = Library:CreateObject("UIPadding", Window["19"]);
					Window["1cr"]["PaddingTop"] = UDim.new(0, -1);

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList
					Window["1a"] = Library:CreateObject("Frame", Window["15"]);
					Window["1a"]["BorderSizePixel"] = 0;
					Window["1a"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["1a"]["Size"] = UDim2.new(1, -10, 0, 47);
					Window["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1a"]["Position"] = UDim2.new(0, 5, 0, 28);
					Window["1a"]["Name"] = [[ButtonList]];
					
					Library.Theme.Objects[Window["1a"]] = {
						Color = "LightContrast"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.UIStroke
					Window["1b"] = Library:CreateObject("UIStroke", Window["1a"]);
					Window["1b"]["Color"] = Library.Theme.Default.Inline;
					Window["1b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["1b"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.UIGridLayout
					Window["1c"] = Library:CreateObject("UIGridLayout", Window["1a"]);
					Window["1c"]["FillDirection"] = Enum.FillDirection.Vertical;
					Window["1c"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
					Window["1c"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
					Window["1c"]["CellSize"] = UDim2.new(0.5, -5, 0, 15);

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Create
					Window["1d"] = Library:CreateObject("Frame", Window["1a"]);
					Window["1d"]["BorderSizePixel"] = 0;
					Window["1d"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["1d"]["Size"] = UDim2.new(1, -10, 0, 13);
					Window["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1d"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["1d"]["Name"] = [[Create]];
					
					Library.Theme.Objects[Window["1d"]] = {
						Color = "LightContrast"
					}
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
					Window["8c2"] = Library:CreateObject("ImageLabel", Window["1d"]);
					Window["8c2"]["ZIndex"] = 0;
					Window["8c2"]["BorderSizePixel"] = 0;
					Window["8c2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["8c2"]["Image"] = [[rbxassetid://18520020007]];
					Window["8c2"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["8c2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8c2"]["Name"] = [[Gradient]];
					Window["8c2"]["BackgroundTransparency"] = 1;

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Create.UIStroke
					Window["1e"] = Library:CreateObject("UIStroke", Window["1d"]);
					Window["1e"]["Color"] = Library.Theme.Default.Inline;
					Window["1e"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["1e"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Create.Button
					Window["1f"] = Library:CreateObject("TextButton", Window["1d"]);
					Window["1f"]["BorderSizePixel"] = 0;
					Window["1f"]["TextStrokeTransparency"] = 0;
					Window["1f"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["1f"]["TextSize"] = Library.UI.FontSize;
					Window["1f"]["FontFace"] = Library.UI.Font;
					Window["1f"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["1f"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["1f"]["Name"] = [[Button]];
					Window["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1f"]["Text"] = [[Create]];
					Window["1f"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["1f"]] = {
						TextStrokeColor3 = "TextBorder",
						TextColor3 = "TextColor"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.UIPadding
					Window["20"] = Library:CreateObject("UIPadding", Window["1a"]);
					Window["20"]["PaddingLeft"] = UDim.new(0, 5);

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Load
					Window["21"] = Library:CreateObject("Frame", Window["1a"]);
					Window["21"]["BorderSizePixel"] = 0;
					Window["21"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["21"]["Size"] = UDim2.new(1, -10, 0, 13);
					Window["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["21"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["21"]["Name"] = [[Load]];
					
					Library.Theme.Objects[Window["21"]] = {
						Color = "LightContrast"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Load.UIStroke
					Window["22"] = Library:CreateObject("UIStroke", Window["21"]);
					Window["22"]["Color"] = Library.Theme.Default.Inline;
					Window["22"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["22"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Load.Button
					Window["23"] = Library:CreateObject("TextButton", Window["21"]);
					Window["23"]["BorderSizePixel"] = 0;
					Window["23"]["TextStrokeTransparency"] = 0;
					Window["23"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["23"]["TextSize"] = Library.UI.FontSize;
					Window["23"]["FontFace"] = Library.UI.Font;
					Window["23"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["23"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["23"]["Name"] = [[Button]];
					Window["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["23"]["Text"] = [[Load]];
					Window["23"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["23"]] = {
						TextStrokeColor3 = "TextBorder",
						TextColor3 = "TextColor"
					}
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
					Window["8c1"] = Library:CreateObject("ImageLabel", Window["21"]);
					Window["8c1"]["ZIndex"] = 0;
					Window["8c1"]["BorderSizePixel"] = 0;
					Window["8c1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["8c1"]["Image"] = [[rbxassetid://18520020007]];
					Window["8c1"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["8c1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8c1"]["Name"] = [[Gradient]];
					Window["8c1"]["BackgroundTransparency"] = 1;

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Delete
					Window["24"] = Library:CreateObject("Frame", Window["1a"]);
					Window["24"]["BorderSizePixel"] = 0;
					Window["24"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["24"]["Size"] = UDim2.new(1, -10, 0, 13);
					Window["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["24"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["24"]["Name"] = [[Delete]];
					
					Library.Theme.Objects[Window["24"]] = {
						Color = "LightContrast"
					}
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
					Window["8c3"] = Library:CreateObject("ImageLabel", Window["24"]);
					Window["8c3"]["ZIndex"] = 0;
					Window["8c3"]["BorderSizePixel"] = 0;
					Window["8c3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["8c3"]["Image"] = [[rbxassetid://18520020007]];
					Window["8c3"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["8c3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8c3"]["Name"] = [[Gradient]];
					Window["8c3"]["BackgroundTransparency"] = 1;

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Delete.UIStroke
					Window["25"] = Library:CreateObject("UIStroke", Window["24"]);
					Window["25"]["Color"] = Library.Theme.Default.Inline;
					Window["25"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["25"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Delete.Button
					Window["26"] = Library:CreateObject("TextButton", Window["24"]);
					Window["26"]["BorderSizePixel"] = 0;
					Window["26"]["TextStrokeTransparency"] = 0;
					Window["26"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["26"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["26"]["TextSize"] = Library.UI.FontSize;
					Window["26"]["FontFace"] = Library.UI.Font;
					Window["26"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["26"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["26"]["Name"] = [[Button]];
					Window["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["26"]["Text"] = [[Delete]];
					Window["26"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["26"]] = {
						TextStrokeColor3 = "TextBorder",
						Color = "TextColor"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Save
					Window["27"] = Library:CreateObject("Frame", Window["1a"]);
					Window["27"]["BorderSizePixel"] = 0;
					Window["27"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["27"]["Size"] = UDim2.new(1, -10, 0, 13);
					Window["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["27"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["27"]["Name"] = [[Save]];
					
					Library.Theme.Objects[Window["27"]] = {
						Color = "LightContrast"
					}

					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
					Window["8c4"] = Library:CreateObject("ImageLabel", Window["27"]);
					Window["8c4"]["ZIndex"] = 0;
					Window["8c4"]["BorderSizePixel"] = 0;
					Window["8c4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["8c4"]["Image"] = [[rbxassetid://18520020007]];
					Window["8c4"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["8c4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8c4"]["Name"] = [[Gradient]];
					Window["8c4"]["BackgroundTransparency"] = 1;

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Save.UIStroke
					Window["28"] = Library:CreateObject("UIStroke", Window["27"]);
					Window["28"]["Color"] = Library.Theme.Default.Inline;
					Window["28"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["28"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.ButtonList.Save.Button
					Window["29"] = Library:CreateObject("TextButton", Window["27"]);
					Window["29"]["BorderSizePixel"] = 0;
					Window["29"]["TextStrokeTransparency"] = 0;
					Window["29"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["29"]["TextSize"] = Library.UI.FontSize;
					Window["29"]["FontFace"] = Library.UI.Font;
					Window["29"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["29"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["29"]["Name"] = [[Button]];
					Window["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["29"]["Text"] = [[Save]];
					Window["29"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["29"]] = {
						TextStrokeColor3 = "TextBorder",
						Color = "TextColor"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.Unload
					Window["2a"] = Library:CreateObject("Frame", Window["15"]);
					Window["2a"]["BorderSizePixel"] = 0;
					Window["2a"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["2a"]["Size"] = UDim2.new(1, -10, 0, 13);
					Window["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2a"]["Position"] = UDim2.new(0, 5, 0, 80);
					Window["2a"]["Name"] = [[Unload]];
					
					Library.Theme.Objects[Window["2a"]] = {
						Color = "LightContrast"
					}
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
					Window["8c5"] = Library:CreateObject("ImageLabel", Window["2a"]);
					Window["8c5"]["ZIndex"] = 0;
					Window["8c5"]["BorderSizePixel"] = 0;
					Window["8c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["8c5"]["Image"] = [[rbxassetid://18520020007]];
					Window["8c5"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["8c5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8c5"]["Name"] = [[Gradient]];
					Window["8c5"]["BackgroundTransparency"] = 1;

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.Unload.UIStroke
					Window["2b"] = Library:CreateObject("UIStroke", Window["2a"]);
					Window["2b"]["Color"] = Library.Theme.Default.Inline;
					Window["2b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["2b"]] = {
						Color = "Inline"
					}

					-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.Unload.UnloadButton
					Window["2c"] = Library:CreateObject("TextButton", Window["2a"]);
					Window["2c"]["BorderSizePixel"] = 0;
					Window["2c"]["TextStrokeTransparency"] = 0;
					Window["2c"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["2c"]["TextSize"] = Library.UI.FontSize;
					Window["2c"]["FontFace"] = Library.UI.Font;
					Window["2c"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["2c"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["2c"]["Name"] = [[UnloadButton]];
					Window["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2c"]["Text"] = [[Unload]];
					Window["2c"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["2c"]] = {
						Color = "TextColor"
					}
					
					Library.Theme.Objects[Window["2c"]] = {
						Color = "TextBorder"
					}

					-- StarterGui.Configuration.MainFrame.TopBar
					Window["2d"] = Library:CreateObject("Frame", Window["2"]);
					Window["2d"]["BorderSizePixel"] = 0;
					Window["2d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["2d"]["BackgroundTransparency"] = 1;
					Window["2d"]["Size"] = UDim2.new(1, 0, 0, 20);
					Window["2d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2d"]["Name"] = [[TopBar]];
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.TextButton
					Window["1dfb"] = Library:CreateObject("TextButton",Window["2d"]);
					Window["1dfb"]["BorderSizePixel"] = 0;
					Window["1dfb"]["TextTransparency"] = 1;
					Window["1dfb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["1dfb"]["TextSize"] = Library.UI.FontSize;
					Window["1dfb"]["FontFace"] = Library.UI.Font;
					Window["1dfb"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1dfb"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["1dfb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1dfb"]["BackgroundTransparency"] = 1;

					-- StarterGui.Configuration.MainFrame.TopBar.TextLabel
					Window["2e"] = Library:CreateObject("TextLabel", Window["2d"]);
					Window["2e"]["TextStrokeTransparency"] = 0;
					Window["2e"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["2e"]["BorderSizePixel"] = 0;
					Window["2e"]["BackgroundColor3"] = Library.Theme.Default.TextColor;
					Window["2e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
					Window["2e"]["FontFace"] = Library.UI.Font;
					Window["2e"]["TextSize"] = Library.UI.FontSize;
					Window["2e"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["2e"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2e"]["Text"] = [[Configuration]];
					Window["2e"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["2e"]] = {
						Color = "TextColor"
					}
					
					Library.Theme.Objects[Window["2e"]] = {
						Color = "TextBorder"
					}
					
					Window["2z"] = Library:CreateObject("Frame", Window["2"]);
					Window["2z"]["BorderSizePixel"] = 0;
					Window["2z"]["BackgroundTransparency"] = 1;
					Window["2z"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["2z"]["Size"] = UDim2.new(0, 20, 0, 20);
					Window["2z"]["AnchorPoint"] = Vector2.new(1, 1)
					Window["2z"]["Name"] = [[ResizableCorner]];
					Window["2z"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2z"]["Position"] = UDim2.new(1, 0, 1, 0);

					-- StarterGui.Configuration.MainFrame.TopBar.TextLabel.UIPadding
					Window["2f"] = Library:CreateObject("UIPadding", Window["2e"]);
					Window["2f"]["PaddingLeft"] = UDim.new(0, 6);

					-- StarterGui.Settings.MainFrame.TopBar.CloseButton
					Window["19d"] = Library:CreateObject("ImageButton", Window["2d"]);
					Window["19d"]["BorderSizePixel"] = 0;
					Window["19d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["19d"]["Image"] = [[rbxassetid://18491059927]];
					Window["19d"]["Size"] = UDim2.new(0, 10, 1, -10);
					Window["19d"]["Name"] = [[CloseButton]];
					Window["19d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["19d"]["Position"] = UDim2.new(1, -15, 0, 5);
					Window["19d"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["19d"]] = {
						ImageColor3 = "ImageColor"
					}
				end
				--
				do -- Connections
					Library:Connection(Window["19d"].MouseButton1Click, function()
						Tab:Toggle()
					end)
				end
				--
				do -- Functions
					function Library:GetCurrentSelectedConfig()
						if Configs.CurrentConfig ~= nil then
							return tostring(Configs.CurrentConfig["14"].Text)
						else
							return "Unknown"
						end
					end
					--
					function Window:UpdateConfigText()
						if Configs.Amount == 1 then
							Window["e"].Text = ("Config List - %s Config"):format(Configs.Amount)
						else
							Window["e"].Text = ("Config List - %s Configs"):format(Configs.Amount)
						end
					end
					--
					function Window:AddConfig(Name)
						local Item = {
							Active = false,
							Hovering = false
						}
						--
						Configs.Amount += 1
						--
						Window:UpdateConfigText()
						local Name = Name:gsub("^/", "")
						--
						do -- Rendering
							-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.List.ListFrame
							Item["13"] = Library:CreateObject("Frame", Window["10"]);
							Item["13"]["BorderSizePixel"] = 0;
							Item["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							Item["13"]["BackgroundTransparency"] = 1;
							Item["13"]["Size"] = UDim2.new(1, 0, 0, 10);
							Item["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							Item["13"]["Name"] = Name;

							-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.List.ListFrame.ConfigName
							Item["14"] = Library:CreateObject("TextLabel", Item["13"]);
							Item["14"]["TextStrokeTransparency"] = 0;
							Item["14"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
							Item["14"]["BorderSizePixel"] = 0;
							Item["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							Item["14"]["FontFace"] = Library.UI.Font;
							Item["14"]["TextSize"] = Library.UI.FontSize;
							Item["14"]["TextColor3"] = Library.Theme.Default.TextDark;
							Item["14"]["Size"] = UDim2.new(1, 0, 1, 0);
							Item["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							Item["14"]["Text"] = Name;
							Item["14"]["Name"] = [[ConfigName]];
							Item["14"]["BackgroundTransparency"] = 1;
							
							Library.Theme.Objects[Item["14"]] = {
								Color = "TextDark"
							}
							
							Library.Theme.Objects[Item["14"]] = {
								Color = "TextBorder"
							}

							-- StarterGui.Configuration.MainFrame.InnerFrame.Navigation.ListSection.Unload.UnloadButton
							Item["2c"] = Library:CreateObject("TextButton", Item["13"]);
							Item["2c"]["BorderSizePixel"] = 0;
							Item["2c"]["TextStrokeTransparency"] = 0;
							Item["2c"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
							Item["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							Item["2c"]["TextSize"] = Library.UI.FontSize;
							Item["2c"]["FontFace"] = Library.UI.Font;
							Item["2c"]["TextColor3"] = Library.Theme.Default.TextColor;
							Item["2c"]["Size"] = UDim2.new(1, 0, 1, 0);
							Item["2c"]["Name"] = [[UnloadButton]];
							Item["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							Item["2c"]["Text"] = [[Unload]];
							Item["2c"]["BackgroundTransparency"] = 1;
							Item["2c"]["TextTransparency"] = 1;
							
							Library.Theme.Objects[Item["2c"]] = {
								Color = "TextColor"
							}
							
							Library.Theme.Objects[Item["2c"]] = {
								Color = "TextBorder"
							}
						end
						--
						do -- Functions
							function Item:Activate()
								if not Item.Active then

									if Configs.CurrentConfig ~= nil then
										Configs.CurrentConfig:Deactivate()
									end

									Item.Active = true

									Library:TweenObject(Item["14"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
									
									Library.Theme.Objects[Item["14"]] = {
										Color = "Accent"
									}

									Configs.CurrentConfig = Item
								end
							end
							--
							function Item:Deactivate()
								if Item.Active then
									Item.Active = false
									Item.Hovering = false

									Library:TweenObject(Item["14"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
									
									Library.Theme.Objects[Item["14"]] = {
										Color = "TextDark"
									}
								end
							end
						end
						--
						do -- Connections
							Library:Connection(Item["13"].MouseEnter, function()
								if not Item.Active then
									Library:TweenObject(Item["14"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
									--
									Library.Theme.Objects[Item["14"]] = {
										Color = "TextColor"
									}
									--
									Item.Hovering = true
								end
							end)
							--
							Library:Connection(Item["13"].MouseLeave, function()
								if Item.Hovering and not Item.Active then
									Library:TweenObject(Item["14"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
									--
									Library.Theme.Objects[Item["14"]] = {
										Color = "TextDark"
									}
									--
									Item.Hovering = false
								end
							end)
							--
							Library:Connection(Item["2c"].MouseButton1Click, function()
								Item:Activate()
							end)
						end
						--
						return Item
					end
					--
					function Window:RemoveConfig(Object)
						Object:Destroy()
						--
						Configs.Amount -= 1
						--
						Window:UpdateConfigText()
					end
					--
					function Library:Unload()
						for Index, Value in Library.Connections do
							Value:Disconnect()
						end
						--
						for _, Objects in Library.Objects do
							Objects:Destroy()
						end
						--
						Library.UI.ScreenGUI:Destroy()
						--
						Library = nil
					end
				end
				--
				local ButtonDown = false
				--
				do -- Connections
					-- // Unload
					Library:Connection(Window["2c"].MouseButton1Down, function()
						if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) then
							Library:TweenObject(Window["2c"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
							ButtonDown = true

							Library.Theme.Objects[Window["2c"]] = {
								Color = "Accent"
							}
						end
						--
						Library:Unload()
					end)
					--
					-- // Create
					Library:Connection(Window["1f"].MouseButton1Down, function()
						if Window["19"].Text ~= "" and not (Window["10"]:FindFirstChild(Window["19"].Text) or isfile("Elevated/Configs/" .. tostring(Window["19"].Text) .. ".cfg")) then
							Window:AddConfig(Window["19"].Text)
							--
							writefile("Elevated/Configs/" .. tostring(Window["19"].Text) .. ".cfg", Library:GetConfig())
						end
						--
						if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) then
							ButtonDown = true
							Library:TweenObject(Window["1f"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})

							Library.Theme.Objects[Window["1f"]] = {
								Color = "Accent"
							}
						end
					end)
					--
					-- // Delete
					Library:Connection(Window["26"].MouseButton1Down, function()
						if Configs.CurrentConfig ~= nil then
							Window:RemoveConfig(Configs.CurrentConfig["13"])
							--
							delfile("Elevated/Configs/" .. Library:GetCurrentSelectedConfig() .. ".cfg")
							--
							Configs.CurrentConfig = nil
						end
						--
						if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) then
							ButtonDown = true
							Library:TweenObject(Window["26"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})

							Library.Theme.Objects[Window["26"]] = {
								Color = "Accent"
							}
						end
					end)
					--
					-- // Load
					Library:Connection(Window["23"].MouseButton1Down, function()
						if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) then
							ButtonDown = true
							Library:TweenObject(Window["23"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})

							Library.Theme.Objects[Window["23"]] = {
								Color = "Accent"
							}
							--
							if Configs.CurrentConfig ~= nil then
								Library:LoadConfig(readfile("Elevated/Configs/" .. Library:GetCurrentSelectedConfig() .. ".cfg"))
							end
						end
					end)
					--
					-- // Save
					Library:Connection(Window["29"].MouseButton1Down, function()
						if (not Library.UI.Dragging.GUI and not Library.UI.Dragging.True) then
							ButtonDown = true
							Library:TweenObject(Window["29"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})

							Library.Theme.Objects[Window["29"]] = {
								Color = "Accent"
							}
							--
							if Configs.CurrentConfig ~= nil then
								writefile("Elevated/Configs/" .. Library:GetCurrentSelectedConfig() .. ".cfg", Library:GetConfig())
							end
						end
					end)
					--
					Library:Connection(UserInputService.InputEnded, function(Input)
						if Input.UserInputType == Enum.UserInputType.MouseButton1 and ButtonDown then
							ButtonDown = false
							Library:TweenObject(Window["29"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})

							Library.Theme.Objects[Window["29"]] = {
								Color = "TextColor"
							}
							
							Library:TweenObject(Window["26"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})

							Library.Theme.Objects[Window["26"]] = {
								Color = "TextColor"
							}
							
							Library:TweenObject(Window["23"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})

							Library.Theme.Objects[Window["23"]] = {
								Color = "TextColor"
							}
							
							Library:TweenObject(Window["1f"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})

							Library.Theme.Objects[Window["1f"]] = {
								Color = "TextColor"
							}
							
							Library:TweenObject(Window["2c"], TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})

							Library.Theme.Objects[Window["2c"]] = {
								Color = "TextColor"
							}
						end
					end)
					--
					for _, File in listfiles("Elevated/Configs") do
						local FileName = File:gsub("\\", "/"):gsub("Elevated/Configs/", ""):gsub(".cfg", "")
						--
						Window:AddConfig(FileName)
					end
				end
				--
				do -- Dragging
					Library:Draggable(Window["2"], Window["1dfb"], Window["bdf36"], Window["bdf3"], Window["3"])
					Library:Resizable(Window["2"], Window["2z"], UDim2.new(0, 255, 0, 306), UDim2.new(0, 355, 0, 406), Window["bdf36"], Window["3"], Window["bdf3"])
				end
				--
				return Configs
			end
			--
			if Options.ChatSpy then
				local Window = Tab.GUI
				--
				local ChatSpy = {
					Chats = {},
					Messages = 0,
				}
				--
				do -- Rendering
					-- StarterGui.ChatSpy.MainFrame
					Window["2"] = Library:CreateObject("Frame", GUI["1"]);
					Window["2"]["BorderSizePixel"] = 0;
					Window["2"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["2"]["Size"] = UDim2.new(0, 546, 0, 295);
					Window["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
					Window["2"]["Name"] = [[Chat Spy]];
					Window["2"]["Visible"] = false;
					
					Library.Theme.Objects[Window["2"]] = {
						Color = "DarkContrast"
					}
					
					-- StarterGui.MainUI.MainFrameBack
					Window["bdf3"] = Library:CreateObject("Frame", GUI["1"]);
					Window["bdf3"]["BorderSizePixel"] = 0;
					Window["bdf3"]["BackgroundColor3"] = Library.Theme.Default.Outline;
					Window["bdf3"]["Size"] = Window["2"].Size + UDim2.new(0, 4, 0, 4);
					Window["bdf3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["bdf3"]["Position"] = Window["2"].Position + UDim2.new(0, -2, 0, -2);
					Window["bdf3"]["Name"] = [[MainFrameBack]];
					Window["bdf3"]["Visible"] = false;

					Library.Theme.Objects[Window["bdf3"]] = {
						Color = "Outline"
					}

					-- StarterGui.MainUI.MainFrameBack
					Window["bdf36"] = Library:CreateObject("Frame", GUI["1"]);
					Window["bdf36"]["BorderSizePixel"] = 0;
					Window["bdf36"]["BackgroundColor3"] = Library.Theme.Default.Outline;
					Window["bdf36"]["BackgroundTransparency"] = 1;
					Window["bdf36"]["Size"] = Window["2"].Size;
					Window["bdf36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["bdf36"]["Position"] = Window["2"].Position;
					Window["bdf36"]["Name"] = [[MainFrameBack]];
					Window["bdf36"]["Visible"] = false;

					-- StartingPositionerGui.MainUI.MainFrame.UIStroke
					Window["5fd"] = Library:CreateObject("UIStroke", Window["bdf36"]);
					Window["5fd"]["Color"] = Library.Theme.Default.Accent;
					Window["5fd"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					Window["5fd"]["Thickness"] = 1;

					Library.Theme.Objects[Window["5fd"]] = {
						Color = "Accent"
					}

					-- StarterGui.ChatSpy.MainFrame.DropShadowHolder
					Window["3"] = Library:CreateObject("Frame", GUI["1"]);
					Window["3"]["ZIndex"] = 0;
					Window["3"]["BorderSizePixel"] = 0;
					Window["3"]["BackgroundTransparency"] = 1;
					Window["3"]["Size"] = Window["2"].Size;
					Window["3"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
					Window["3"]["Name"] = [[DropShadowHolder]];
					Window["3"]["Visible"] = false;
					
					-- StarterGui.ChatSpy.MainFrame.DropShadowHolder.DropShadow
					Window["4"] = Library:CreateObject("ImageLabel", Window["3"]);
					Window["4"]["ZIndex"] = 0;
					Window["4"]["BorderSizePixel"] = 0;
					Window["4"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
					Window["4"]["ScaleType"] = Enum.ScaleType.Slice;
					Window["4"]["ImageColor3"] = Library.Theme.Default.Glow;
					Window["4"]["ImageTransparency"] = 0.5;
					Window["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
					Window["4"]["Image"] = [[rbxassetid://6015897843]];
					Window["4"]["Size"] = UDim2.new(1, 47, 1, 47);
					Window["4"]["Name"] = [[DropShadow]];
					Window["4"]["BackgroundTransparency"] = 1;
					Window["4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
					
					Library.Theme.Objects[Window["4"]] = {
						Color = "Glow"
					}

					-- StarterGui.ChatSpy.MainFrame.UIStroke
					Window["5"] = Library:CreateObject("UIStroke", Window["2"]);
					Window["5"]["Color"] = Library.Theme.Default.Accent;
					Window["5"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					Window["5"]["Thickness"] = 1;
					
					Library.Theme.Objects[Window["5"]] = {
						Color = "Accent"
					}

					-- StarterGui.ChatSpy.MainFrame.InnerFrame
					Window["6"] = Library:CreateObject("Frame", Window["2"]);
					Window["6"]["BorderSizePixel"] = 0;
					Window["6"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["6"]["Size"] = UDim2.new(1, -14, 1, -27);
					Window["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["6"]["Position"] = UDim2.new(0, 7, 0, 20);
					Window["6"]["Name"] = [[InnerFrame]];
					
					Library.Theme.Objects[Window["6"]] = {
						Color = "DarkContrast"
					}

					-- StarterGui.ChatSpy.MainFrame.InnerFrame.UIStroke
					Window["7"] = Library:CreateObject("UIStroke", Window["6"]);
					Window["7"]["Color"] = Library.Theme.Default.Inline;
					Window["7"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["7"]] = {
						Color = "Inline"
					}

					-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation
					Window["8"] = Library:CreateObject("Frame", Window["6"]);
					Window["8"]["BorderSizePixel"] = 0;
					Window["8"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
					Window["8"]["Size"] = UDim2.new(1, -10, 1, -10);
					Window["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["8"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["8"]["Name"] = [[Navigation]];
					
					Library.Theme.Objects[Window["8"]] = {
						Color = "LightContrast"
					}

					-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.UIStroke
					Window["9"] = Library:CreateObject("UIStroke", Window["8"]);
					Window["9"]["Color"] = Library.Theme.Default.Inline;
					Window["9"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["9"]] = {
						Color = "Inline"
					}

					-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.ChatsList
					Window["a"] = Library:CreateObject("Frame", Window["8"]);
					Window["a"]["BorderSizePixel"] = 0;
					Window["a"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
					Window["a"]["Size"] = UDim2.new(1, -10, 1, -10);
					Window["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["a"]["Position"] = UDim2.new(0, 5, 0, 5);
					Window["a"]["Name"] = [[ChatsList]];
					
					Library.Theme.Objects[Window["a"]] = {
						Color = "DarkContrast"
					}

					-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.ChatsList.UIStroke
					Window["b"] = Library:CreateObject("UIStroke", Window["a"]);
					Window["b"]["Color"] = Library.Theme.Default.Inline;
					Window["b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
					
					Library.Theme.Objects[Window["b"]] = {
						Color = "Inline"
					}

					-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.ChatsList.ChatsHolder
					Window["c"] = Library:CreateObject("ScrollingFrame", Window["a"]);
					Window["c"]["Active"] = true;
					Window["c"]["ZIndex"] = 2;
					Window["c"]["BorderSizePixel"] = 0;
					Window["c"]["MidImage"] = [[http://www.roblox.com/asset/?id=158362264]];
					Window["c"]["TopImage"] = [[http://www.roblox.com/asset/?id=158362264]];
					Window["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["c"]["BackgroundTransparency"] = 1;
					Window["c"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["c"]["ScrollBarImageColor3"] = Library.Theme.Default.Accent;
					Window["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["c"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
					Window["c"]["CanvasSize"] = UDim2.new(0, 0, 0, 0)
					Window["c"]["ScrollBarThickness"] = 2;
					Window["c"]["Name"] = [[ChatsHolder]];
					Window["c"]["BottomImage"] = [[http://www.roblox.com/asset/?id=158362264]];
					
					Library.Theme.Objects[Window["c"]] = {
						Color = "Accent"
					}

					-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.ChatsList.ChatsHolder.UIListLayout
					Window["d"] = Library:CreateObject("UIListLayout", Window["c"]);
					Window["d"]["Padding"] = UDim.new(0, 1);
					Window["d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

					-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.ChatsList.ChatsHolder.UIPadding
					Window["e"] = Library:CreateObject("UIPadding", Window["c"]);
					Window["e"]["PaddingRight"] = UDim.new(0, 1);
					Window["e"]["PaddingBottom"] = UDim.new(0, 1);

					-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.ChatsList.ScrollingBack
					Window["13"] = Library:CreateObject("Frame", Window["a"]);
					Window["13"]["BorderSizePixel"] = 0;
					Window["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["13"]["BackgroundTransparency"] = 1;
					Window["13"]["Size"] = UDim2.new(0, 2, 1, 0);
					Window["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["13"]["Position"] = UDim2.new(1, -2, 0, 0);
					Window["13"]["Name"] = [[ScrollingBack]];
					
					Window["2d"] = Library:CreateObject("Frame", Window["2"]);
					Window["2d"]["BorderSizePixel"] = 0;
					Window["2d"]["BackgroundTransparency"] = 1;
					Window["2d"]["AnchorPoint"] = Vector2.new(1, 1)
					Window["2d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["2d"]["Size"] = UDim2.new(0, 20, 0, 20);
					Window["2d"]["Name"] = [[ResizableCorner]];
					Window["2d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["2d"]["Position"] = UDim2.new(1, 0, 1, 0);

					-- StarterGui.ChatSpy.MainFrame.TopBar
					Window["15"] = Library:CreateObject("Frame", Window["2"]);
					Window["15"]["BorderSizePixel"] = 0;
					Window["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["15"]["BackgroundTransparency"] = 1;
					Window["15"]["Size"] = UDim2.new(1, 0, 0, 20);
					Window["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["15"]["Name"] = [[TopBar]];
					
					-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.TextButton
					Window["1dfb"] = Library:CreateObject("TextButton",Window["15"]);
					Window["1dfb"]["BorderSizePixel"] = 0;
					Window["1dfb"]["TextTransparency"] = 1;
					Window["1dfb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["1dfb"]["TextSize"] = Library.UI.FontSize;
					Window["1dfb"]["FontFace"] = Library.UI.Font;
					Window["1dfb"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1dfb"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["1dfb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["1dfb"]["BackgroundTransparency"] = 1;

					-- StarterGui.ChatSpy.MainFrame.TopBar.TextLabel
					Window["16"] = Library:CreateObject("TextLabel", Window["15"]);
					Window["16"]["TextStrokeTransparency"] = 0;
					Window["16"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
					Window["16"]["BorderSizePixel"] = 0;
					Window["16"]["BackgroundColor3"] = Library.Theme.Default.TextColor;
					Window["16"]["TextXAlignment"] = Enum.TextXAlignment.Left;
					Window["16"]["FontFace"] = Library.UI.Font;
					Window["16"]["TextSize"] = Library.UI.FontSize;
					Window["16"]["TextColor3"] = Library.Theme.Default.TextColor;
					Window["16"]["Size"] = UDim2.new(1, 0, 1, 0);
					Window["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["16"]["Text"] = ("Chat Spy - %s Messages"):format(ChatSpy.Messages);
					Window["16"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["16"]] = {
						Color = "TextColor"
					}
					
					Library.Theme.Objects[Window["16"]] = {
						Color = "TextBorder"
					}

					-- StarterGui.ChatSpy.MainFrame.TopBar.TextLabel.UIPadding
					Window["17"] = Library:CreateObject("UIPadding", Window["16"]);
					Window["17"]["PaddingLeft"] = UDim.new(0, 6);

					-- StarterGui.Settings.MainFrame.TopBar.CloseButton
					Window["19d"] = Library:CreateObject("ImageButton", Window["15"]);
					Window["19d"]["BorderSizePixel"] = 0;
					Window["19d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
					Window["19d"]["Image"] = [[rbxassetid://18491059927]];
					Window["19d"]["Size"] = UDim2.new(0, 10, 1, -10);
					Window["19d"]["Name"] = [[CloseButton]];
					Window["19d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
					Window["19d"]["Position"] = UDim2.new(1, -15, 0, 5);
					Window["19d"]["BackgroundTransparency"] = 1;
					
					Library.Theme.Objects[Window["19d"]] = {
						ImageColor3 = "ImageColor"
					}
				end
				--
				do -- Connections
					Library:Connection(Window["19d"].MouseButton1Click, function()
						Tab:Toggle()
					end)
				end
				--
				do -- Functions
					function ChatSpy:AddChat(Date, Player, Text)
						local Chat = {
							Active = false,
							Hovering = false,
							Hidden = true,
							Connection = nil,
						}
						--
						ChatSpy.Chats[Player] = {Chat = Chat, Date = Date, Text = Text}
						ChatSpy.Messages += 1
						--
						Window["16"].Text = ("Chat Spy - %s Messages"):format(ChatSpy.Messages);
						--
						do -- Rendering
							-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.ChatsList.ChatsHolder.ChatFrame
							Chat["f"] = Library:CreateObject("Frame", Window["c"]);
							Chat["f"]["BorderSizePixel"] = 0;
							Chat["f"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
							Chat["f"]["BackgroundTransparency"] = 1;
							Chat["f"]["Size"] = UDim2.new(1, 1, 0, 20);
							Chat["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							Chat["f"]["Name"] = [[ChatFrame]];
							
							Library.Theme.Objects[Chat["f"]] = {
								Color = "LightContrast"
							}

							-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.ChatsList.ChatsHolder.ChatFrame.UIStroke
							Chat["10"] = Library:CreateObject("UIStroke", Chat["f"]);
							Chat["10"]["Color"] = Library.Theme.Default.Inline;
							Chat["10"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
							
							Library.Theme.Objects[Chat["10"]] = {
								Color = "Inline"
							}

							local R, G, B = Library.Theme.Default.Accent.r * 255, Library.Theme.Default.Accent.g * 255, Library.Theme.Default.Accent.b * 255

							-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.ChatsList.ChatsHolder.ChatFrame.ChatText
							Chat["11"] = Library:CreateObject("TextLabel", Chat["f"]);
							Chat["11"]["TextStrokeTransparency"] = 0;
							Chat["11"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
							Chat["11"]["BorderSizePixel"] = 0;
							Chat["11"]["RichText"] = true;
							Chat["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							Chat["11"]["TextXAlignment"] = Enum.TextXAlignment.Left;
							Chat["11"]["FontFace"] = Library.UI.Font;
							Chat["11"]["TextSize"] = Library.UI.FontSize;
							Chat["11"]["TextColor3"] = Library.Theme.Default.TextDark;
							Chat["11"]["Size"] = UDim2.new(1, 0, 1, 0);
							Chat["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							Chat["11"]["Text"] = ("<font color='rgb(%d, %d, %d)'>%s</font> | %s (@%s) : %s"):format(R, G, B, Date, Player.DisplayName, Player.Name, Text)
							Chat["11"]["Name"] = [[ChatText]];
							Chat["11"]["BackgroundTransparency"] = 1;
							Chat["11"]["TextWrapped"] = true;
							
							Library.Theme.Objects[Chat["11"]] = {
								Color = "TextDark"
							}
							
							Library.Theme.Objects[Chat["11"]] = {
								Color = "TextBorder"
							}

							-- StarterGui.ChatSpy.MainFrame.InnerFrame.Navigation.ChatsList.ChatsHolder.ChatFrame.ChatText.UIPadding
							Chat["12"] = Library:CreateObject("UIPadding", Chat["11"]);
							Chat["12"]["PaddingLeft"] = UDim.new(0, 3);
							Chat["12"]["PaddingBottom"] = UDim.new(0, -10);
						end
						--
						do -- Functions
							function Chat:Update()
								Chat["11"].Size = UDim2.new(Chat["11"].Size.X.Scale, Chat["11"].Size.X.Offset, 0, math.huge)
								Chat["11"].Size = UDim2.new(Chat["11"].Size.X.Scale, Chat["11"].Size.X.Offset, 0, Chat["11"].TextBounds.Y)
								Chat["f"].Size = UDim2.new(Chat["f"].Size.X.Scale, Chat["f"].Size.X.Offset, 0, Chat["11"].TextBounds.Y + 10)
							end
						end
						--
						do -- Connections
							Library:Connection(Chat["f"].MouseEnter, function()
								Chat.Hovering = true
								Library:TweenObject(Chat["11"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})
								--
								Library.Theme.Objects[Chat["11"]] = {
									Color = "TextColor"
								}
							end)
							--
							Library:Connection(Chat["f"].MouseLeave, function()
								Chat.Hovering = true
								Library:TweenObject(Chat["11"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
								--
								Library.Theme.Objects[Chat["11"]] = {
									Color = "TextDark"
								}
							end)
						end
						--
						Chat:Update()
						--
						return Chat
					end
				end
				--
				function Library:UpdateChats()
					for Index, Value in ChatSpy.Chats do
						local R, G, B = Library.Theme.Default.Accent.r * 255, Library.Theme.Default.Accent.g * 255, Library.Theme.Default.Accent.b * 255
						--
						Value.Chat["11"]["Text"] = ("<font color='rgb(%d, %d, %d)'>%s</font> | %s (@%s) : %s"):format(R, G, B, Value.Date, Index.DisplayName, Index.Name, Value.Text)
					end
				end
				--
				function ChatSpy:UpdateFrameSizes(Size)
					for Index, Value in Window["c"]:GetChildren() do
						if Value:IsA("Frame") then
							Value.Size = UDim2.new(Value.Size.X.Scale, Size, Value.Size.Y.Scale, Value.Size.Y.Offset)
						end
					end
				end
				--
				function ChatSpy:UpdateCanvasSize()
					if Window["c"].AbsoluteCanvasSize.Y > Window["a"].AbsoluteSize.Y then
						ChatSpy:UpdateFrameSizes(-2)
						Window["13"].Visible = true
					else
						ChatSpy:UpdateFrameSizes(1)
						Window["13"].Visible = false
					end
				end
				--
				do -- Connections
					for _, Player in Players:GetPlayers() do
						Library:Connection(Player.Chatted, function(Message)
							if Library.GetCurrentTime then
								ChatSpy:AddChat(Library:GetCurrentTime(), Player, Message)
							end
						end)
					end
					--
					Library:Connection(Players.PlayerAdded, function(Player)
						if Library and Library.GetCurrentTime then
							Library:Connection(Player.Chatted, function(Message)
								ChatSpy:AddChat(Library:GetCurrentTime(), Player, Message)
							end)
						end
					end)
					--
					Library:Connection(Window["c"].ChildAdded, function()
						ChatSpy:UpdateCanvasSize()
					end)
					--
					Library:Connection(Window["c"].ChildRemoved, function()
						ChatSpy:UpdateCanvasSize()
					end)
					--
					ChatSpy:UpdateCanvasSize()
				end
				--
				do -- Dragging
					Library:Draggable(Window["2"], Window["1dfb"], Window["bdf36"], Window["bdf3"], Window["3"])
					Library:Resizable(Window["2"], Window["2d"], UDim2.new(0, 496, 0, 245), UDim2.new(0, 596, 0, 345), Window["bdf36"], Window["3"], Window["bdf3"])
				end
				--
				return ChatSpy
			end
			--
			if Options.Settings then
				function Tab:SettingsWindow(Options)
					Options = Library:Validate({
						Name = "Settings",
					}, Options or {})
					--
					local Window = Tab.GUI
					--
					do -- Rendering
						-- StarterGui.Settings.MainFrame
						Window["2"] = Library:CreateObject("Frame", GUI["1"]);
						Window["2"]["BorderSizePixel"] = 0;
						Window["2"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
						Window["2"]["Size"] = UDim2.new(0, 305, 0, 262);
						Window["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["2"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
						Window["2"]["Name"] = Options.Name;
						Window["2"]["Visible"] = false;
						
						Library.Theme.Objects[Window["2"]] = {
							Color = "DarkContrast"
						}
						
						-- StarterGui.MainUI.MainFrameBack
						Window["bdf3"] = Library:CreateObject("Frame", GUI["1"]);
						Window["bdf3"]["BorderSizePixel"] = 0;
						Window["bdf3"]["BackgroundColor3"] = Library.Theme.Default.Outline;
						Window["bdf3"]["Size"] = Window["2"].Size + UDim2.new(0, 4, 0, 4);
						Window["bdf3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["bdf3"]["Position"] = Window["2"].Position + UDim2.new(0, -2, 0, -2);
						Window["bdf3"]["Name"] = [[MainFrameBack]];
						Window["bdf3"]["Visible"] = false;

						Library.Theme.Objects[Window["bdf3"]] = {
							Color = "Outline"
						}

						-- StarterGui.MainUI.MainFrameBack
						Window["bdf36"] = Library:CreateObject("Frame", GUI["1"]);
						Window["bdf36"]["BorderSizePixel"] = 0;
						Window["bdf36"]["BackgroundColor3"] = Library.Theme.Default.Outline;
						Window["bdf36"]["BackgroundTransparency"] = 1;
						Window["bdf36"]["Size"] = Window["2"].Size;
						Window["bdf36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["bdf36"]["Position"] = Window["2"].Position;
						Window["bdf36"]["Name"] = [[MainFrameBack]];
						Window["bdf36"]["Visible"] = false;

						-- StartingPositionerGui.MainUI.MainFrame.UIStroke
						Window["5fd"] = Library:CreateObject("UIStroke", Window["bdf36"]);
						Window["5fd"]["Color"] = Library.Theme.Default.Accent;
						Window["5fd"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						Window["5fd"]["Thickness"] = 1;

						Library.Theme.Objects[Window["5fd"]] = {
							Color = "Accent"
						}
						
						Window["2z"] = Library:CreateObject("Frame", Window["2"]);
						Window["2z"]["BorderSizePixel"] = 0;
						Window["2z"]["BackgroundTransparency"] = 1;
						Window["2z"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["2z"]["Size"] = UDim2.new(0, 20, 0, 20);
						Window["2z"]["AnchorPoint"] = Vector2.new(1, 1)
						Window["2z"]["Name"] = [[ResizableCorner]];
						Window["2z"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["2z"]["Position"] = UDim2.new(1, 0, 1, 0);

						-- StarterGui.Settings.MainFrame.DropShadowHolder
						Window["3"] = Library:CreateObject("Frame", GUI["1"]);
						Window["3"]["ZIndex"] = 0;
						Window["3"]["BorderSizePixel"] = 0;
						Window["3"]["BackgroundTransparency"] = 1;
						Window["3"]["Size"] = Window["2"].Size;
						Window["3"]["Position"] = UDim2.fromOffset((Viewport.X / 2) - (Window["2"].Size.X.Offset / 2), (Viewport.Y / 2) - (Window["2"].Size.Y.Offset / 2));
						Window["3"]["Name"] = [[DropShadowHolder]];
						Window["3"]["Visible"] = false;

						-- StarterGui.Settings.MainFrame.DropShadowHolder.DropShadow
						Window["4"] = Library:CreateObject("ImageLabel", Window["3"]);
						Window["4"]["ZIndex"] = 0;
						Window["4"]["BorderSizePixel"] = 0;
						Window["4"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
						Window["4"]["ScaleType"] = Enum.ScaleType.Slice;
						Window["4"]["ImageColor3"] = Library.Theme.Default.Glow;
						Window["4"]["ImageTransparency"] = 0.5;
						Window["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
						Window["4"]["Image"] = [[rbxassetid://6015897843]];
						Window["4"]["Size"] = UDim2.new(1, 47, 1, 47);
						Window["4"]["Name"] = [[DropShadow]];
						Window["4"]["BackgroundTransparency"] = 1;
						Window["4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
						
						Library.Theme.Objects[Window["4"]] = {
							Color = "Glow"
						}

						-- StarterGui.Settings.MainFrame.UIStroke
						Window["5"] = Library:CreateObject("UIStroke", Window["2"]);
						Window["5"]["Color"] = Library.Theme.Default.Accent;
						Window["5"]["Thickness"] = 1;
						Window["5"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						
						Library.Theme.Objects[Window["5"]] = {
							Color = "Accent"
						}

						-- StarterGui.Settings.MainFrame.InnerFrame
						Window["6"] = Library:CreateObject("Frame", Window["2"]);
						Window["6"]["BorderSizePixel"] = 0;
						Window["6"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
						Window["6"]["Size"] = UDim2.new(1, -14, 1, -27);
						Window["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["6"]["Position"] = UDim2.new(0, 7, 0, 20);
						Window["6"]["Name"] = [[InnerFrame]];
						
						Library.Theme.Objects[Window["6"]] = {
							Color = "DarkContrast"
						}

						-- StarterGui.Settings.MainFrame.InnerFrame.UIStroke
						Window["7"] = Library:CreateObject("UIStroke", Window["6"]);
						Window["7"]["Color"] = Library.Theme.Default.Inline;
						Window["7"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						
						Library.Theme.Objects[Window["7"]] = {
							Color = "Inline"
						}

						-- StarterGui.Settings.MainFrame.InnerFrame.Navigation
						Window["8"] = Library:CreateObject("Frame", Window["6"]);
						Window["8"]["BorderSizePixel"] = 0;
						Window["8"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
						Window["8"]["Size"] = UDim2.new(1, -10, 1, -10);
						Window["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["8"]["Position"] = UDim2.new(0, 5, 0, 5);
						Window["8"]["Name"] = [[Navigation]];
						
						Library.Theme.Objects[Window["8"]] = {
							Color = "LightContrast"
						}

						-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.UIStroke
						Window["9"] = Library:CreateObject("UIStroke", Window["8"]);
						Window["9"]["Color"] = Library.Theme.Default.Inline;
						Window["9"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						
						Library.Theme.Objects[Window["9"]] = {
							Color = "Inline"
						}

						-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.UIListLayout
						Window["a"] = Library:CreateObject("UIListLayout", Window["8"]);
						Window["a"]["Padding"] = UDim.new(0, 7);
						Window["a"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

						-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.UIPadding
						Window["b"] = Library:CreateObject("UIPadding", Window["8"]);
						Window["b"]["PaddingTop"] = UDim.new(0, 5);
						Window["b"]["PaddingRight"] = UDim.new(0, -2);
						Window["b"]["PaddingBottom"] = UDim.new(0, 1);
						Window["b"]["PaddingLeft"] = UDim.new(0, 5);
						
						-- StarterGui.Settings.MainFrame.TopBar
						Window["16"] = Library:CreateObject("Frame", Window["2"]);
						Window["16"]["BorderSizePixel"] = 0;
						Window["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["16"]["BackgroundTransparency"] = 1;
						Window["16"]["Size"] = UDim2.new(1, 0, 0, 20);
						Window["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["16"]["Name"] = [[TopBar]];
						
						-- StarterGui.MainUI.MainFrame.InnerFrame.TopBar.ActiveWindowTab.TextButton
						Window["1dfb"] = Library:CreateObject("TextButton",Window["16"]);
						Window["1dfb"]["BorderSizePixel"] = 0;
						Window["1dfb"]["TextTransparency"] = 1;
						Window["1dfb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["1dfb"]["TextSize"] = Library.UI.FontSize;
						Window["1dfb"]["FontFace"] = Library.UI.Font;
						Window["1dfb"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1dfb"]["Size"] = UDim2.new(1, 0, 1, 0);
						Window["1dfb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["1dfb"]["BackgroundTransparency"] = 1;

						-- StarterGui.Settings.MainFrame.TopBar.TextLabel
						Window["17"] = Library:CreateObject("TextLabel", Window["16"]);
						Window["17"]["TextStrokeTransparency"] = 0;
						Window["17"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
						Window["17"]["BorderSizePixel"] = 0;
						Window["17"]["BackgroundColor3"] = Library.Theme.Default.TextColor;
						Window["17"]["TextXAlignment"] = Enum.TextXAlignment.Left;
						Window["17"]["FontFace"] = Library.UI.Font;
						Window["17"]["TextSize"] = Library.UI.FontSize;
						Window["17"]["TextColor3"] = Color3.fromRGB(253, 253, 253);
						Window["17"]["Size"] = UDim2.new(1, 0, 1, 0);
						Window["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["17"]["Text"] = Options.Name;
						Window["17"]["BackgroundTransparency"] = 1;
						
						Library.Theme.Objects[Window["17"]] = {
							Color = "TextColor"
						}
						
						Library.Theme.Objects[Window["17"]] = {
							Color = "TextBorder"
						}

						-- StarterGui.Settings.MainFrame.TopBar.TextLabel.UIPadding
						Window["18"] = Library:CreateObject("UIPadding", Window["17"]);
						Window["18"]["PaddingLeft"] = UDim.new(0, 6);

						-- StarterGui.Settings.MainFrame.TopBar.CloseButton
						Window["19d"] = Library:CreateObject("ImageButton", Window["16"]);
						Window["19d"]["BorderSizePixel"] = 0;
						Window["19d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Window["19d"]["Image"] = [[rbxassetid://18491059927]];
						Window["19d"]["Size"] = UDim2.new(0, 10, 1, -10);
						Window["19d"]["Name"] = [[CloseButton]];
						Window["19d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Window["19d"]["Position"] = UDim2.new(1, -15, 0, 5);
						Window["19d"]["BackgroundTransparency"] = 1;
						
						Library.Theme.Objects[Window["19d"]] = {
							ImageColor3 = "ImageColor"
						}
					end
					--
					do -- Connections
						Library:Connection(Window["19d"].MouseButton1Click, Tab.Toggle)
					end
					--
					do -- Dragging
						Library:Draggable(Window["2"], Window["1dfb"], Window["bdf36"], Window["bdf3"], Window["3"])
						Library:Resizable(Window["2"], Window["2z"], UDim2.new(0, 305, 0, 262), UDim2.new(0, 415, 0, 386), Window["bdf36"], Window["3"], Window["bdf3"])
					end
					--
					function Window:Section(Options)
						Options = Library:Validate({
							Name = "Theme",
						}, Options or {})
						--
						local Section = {}
						--
						do -- Rendering
							-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.Theme
							Section["c"] = Library:CreateObject("Frame", Window["8"]);
							Section["c"]["ZIndex"] = 2;
							Section["c"]["BorderSizePixel"] = 0;
							Section["c"]["BackgroundColor3"] = Library.Theme.Default.DarkContrast;
							Section["c"]["Size"] = UDim2.new(1, -7, 0, 0);
							Section["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							Section["c"]["Position"] = UDim2.new(0, 0, 0, 33);
							Section["c"]["AutomaticSize"] = Enum.AutomaticSize.Y;
							Section["c"]["Name"] = [[Theme]];
							
							Library.Theme.Objects[Section["c"]] = {
								Color = "DarkContrast"
							}

							-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.Theme.UIStroke
							Section["d"] = Library:CreateObject("UIStroke", Section["c"]);
							Section["d"]["Color"] = Library.Theme.Default.Inline;
							Section["d"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
							
							Library.Theme.Objects[Section["d"]] = {
								Color = "Inline"
							}

							-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.Theme.TopBar
							Section["e"] = Library:CreateObject("Frame", Section["c"]);
							Section["e"]["BorderSizePixel"] = 0;
							Section["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							Section["e"]["BackgroundTransparency"] = 1;
							Section["e"]["Size"] = UDim2.new(1, 0, 0, 20);
							Section["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							Section["e"]["Name"] = [[TopBar]];

							-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.Theme.TopBar.Bar
							Section["f"] = Library:CreateObject("Frame", Section["e"]);
							Section["f"]["BorderSizePixel"] = 0;
							Section["f"]["BackgroundColor3"] = Library.Theme.Default.Accent;
							Section["f"]["Size"] = UDim2.new(1, 0, 0, 2);
							Section["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							Section["f"]["Name"] = [[Bar]];
							
							Library.Theme.Objects[Section["f"]] = {
								Color = "Accent"
							}

							-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.Theme.TopBar.Name
							Section["10"] = Library:CreateObject("TextLabel", Section["e"]);
							Section["10"]["TextStrokeTransparency"] = 0;
							Section["10"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
							Section["10"]["BorderSizePixel"] = 0;
							Section["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							Section["10"]["TextXAlignment"] = Enum.TextXAlignment.Left;
							Section["10"]["FontFace"] = Library.UI.Font;
							Section["10"]["TextSize"] = Library.UI.FontSize;
							Section["10"]["TextColor3"] = Library.Theme.Default.TextColor;
							Section["10"]["Size"] = UDim2.new(1, 0, 1, -4);
							Section["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							Section["10"]["Text"] = Options.Name;
							Section["10"]["Name"] = [[Name]];
							Section["10"]["BackgroundTransparency"] = 1;
							Section["10"]["Position"] = UDim2.new(0, 0, 0, 2);
							
							Library.Theme.Objects[Section["10"]] = {
								Color = "TextColor"
							}
							
							Library.Theme.Objects[Section["10"]] = {
								Color = "TextBorder"
							}

							-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.Theme.TopBar.Name.UIPadding
							Section["11"] = Library:CreateObject("UIPadding", Section["10"]);
							Section["11"]["PaddingLeft"] = UDim.new(0, 3);

							-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.Theme.UIPadding
							Section["12"] = Library:CreateObject("UIPadding", Section["c"]);
							Section["12"]["PaddingBottom"] = UDim.new(0, 5);

							-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.Theme.Holder
							Section["13"] = Library:CreateObject("Frame", Section["c"]);
							Section["13"]["BorderSizePixel"] = 0;
							Section["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
							Section["13"]["BackgroundTransparency"] = 1;
							Section["13"]["Size"] = UDim2.new(1, 0, 1, -20);
							Section["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
							Section["13"]["Position"] = UDim2.new(0, 0, 0, 20);
							Section["13"]["Name"] = [[Holder]];

							-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.Theme.Holder.UIListLayout
							Section["14"] = Library:CreateObject("UIListLayout", Section["13"]);
							Section["14"]["Padding"] = UDim.new(0, 5);
							Section["14"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

							-- StarterGui.Settings.MainFrame.InnerFrame.Navigation.Theme.Holder.UIPadding
							Section["15"] = Library:CreateObject("UIPadding", Section["13"]);
							Section["15"]["PaddingLeft"] = UDim.new(0, 5);
						end
						--
						function Section:Label(Options)
							Options = Library:Validate({
								Message = "Preview Label",
								Side = "Left",
								Risky = false,
							}, Options or {})
							--
							local Label = {
								ColorPickers = {},
								KeybindState = false,
								Section = self,
							}
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Label
								Label["1d"] = Library:CreateObject("Frame", Section["13"]);
								Label["1d"]["BorderSizePixel"] = 0;
								Label["1d"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Label["1d"]["BackgroundTransparency"] = 1;
								Label["1d"]["Size"] = UDim2.new(1, -5, 0, 15);
								Label["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Label["1d"]["Position"] = UDim2.new(0, 5, 0, 0);
								Label["1d"]["Name"] = Options.Message;
								
								Library.Theme.Objects[Label["1d"]] = {
									Color = "LightContrast"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Label.LabelText
								Label["1e"] = Library:CreateObject("TextLabel", Label["1d"]);
								Label["1e"]["TextStrokeTransparency"] = 0;
								Label["1e"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Label["1e"]["BorderSizePixel"] = 0;
								Label["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Label["1e"]["TextXAlignment"] = Enum.TextXAlignment[Options.Side];
								Label["1e"]["FontFace"] = Library.UI.Font;
								Label["1e"]["TextSize"] = Library.UI.FontSize;
								Label["1e"]["TextColor3"] = Options.Risky and Library.Theme.Default.Risky or Library.Theme.Default.TextColor;
								Label["1e"]["Size"] = UDim2.new(1, 0, 1, 0);
								Label["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Label["1e"]["Text"] = Options.Message;
								Label["1e"]["Name"] = [[LabelText]];
								Label["1e"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[Label["1e"]] = {
									Color = Options.Risky and "Risky" or "TextColor"
								}
								
								Library.Theme.Objects[Label["1e"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Label.LabelText.UIPadding
								Label["1f"] = Library:CreateObject("UIPadding", Label["1e"]);
								Label["1f"]["PaddingLeft"] = UDim.new(0, -1);
							end
							--
							do -- Functions
								function Label:Update()
									Label["1e"].Size = UDim2.new(Label["1e"].Size.X.Scale, Label["1e"].Size.X.Offset, 0, math.huge)
									Label["1e"].Size = UDim2.new(Label["1e"].Size.X.Scale, Label["1e"].Size.X.Offset, 0, Label["1e"].TextBounds.Y)
									Label["1d"].Size = UDim2.new(Label["1d"].Size.X.Scale, Label["1d"].Size.X.Offset, 0, Label["1e"].TextBounds.Y)
								end
							end
							--
							Label:Update()
							--
							function Label:ColorPicker(Options)
								Options = Library:Validate({
									Name = "Preview Color Picker",
									Default = Color3.fromRGB(255, 0, 0),
									Flag = Library.NewFlag(),
									Alpha = 1,
									AlphaBar = true,
									Callback = function() end,
								}, Options or {})
								--
								local ColorPicker = {}
								--
								Label.ColorPickers[#Label.ColorPickers + 1] = ColorPicker
								--
								local ColorPickerFrame = Library:ColorPicker({
									Name = Options.Name,
									Default = Options.Default,
									Flag = Options.Flag,
									Alpha = Options.Alpha,
									AlphaBar = Options.AlphaBar,
									Callback = Options.Callback,
									Parent = Label["1d"],
									Keybind = Label.KeybindState,
									Count = #Label.ColorPickers,
								})
								--
								return ColorPickerFrame
							end
							--
							return Label
						end
						--
						function Section:Dropdown(Options)
							Options = Library:Validate({
								Default = "None",
								Name = "Preview Dropdown",
								Content = {},
								Risky = false,
								Flag = Library.NewFlag(),
								Callback = function() end
							}, Options or {})
							--
							local Dropdown = {
								Open = true,
								Active = false,
								CurrentItem = nil,
								Section = self,
								Items = {},
							}
							--
							if not Options.Default then
								Library.Flags[Options.Flag] = Dropdown
								Options.Callback(Options.Default)
							end

							if table.find(Options.Content, Options.Default) then
								Library.Flags[Options.Flag] = Dropdown
								Options.Callback(Options.Default)
							end
							--
							do -- Rendering
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown
								Dropdown["28"] = Library:CreateObject("Frame", Section["13"]);
								Dropdown["28"]["ZIndex"] = 2;
								Dropdown["28"]["BorderSizePixel"] = 0;
								Dropdown["28"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Dropdown["28"]["BackgroundTransparency"] = 1;
								Dropdown["28"]["Size"] = UDim2.new(1, -5, 0, 35);
								Dropdown["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["28"]["Position"] = UDim2.new(0, 5, 0, 0);
								Dropdown["28"]["Name"] = Options.Name;

								Library.Theme.Objects[Dropdown["28"]] = {
									Color = "LightContrast"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownText
								Dropdown["29"] = Library:CreateObject("TextLabel", Dropdown["28"]);
								Dropdown["29"]["TextStrokeTransparency"] = 0;
								Dropdown["29"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Dropdown["29"]["BorderSizePixel"] = 0;
								Dropdown["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Dropdown["29"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								Dropdown["29"]["FontFace"] = Library.UI.Font;
								Dropdown["29"]["TextSize"] = Library.UI.FontSize;
								Dropdown["29"]["TextColor3"] = Options.Risky and Library.Theme.Default.Risky or Library.Theme.Default.TextColor;
								Dropdown["29"]["Size"] = UDim2.new(1, 0, 0.5, -1);
								Dropdown["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["29"]["Text"] = Options.Name;
								Dropdown["29"]["Name"] = [[DropdownText]];
								Dropdown["29"]["BackgroundTransparency"] = 1;
								
								Library.Theme.Objects[Dropdown["29"]] = {
									Color = Options.Risky and "Risky" or "TextColor"
								}
								
								Library.Theme.Objects[Dropdown["29"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownText.UIPadding
								Dropdown["2a"] = Library:CreateObject("UIPadding", Dropdown["29"]);
								Dropdown["2a"]["PaddingLeft"] = UDim.new(0, -1);

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame
								Dropdown["2b"] = Library:CreateObject("Frame", Dropdown["28"]);
								Dropdown["2b"]["BorderSizePixel"] = 0;
								Dropdown["2b"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Dropdown["2b"]["Size"] = UDim2.new(1, 0, 0.5, -1);
								Dropdown["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["2b"]["Position"] = UDim2.new(0, 0, 0.5, 1);
								Dropdown["2b"]["Name"] = [[DropdownFrame]];

								Library.Theme.Objects[Dropdown["2b"]] = {
									Color = "LightContrast"
								}
								
								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.Gradient
								Dropdown["8c"] = Library:CreateObject("ImageLabel", Dropdown["2b"]);
								Dropdown["8c"]["ZIndex"] = 0;
								Dropdown["8c"]["BorderSizePixel"] = 0;
								Dropdown["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Dropdown["8c"]["Image"] = [[rbxassetid://18520020007]];
								Dropdown["8c"]["Size"] = UDim2.new(1, 0, 1, 0);
								Dropdown["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["8c"]["Name"] = [[Gradient]];
								Dropdown["8c"]["BackgroundTransparency"] = 1;

								-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
								Dropdown["b"] = Library:CreateObject("TextButton", Dropdown["2b"]);
								Dropdown["b"]["BorderSizePixel"] = 0;
								Dropdown["b"]["TextTransparency"] = 1;
								Dropdown["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Dropdown["b"]["TextSize"] = Library.UI.FontSize;
								Dropdown["b"]["FontFace"] = Library.UI.Font;
								Dropdown["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["b"]["Size"] = UDim2.new(1, 0, 1, 0);
								Dropdown["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["b"]["BackgroundTransparency"] = 1;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownValue
								Dropdown["2c"] = Library:CreateObject("TextLabel", Dropdown["2b"]);
								Dropdown["2c"]["TextStrokeTransparency"] = 0;
								Dropdown["2c"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
								Dropdown["2c"]["BorderSizePixel"] = 0;
								Dropdown["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Dropdown["2c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
								Dropdown["2c"]["FontFace"] = Library.UI.Font;
								Dropdown["2c"]["TextSize"] = Library.UI.FontSize;
								Dropdown["2c"]["TextColor3"] = Library.Theme.Default.TextColor;
								Dropdown["2c"]["Size"] = UDim2.new(1, 0, 1, 0);
								Dropdown["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["2c"]["Text"] = Options.Default ~= "None" and table.find(Options.Content, Options.Default) and Options.Default or "None";
								Dropdown["2c"]["Name"] = [[DropdownValue]];
								Dropdown["2c"]["BackgroundTransparency"] = 1;

								Library.Theme.Objects[Dropdown["2c"]] = {
									Color = "TextColor"
								}
								
								Library.Theme.Objects[Dropdown["2c"]] = {
									Color = "TextBorder"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownValue.UIPadding
								Dropdown["2d"] = Library:CreateObject("UIPadding", Dropdown["2c"]);
								Dropdown["2d"]["PaddingLeft"] = UDim.new(0, 3);
                                Dropdown["2d"]["PaddingBottom"] = UDim.new(0, -1);

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder
								Dropdown["2e"] = Library:CreateObject("ScrollingFrame", Dropdown["2b"]);
								Dropdown["2e"]["Active"] = true;
								Dropdown["2e"]["BorderSizePixel"] = 0;
								Dropdown["2e"]["MidImage"] = [[http://www.roblox.com/asset/?id=158362264]];
								Dropdown["2e"]["TopImage"] = [[http://www.roblox.com/asset/?id=158362264]];
								Dropdown["2e"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
								Dropdown["2e"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
								Dropdown["2e"]["Size"] = UDim2.new(1, 0, 0, 0);
								Dropdown["2e"]["ScrollBarImageColor3"] = Library.Theme.Default.Accent;
								Dropdown["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["2e"]["ScrollBarThickness"] = 2;
								Dropdown["2e"]["Position"] = UDim2.new(0, 0, 1, 0);
								Dropdown["2e"]["Visible"] = true;
								Dropdown["2e"]["Name"] = [[DropdownHolder]];
								Dropdown["2e"]["BottomImage"] = [[http://www.roblox.com/asset/?id=158362264]];

								Library.Theme.Objects[Dropdown["2e"]] = {
									Color = "Accent"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.ArrowIcon
								Dropdown["3e"] = Library:CreateObject("ImageLabel", Dropdown["2b"]);
								Dropdown["3e"]["BorderSizePixel"] = 0;
								Dropdown["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
								Dropdown["3e"]["Image"] = [[rbxassetid://18475684195]];
								Dropdown["3e"]["Rotation"] = 180;
								Dropdown["3e"]["Size"] = UDim2.new(0, 10, 0, 10);
								Dropdown["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
								Dropdown["3e"]["Name"] = [[ArrowIcon]];
								Dropdown["3e"]["BackgroundTransparency"] = 1;
								Dropdown["3e"]["Position"] = UDim2.new(1, -13, 0, 2);
								
								Library.Theme.Objects[Dropdown["3e"]] = {
									Color = "ImageColor"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.UIListLayout
								Dropdown["2f"] = Library:CreateObject("UIListLayout", Dropdown["2e"]);
								Dropdown["2f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.UIStroke
								Dropdown["30"] = Library:CreateObject("UIStroke", Dropdown["2e"]);
								Dropdown["30"]["Color"] = Library.Theme.Default.Inline;
								Dropdown["30"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

								Library.Theme.Objects[Dropdown["30"]] = {
									Color = "Inline"
								}

								-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.UIStroke
								Dropdown["3d"] = Library:CreateObject("UIStroke", Dropdown["2b"]);
								Dropdown["3d"]["Color"] = Library.Theme.Default.Inline;

								Library.Theme.Objects[Dropdown["3d"]] = {
									Color = "Inline"
								}
							end
							--
							function Dropdown:Set(State)
								for Index, Value in Dropdown.Items do
									if Index == State then
										Value:Activate()
									end
								end
							end
							--
							function Dropdown:Get()
								return Dropdown.Value
							end
                            --
                            function Dropdown:UpdateSizes()
                                for Index, Value in Dropdown["2e"]:GetChildren() do
                                    if #Options.Content > 6 then
                                        if table.find(Options.Content, Value.Name) then
                                            Value.Size = UDim2.new(1, -3, 0, 20)
                                        end
                                    end
                                end
                            end
                            --
                            Library:Connection(Dropdown["2e"].ChildAdded, Dropdown.UpdateSizes)
                            Library:Connection(Dropdown["2e"].ChildRemoved, Dropdown.UpdateSizes)
							--
							do -- Functions
								function Dropdown:AddValue(Index, Value)
									local Item = {
										Hovering = false,
										Active = false,
									}
									--
									if Item[Index] ~= nil then
										return
									end
									--
									Item[Index] = {
										instance = {},
										value = Value,
									}
									--
									Dropdown.Items[Value] = Item
									--
									do -- Rendering
										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.InactiveValue
										Item["39"] = Library:CreateObject("Frame", Dropdown["2e"]);
										Item["39"]["BorderSizePixel"] = 0;
										Item["39"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
										Item["39"]["Size"] = UDim2.new(1, 0, 0, 20);
										Item["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Item["39"]["Name"] = Value;

										Library.Theme.Objects[Item["39"]] = {
											Color = "LightContrast"
										}

										-- StartingPositionerGui.MainUI.NavigationFrame.Holder.ActiveButton.TextButton
										Item["b"] = Library:CreateObject("TextButton", Item["39"]);
										Item["b"]["BorderSizePixel"] = 0;
										Item["b"]["TextTransparency"] = 1;
										Item["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
										Item["b"]["TextSize"] = Library.UI.FontSize;
										Item["b"]["FontFace"] = Library.UI.Font;
										Item["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
										Item["b"]["Size"] = UDim2.new(1, 0, 1, 0);
										Item["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Item["b"]["BackgroundTransparency"] = 1;

										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.InactiveValue.Name
										Item["3a"] = Library:CreateObject("TextLabel", Item["39"]);
										Item["3a"]["TextStrokeTransparency"] = 0;
										Item["3a"]["TextStrokeColor3"] = Library.Theme.Default.TextBorder;
										Item["3a"]["BorderSizePixel"] = 0;
										Item["3a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
										Item["3a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
										Item["3a"]["FontFace"] = Library.UI.Font;
										Item["3a"]["TextSize"] = Library.UI.FontSize;
										Item["3a"]["TextColor3"] = Library.Theme.Default.TextDark;
										Item["3a"]["Size"] = UDim2.new(1, 0, 1, 0);
										Item["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
										Item["3a"]["Text"] = Value;
										Item["3a"]["Name"] = [[Name]];
										Item["3a"]["BackgroundTransparency"] = 1;
										
										Library.Theme.Objects[Item["3a"]] = {
											Color = "TextDark"
										}
										
										Library.Theme.Objects[Item["3a"]] = {
											Color = "TextBorder"
										}

										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.InactiveValue.Name.UIPadding
										Item["3b"] = Library:CreateObject("UIPadding", Item["3a"]);
										Item["3b"]["PaddingLeft"] = UDim.new(0, 4);

										-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.Dropdown.DropdownFrame.DropdownHolder.InactiveValue.UIStroke
										Item["3c"] = Library:CreateObject("UIStroke", Item["39"]);
										Item["3c"]["Color"] = Library.Theme.Default.Inline;
										Item["3c"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

										Library.Theme.Objects[Item["3c"]] = {
											Color = "Inline"
										}
									end
									--
									do -- Functions
										function Item:Activate()
											if not Item.Active then
												if Dropdown.CurrentItem ~= nil then
													Dropdown.CurrentItem:Deactivate()
												end

												Item.Active = true

												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.Accent})
												Library:TweenObject(Item["3b"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {PaddingLeft = UDim.new(0, 7)})

												Library.Theme.Objects[Item["3a"]] = {
													Color = "Accent"
												}

												Dropdown.CurrentItem = Item
												--
												Dropdown.Value = Value
												Library.Flags[Options.Flag] = Dropdown
												Options.Callback(Value)
												Dropdown["2c"].Text = Value
											end
										end
										--
										function Item:Deactivate()
											if Item.Active and Dropdown.CurrentItem == Item then
												Item.Active = false
												Item.Hover = false

												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})
												Library:TweenObject(Item["3b"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {PaddingLeft = UDim.new(0, 4)})

												Library.Theme.Objects[Item["3a"]] = {
													Color = "TextDark"
												}

												Dropdown.CurrentItem = nil
											end
										end
										--
										function Item:Toggle()
											if Item.Active then
												if Dropdown.CurrentItem ~= Item or Dropdown.CurrentItem == nil then
													Item:Deactivate()
												end
											else
												Item:Activate()
											end
										end
									end
									--
									do -- Connections
										Library:Connection(Item["39"].MouseEnter, function()
											if not Item.Active then
												Item.Hovering = true
												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextColor})

												Library.Theme.Objects[Item["3a"]] = {
													Color = "TextColor"
												}
											end
										end)
										--
										Library:Connection(Item["39"].MouseLeave, function()
											if not Item.Active then
												Library:TweenObject(Item["3a"], TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Library.Theme.Default.TextDark})

												Library.Theme.Objects[Item["3a"]] = {
													Color = "TextDark"
												}
											end
										end)
										--
										Library:Connection(Item["b"].MouseButton1Click, function()
											Item:Toggle()
											Dropdown:Toggle()
										end)
									end
									--
									if Value == Options.Default then
										Item:Activate()
									end
								end
								--
								function Dropdown:RemoveValue()

								end
								--
								function Dropdown:Toggle()
									if Dropdown.Open then
										Library:TweenObject(Dropdown["3e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Rotation = 0})
										Library:TweenObject(Dropdown["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, 0)}, function()
											Dropdown["28"].ZIndex = 1
											Library.UI.DropdownZIndex = Dropdown["28"].ZIndex
										end)
										--
										Library:TweenObject(Dropdown["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {ScrollBarImageTransparency = 1}, function()
											Dropdown["30"].Transparency = 1
										end)
									else
										if Library.UI.OpenColorFrames == 0 then
											Dropdown["28"].ZIndex = Library.UI.DropdownZIndex + 10
											Library.UI.DropdownZIndex = Dropdown["28"].ZIndex
										else
											Dropdown["28"].ZIndex = 2
										end
										--
										Dropdown["30"].Transparency = 0
										--
										if Dropdown["2e"].AbsoluteCanvasSize.Y > 121 then
											Library:TweenObject(Dropdown["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {ScrollBarImageTransparency = 0})
										end
										--
										Library:TweenObject(Dropdown["3e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Rotation = 180})
										--
										if #Options.Content < 6 then
											Library:TweenObject(Dropdown["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, #Options.Content * 20)})
										else
											Library:TweenObject(Dropdown["2e"], TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, 121)})
										end
									end
									--
									Dropdown.Open = not Dropdown.Open
								end
							end
							--
							Dropdown:Toggle()
							--
							do -- Connections
								Library:Connection(Dropdown["b"].MouseButton1Click, Dropdown.Toggle)
							end
							--
							for Index, Value in Options.Content do
								Dropdown:AddValue(Index, Value)
							end
							--
							return Dropdown
						end
						--
						return Section
					end
					--
					return Window
				end
				--
				function Library:Notify(Options)
					Options = Library:Validate({
						Message = "Notification",
						Delay = 3,
						Position = "Top Left",
					}, Options or {})
					--
					local R, G, B = Library.Theme.Default.Accent.r * 255, Library.Theme.Default.Accent.g * 255, Library.Theme.Default.Accent.b * 255
					local Notification = {}
					--
					do -- Rendering
						-- StarterGui.Notifications.Watermark
						Notification["2"] = Library:CreateObject("Frame", GUI["1"]);
						Notification["2"]["BorderSizePixel"] = 0;
						Notification["2"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
						Notification["2"]["BackgroundTransparency"] = 1;
						Notification["2"]["Size"] = UDim2.new(0, 200, 0, 25);
						Notification["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Notification["2"]["Name"] = [[Notification]];
						Notification["2"]["Position"] = UDim2.new(0, -50, 0, 80 + (#Library.UI.Notifications * 31))
						Notification["2"]["ZIndex"] = 1000;
						
						Library.Theme.Objects[Notification["2"]] = {
							Color = "LightContrast"
						}
						
						-- StarterGui.MainUI.MainFrame.InnerFrame.Navigation.Left.Section.Holder.ToggleWithColorPicker.ColorPicker.UIStroke
						Notification["10"] = Library:CreateObject("UIStroke", Notification["2"]);
						Notification["10"]["Color"] = Library.Theme.Default.Outline;
						Notification["10"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
						
						Library.Theme.Objects[Notification["10"]] = {
							Color = "Outline"
						}

						-- StarterGui.Notifications.Watermark.DropShadowHolder
						Notification["3"] = Library:CreateObject("Frame", GUI["1"]);
						Notification["3"]["ZIndex"] = 0;
						Notification["3"]["BorderSizePixel"] = 0;
						Notification["3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
						Notification["3"]["BackgroundTransparency"] = 1;
						Notification["3"]["Size"] = UDim2.new(0, 200, 0, 25);
						Notification["3"]["Name"] = [[DropShadowHolder]];
						Notification["3"]["Position"] = UDim2.new(0, -50, 0, 80 + (#Library.UI.Notifications * 31))

						-- StarterGui.Notifications.Watermark.DropShadowHolder.DropShadow
						Notification["4"] = Library:CreateObject("ImageLabel", Notification["3"]);
						Notification["4"]["ZIndex"] = 0;
						Notification["4"]["BorderSizePixel"] = 0;
						Notification["4"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
						Notification["4"]["ScaleType"] = Enum.ScaleType.Slice;
						Notification["4"]["ImageColor3"] = Library.Theme.Default.Glow;
						Notification["4"]["ImageTransparency"] = 1;
						Notification["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
						Notification["4"]["Image"] = [[rbxassetid://6015897843]];
						Notification["4"]["Size"] = UDim2.new(1, 25, 1, 25);
						Notification["4"]["Name"] = [[DropShadow]];
						Notification["4"]["BackgroundTransparency"] = 1;
						Notification["4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
						
						Library.Theme.Objects[Notification["4"]] = {
							Color = "Glow"
						}

						-- StarterGui.Notifications.Watermark.Holder
						Notification["5"] = Library:CreateObject("Frame", Notification["2"]);
						Notification["5"]["BorderSizePixel"] = 0;
						Notification["5"]["BackgroundColor3"] = Library.Theme.Default.LightContrast;
						Notification["5"]["BackgroundTransparency"] = 1;
						Notification["5"]["Size"] = UDim2.new(1, 0, 1, 0);
						Notification["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Notification["5"]["Name"] = [[Holder]];
						
						Library.Theme.Objects[Notification["5"]] = {
							Color = "LightContrast"
						}

						-- StarterGui.Notifications.Watermark.Holder.Text
						Notification["6"] = Library:CreateObject("TextLabel", Notification["5"]);
						Notification["6"]["TextStrokeTransparency"] = 0;
						Notification["6"]["BorderSizePixel"] = 0;
						Notification["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
						Notification["6"]["TextXAlignment"] = Enum.TextXAlignment.Left;
						Notification["6"]["FontFace"] = Library.UI.Font;
						Notification["6"]["TextSize"] = Library.UI.FontSize;
						Notification["6"]["TextColor3"] = Library.Theme.Default.TextColor;
						Notification["6"]["Size"] = UDim2.new(1, 0, 1, 0);
						Notification["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Notification["6"]["TextTransparency"] = 1;
						Notification["6"]["Text"] = ("<font color='rgb(%d, %d, %d)'>[%s]</font> - %s"):format(R, G, B, Library.UI.Name, Options.Message);
						Notification["6"]["Name"] = [[Text]];
						Notification["6"]["BackgroundTransparency"] = 1;
						Notification["6"]["RichText"] = true;
						
						Library.Theme.Objects[Notification["6"]] = {
							Color = "TextColor"
						}

						-- StarterGui.Notifications.Watermark.Holder.Text.UIPadding
						Notification["7"] = Library:CreateObject("UIPadding", Notification["6"]);
						Notification["7"]["PaddingLeft"] = UDim.new(0, 5);
                        Notification["7"]["PaddingTop"] = UDim.new(0, 9);
						Notification["7"]["PaddingBottom"] = UDim.new(0, 1);

						-- StarterGui.Notifications.Watermark.Bar
						Notification["8"] = Library:CreateObject("Frame", Notification["2"]);
						Notification["8"]["BorderSizePixel"] = 0;
						Notification["8"]["BackgroundColor3"] = Library.Theme.Default.Accent;
						Notification["8"]["Size"] = UDim2.new(1, 0, 0, 1);
						Notification["8"]["BackgroundTransparency"] = 1;
						Notification["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Notification["8"]["Position"] = UDim2.new(0, 0, 1, -1);
						Notification["8"]["Name"] = [[Bar]];
						
						Library.Theme.Objects[Notification["8"]] = {
							Color = "Accent"
						}
						
						-- StarterGui.Notifications.Watermark.Bar
						Notification["9"] = Library:CreateObject("Frame", Notification["2"]);
						Notification["9"]["BorderSizePixel"] = 0;
						Notification["9"]["BackgroundColor3"] = Library.Theme.Default.Accent;
						Notification["9"]["Size"] = UDim2.new(0, 1, 1, 0);
						Notification["9"]["BackgroundTransparency"] = 1;
						Notification["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
						Notification["9"]["Position"] = UDim2.new(0, 0, 0, 0);
						Notification["9"]["Name"] = [[Bar]];

						Library.Theme.Objects[Notification["9"]] = {
							Color = "Accent"
						}
					end
					--
					local NotificationFrame = {
						self = Notification["2"],
						Shadow = Notification["3"],
						Class = "Notification",
						Text = Notification["6"],
					}
					--
					do -- Functions
						function Notification:UpdatePositions()
                            local TotalHeight = 80
                            --
                            for Index = #Library.UI.Notifications, 1, -1 do
                                local Value = Library.UI.Notifications[Index]
                                local NewPosition = UDim2.new(0, 10, 0, TotalHeight)
                                --
                                Library:TweenObject(Value.self, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = NewPosition})
                                Library:TweenObject(Value.Shadow, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = NewPosition})
                                --
                                TotalHeight = TotalHeight + Value.self.AbsoluteSize.Y + 6
                            end
                        end
						--
						function Library:UpdateNotificationColors()
							for Index, Value in Library.UI.Notifications do
								local R, G, B = Library.Theme.Default.Accent.r * 255, Library.Theme.Default.Accent.g * 255, Library.Theme.Default.Accent.b * 255
								local OldText = Value.Text.Text
								local NamePattern = Library.UI.Name:gsub("([%%%^%$%(%)%.%[%]%*%+%-%?])", "%%%1")
								local CleanText = OldText:gsub("%s*<font color='rgb%(%d+,%s*%d+,%s*%d+%)'>%[?" .. NamePattern .. "%]?%s*</font>%s*-%s*", "")
								--
								Value.Text.Text = ("<font color='rgb(%d, %d, %d)'>[%s]</font> - %s"):format(R, G, B, Library.UI.Name, CleanText)
							end
						end
						--
						function Notification:RemoveFrame()
							for Index, Value in Notification["2"]:GetDescendants() do
								if Value:IsA("Frame") then
									Library:TweenObject(Value, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 1})
								elseif Value:IsA("TextLabel") then
									Library:TweenObject(Value, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 1})
								elseif Value:IsA("ImageLabel") then
									Library:TweenObject(Value, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {ImageTransparency = 1})
								elseif Value:IsA("UIStroke") then
									Library:TweenObject(Value, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Transparency = 1})
								end
							end
							--
							Library:TweenObject(Notification["3"], TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 1})
							Library:TweenObject(Notification["4"], TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {ImageTransparency = 1})
							Library:TweenObject(Notification["2"], TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 1})
							--
							task.delay(0.41, function()
								Notification["2"]:Destroy()
								Notification["3"]:Destroy()
								
								table.remove(Library.UI.Notifications, table.find(Library.UI.Notifications, NotificationFrame))

								Notification:UpdatePositions()
							end)
						end
						--
						function Notification:UpdateText(Text)
							local R, G, B = Library.Theme.Default.Accent.r * 255, Library.Theme.Default.Accent.g * 255, Library.Theme.Default.Accent.b * 255
							--
							Notification["6"].Text = ("<font color='rgb(%d, %d, %d)'>[%s]</font> - %s"):format(R, G, B, Library.UI.Name, Text)
							Notification["6"].Size = UDim2.new(Notification["6"].Size.X.Scale, Notification["6"].Size.X.Offset, 0, math.huge)
                            Notification["6"].Size = UDim2.new(Notification["6"].Size.X.Scale, Notification["6"].Size.X.Offset, 0, Notification["6"].TextBounds.Y)
                            Notification["2"].Size = UDim2.new(Notification["2"].Size.X.Scale, Notification["6"].TextBounds.X + 10, 0, Notification["6"].TextBounds.Y + 13)
                            Notification["3"].Size = UDim2.new(Notification["2"].Size.X.Scale, Notification["6"].TextBounds.X + 10, 0, Notification["6"].TextBounds.Y + 13)
						end
						--
						function Notification:Update()
                            Notification["6"].Size = UDim2.new(Notification["6"].Size.X.Scale, Notification["6"].Size.X.Offset, 0, math.huge)
                            Notification["6"].Size = UDim2.new(Notification["6"].Size.X.Scale, Notification["6"].Size.X.Offset, 0, Notification["6"].TextBounds.Y)
                            Notification["2"].Size = UDim2.new(Notification["2"].Size.X.Scale, Notification["6"].TextBounds.X + 10, 0, Notification["6"].TextBounds.Y + 13)
                            Notification["3"].Size = UDim2.new(Notification["2"].Size.X.Scale, Notification["6"].TextBounds.X + 10, 0, Notification["6"].TextBounds.Y + 13)
							--
							for Index, Value in Notification["2"]:GetDescendants() do
								if Value:IsA("Frame") and Value.Name ~= "DropShadowHolder" then
									Library:TweenObject(Value, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 0})
								elseif Value:IsA("TextLabel") then
									Library:TweenObject(Value, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0})
								elseif Value:IsA("ImageLabel") and Value.Name ~= "DropShadow" then
									Library:TweenObject(Value, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {ImageTransparency = 0})
								elseif Value:IsA("UIStroke") then
									Library:TweenObject(Value, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Transparency = 0})
								end
							end
							--
							Library:TweenObject(Notification["2"], TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 0})
							Library:TweenObject(Notification["3"], TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 0})
							Library:TweenObject(Notification["4"], TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {ImageTransparency = 0.5})
							--
							local NewPosition = UDim2.new(0, 10, 0, 50 + (#Library.UI.Notifications * 31))
							--
							Library:TweenObject(Notification["3"], TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = UDim2.new(0, 10, 0, 50 + (#Library.UI.Notifications * 31))})
							Library:TweenObject(Notification["2"], TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = UDim2.new(0, 10, 0, 50 + (#Library.UI.Notifications * 31))}, function()
								Library:TweenObject(Notification["8"], TweenInfo.new(Options.Delay, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 1)}, function()
									Notification:RemoveFrame()
								end)
							end)
						end
					end
					--
					Notification:Update()
					--
					table.insert(Library.UI.Notifications, 1, NotificationFrame)
					--
					Notification:UpdatePositions()
					--
					return Notification
				end
			end
			--
			return Tab
		end
		--
		function Library:Init()
			Library.UI.Initialized = true
			--
			if getgenv().AutoLoadConfig then
				Library:LoadConfig(readfile("Elevated/Configs/" .. getgenv().AutoLoadConfig .. ".cfg"))
			end
			--
			Library:Connection(Camera:GetPropertyChangedSignal("ViewportSize"), function()
				Viewport = Camera.ViewportSize
				--
				GUI["2"].Position = UDim2.fromOffset((Viewport.X / 2) - (GUI["2"].Size.X.Offset / 2), 7)
				GUI["3"].Position = UDim2.fromOffset((Viewport.X / 2) - (GUI["2"].Size.X.Offset / 2), 7)
				--
				Library:UpdateKeybindPosition()
			end)
		end
		--
		return GUI
	end
end
